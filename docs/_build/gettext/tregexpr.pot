# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-04 20:01+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../tregexpr.rst:2
# 38c540a453ae4959b81179309d71fad2
msgid "TRegExpr"
msgstr ""

#: ../../tregexpr.rst:4
# 1b35c40b58434ce08011ce8b4b1281dd
msgid "Implements `regular expressions <regular_expressions.html>`_ in pure pascal. Is compatible with Free Pascal, Delphi 2-7, Borland C++ Builder 3-6."
msgstr ""

#: ../../tregexpr.rst:7
# 5e623a73afae41c688b18834dc47b966
msgid "To use it just copy `source code <https://github.com/masterandrey/TRegExpr/blob/master/src/RegExpr.pas>`_ into your project."
msgstr ""

#: ../../tregexpr.rst:10
# 0c059da7ea744524a21dca4c03eb5e08
msgid "The library had already included into `Lazarus (Free Pascal) <http://wiki.freepascal.org/Regexpr>`_ project so you do not need to copy anything if you use `Lazarus <https://www.lazarus-ide.org/>`_."
msgstr ""

#: ../../tregexpr.rst:15
# dad2ce27a76a493999ee1dd0810dce84
msgid "TRegExpr class"
msgstr ""

#: ../../tregexpr.rst:18
# f98e72ac285e4fd3af6a40cd9dfeb110
msgid "VersionMajor, VersionMinor"
msgstr ""

#: ../../tregexpr.rst:20
# c7de356b46a449f9aa6a4e4f8f6ced23
msgid "Return major and minor version, for example, for ``version 0.944``"
msgstr ""

#: ../../tregexpr.rst:24
# d000e079152d4589adc8e55f58fa9835
msgid "VersionMajor = 0\n"
"VersionMinor = 944"
msgstr ""

#: ../../tregexpr.rst:28
# 2a85e836d4e442a1b305660c3d54d7bf
msgid "Expression"
msgstr ""

#: ../../tregexpr.rst:30
# 499be78f84734798bc8573020a1a2e9e
msgid "Regular expression."
msgstr ""

#: ../../tregexpr.rst:32
# 02e15e8e7fa34ba298e31659e54e4603
msgid "For optimization, TRegExpr will automatically compiles it into ``P-code`` (you can see it with help of Dump_ method) and stores in internal structures."
msgstr ""

#: ../../tregexpr.rst:36
# 3139f80e8050479c865cd7cba0466c84
msgid "Regular expresion is re-compiled only if you call Exec_, ExecNext_, Substitute_, Dump_, etc. And only if Expression_ was changed after last compilation."
msgstr ""

#: ../../tregexpr.rst:40
# 06a068eb78bf456c915006f3b3fd050f
msgid "In case of any errors in compilation, ``Error`` method is called (by default ``Error`` raises exception ERegExpr_)"
msgstr ""

#: ../../tregexpr.rst:44
# 215faa741d804fa28e1ab58140732d42
msgid "ModifierStr"
msgstr ""

#: ../../tregexpr.rst:46
# 99655fa0026c45faac10cbabc4fe8116
msgid "Set or get default values of `r.e.modifiers <regular_expressions.html#modifiers>`__."
msgstr ""

#: ../../tregexpr.rst:49
# fd969ed7b04f470c9ebb28f3578036ba
msgid "Format of the string is similar as in `(?ismx-ismx) <regular_expressions.html#inlinemodifiers>`__. For example ``ModifierStr := ‘i-x’`` will switch on modifier `/i <regular_expressions.html#i>`_, switch off `/x <regular_expressions.html#x>`_ and leave unchanged others."
msgstr ""

#: ../../tregexpr.rst:54
# 46f882f302864c8397addb697a2c7237
msgid "If you try to set unsupported modifier, ``Error`` will be called."
msgstr ""

#: ../../tregexpr.rst:57
# 5b0008685c3d416a8f51fdf5ca9c9b39
msgid "ModifierI"
msgstr ""

#: ../../tregexpr.rst:59
# cc6e17a6d80e432b829fe0b6326f7a87
msgid "`Modifier /i, \"case-insensitive\" <regular_expressions.html#i>`, initialized with RegExprModifierI_ value."
msgstr ""

#: ../../tregexpr.rst:63
# 2f0047d555c14a3e8de98a7d8eb8ac50
msgid "ModifierR"
msgstr ""

#: ../../tregexpr.rst:65
# 839992bf0afb4ad192d60defd641dcc7
msgid "`Modifier /r, \"Russian range extension\" <regular_expressions.html#r>`_, initialized with RegExprModifierR_ value."
msgstr ""

#: ../../tregexpr.rst:69
# e97c822721e74e1786b072722729f780
msgid "ModifierS"
msgstr ""

#: ../../tregexpr.rst:71
# cc6e17a6d80e432b829fe0b6326f7a87
msgid "`Modifier /s, \"single line strings\" <regular_expressions.html#s>`_, initialized with RegExprModifierS_ value."
msgstr ""

#: ../../tregexpr.rst:75
# 87ea32c8b21941b3a74914a398b7cc41
msgid "ModifierG"
msgstr ""

#: ../../tregexpr.rst:77
# cc6e17a6d80e432b829fe0b6326f7a87
msgid "`Modifier /g, \"greediness\" <regular_expressions.html#g>`_, initialized with RegExprModifierG_ value."
msgstr ""

#: ../../tregexpr.rst:81
# d7509d9e72944d2ab7322ced7035c95c
msgid "ModifierM"
msgstr ""

#: ../../tregexpr.rst:83
# cc6e17a6d80e432b829fe0b6326f7a87
msgid "`Modifier /m, \"multi-line strings\" <regular_expressions.html#m>`_, initialized with RegExprModifierM_ value."
msgstr ""

#: ../../tregexpr.rst:87
# c908bfb9a90d4362bf669175cde389cb
msgid "ModifierX"
msgstr ""

#: ../../tregexpr.rst:89
# cc6e17a6d80e432b829fe0b6326f7a87
msgid "`Modifier /x, \"eXtended syntax\" <regular_expressions.html#x>`_, initialized with RegExprModifierX_ value."
msgstr ""

#: ../../tregexpr.rst:93
# 0e704456c23e48f69ccdf14802505d25
msgid "Exec"
msgstr ""

#: ../../tregexpr.rst:95
# c75c32e6d732466a89f6d6b7571e09fe
msgid "Match the regular expression against ``AInputString``."
msgstr ""

#: ../../tregexpr.rst:97
# 3140a065cf914827aafd54fc0ad5a940
msgid "Available overloaded ``Exec`` version without ``AInputString`` - it uses ``AInputString`` from previous call."
msgstr ""

#: ../../tregexpr.rst:100
# 566f3fb352474b34844dfa979a8e454b
msgid "See also global function ExecRegExpr_ that you can use without explicit ``TRegExpr`` object creation."
msgstr ""

#: ../../tregexpr.rst:104
# 901418a6698f44f897e08a572bff77ce
msgid "ExecNext"
msgstr ""

#: ../../tregexpr.rst:106
# 7e6c90e9d304410d941046679fa81975
msgid "Find next match."
msgstr ""

#: ../../tregexpr.rst:108
# 3692f197c5a9492598fb524452a29e49
msgid "Without parameter works the same as"
msgstr ""

#: ../../tregexpr.rst:112
# 9554d95b145844e9a0fac077f7e8a560
msgid "if MatchLen [0] = 0\n"
"  then ExecPos (MatchPos [0] + 1)\n"
"  else ExecPos (MatchPos [0] + MatchLen [0]);"
msgstr ""

#: ../../tregexpr.rst:116
# a925f1db28104a15bc3a4af88cf87295
msgid "Raises exception if used without preceeding successful call to Exec_, ExecPos_ or ExecNext_."
msgstr ""

#: ../../tregexpr.rst:119
# 0e849c7e466844a2b3c5b4b0579748a8
msgid "So you always must use something like"
msgstr ""

#: ../../tregexpr.rst:123
# a5be303551c641f986789278754e8e17
msgid "if Exec (InputString)\n"
"  then\n"
"    repeat\n"
"      { proceed results}\n"
"    until not ExecNext;"
msgstr ""

#: ../../tregexpr.rst:130
# accdc15bd2414c67959ca91416523513
msgid "ExecPos"
msgstr ""

#: ../../tregexpr.rst:132
# 1172f9ed94d841d8846cf65a3c6ecd11
msgid "Finds match for ``InputString`` starting from ``AOffset`` position"
msgstr ""

#: ../../tregexpr.rst:136
# 36293936a5c84f5ba15ca349c26ed788
msgid "AOffset = 1 // first char of InputString"
msgstr ""

#: ../../tregexpr.rst:139
# 6fbc46c569d0493294875a3236143bab
msgid "InputString"
msgstr ""

#: ../../tregexpr.rst:141
# df00a5840a8d4505bc9b7f529721be25
msgid "Returns current input string (from last Exec_ call or last assign to this property)."
msgstr ""

#: ../../tregexpr.rst:144
# 91170fb5c01946fab9f13c46aa639c3b
msgid "Any assignment to this property clears Match_, MatchPos_ and MatchLen_."
msgstr ""

#: ../../tregexpr.rst:147
# 4c92cf154cce41c1bc65dae09f0f4bb1
msgid "Substitute"
msgstr ""

#: ../../tregexpr.rst:149
# a28509e7090645779c4c3e10fea38822
msgid "Returns ``ATemplate`` with ``$&`` or ``$0`` replaced by whole regular expression and ``$n`` replaced by occurence of subexpression number ``n``."
msgstr ""

#: ../../tregexpr.rst:152
# a19c2993b6c043f4b02483215c240fd4
msgid "To place into template characters ``$`` or ``\\``, use prefix ``\\``, like ``\\\\`` or ``\\$``."
msgstr ""

#: ../../tregexpr.rst:155
# 99e6f70b4645433e97923e39ef6ad443
msgid "symbol"
msgstr ""

#: ../../tregexpr.rst:155
# 97eb5bdc52ca4dc0aeee00fa4a5f3fca
msgid "description"
msgstr ""

#: ../../tregexpr.rst:157
# 615804c63e6b4a138a7e80271d62082b
msgid "``$&``"
msgstr ""

#: ../../tregexpr.rst:157
#: ../../tregexpr.rst:158
# 17a7b341d6fc4c588328b20b1178acc9
# 17a7b341d6fc4c588328b20b1178acc9
msgid "whole regular expression match"
msgstr ""

#: ../../tregexpr.rst:158
# a3e3160f96b24395bca4abc248cd7440
msgid "``$0``"
msgstr ""

#: ../../tregexpr.rst:159
# a5dfe79bc6b140288a4f978913b56882
msgid "``$n``"
msgstr ""

#: ../../tregexpr.rst:159
# f6ec6276f6c04d37b7a5c59d75e44e1a
msgid "regular subexpression ``n`` match"
msgstr ""

#: ../../tregexpr.rst:160
# da45d7a572fc45c5a75830f634ccaffe
msgid "``\\n``"
msgstr ""

#: ../../tregexpr.rst:160
# c5d2f29db0554b6ca55b962d007563f8
msgid "in Windows replaced with ``\\r\\n``"
msgstr ""

#: ../../tregexpr.rst:161
# 444bc4fbd8d94e69a1ba5d21cb1b608e
msgid "``\\l``"
msgstr ""

#: ../../tregexpr.rst:161
# f421e47b47f1465e8398852df7add6f6
msgid "lowcase one next char"
msgstr ""

#: ../../tregexpr.rst:162
# 90a248a24b89440aa6d2d6382eafa59a
msgid "``\\L``"
msgstr ""

#: ../../tregexpr.rst:162
# fa162dff7fef49d4818821f75e11a756
msgid "lowercase all chars after that"
msgstr ""

#: ../../tregexpr.rst:163
# 580297e5d8d046ef803101fa26f27806
msgid "``\\u``"
msgstr ""

#: ../../tregexpr.rst:163
# 0c5839e9c83e474b8717694c4e34b9d6
msgid "uppcase one next char"
msgstr ""

#: ../../tregexpr.rst:164
# 00b318b2fbcb4c62ab6f9fdb11a0e5d1
msgid "``\\U``"
msgstr ""

#: ../../tregexpr.rst:164
# 7ffb31af33cb4582ba42b64a3a683043
msgid "uppercase all chars after that"
msgstr ""

#: ../../tregexpr.rst:169
# 6e16afdd050e4f368892de2da891c5d0
msgid "'1\\$ is $2\\\\rub\\\\' -> '1$ is <Match[2]>\\rub\\'\n"
"'\\U$1\\\\r' transforms into '<Match[1] in uppercase>\\r'"
msgstr ""

#: ../../tregexpr.rst:172
# 4b85168153b84479a80bb8202b1dfbcf
msgid "If you want to place raw digit after ‘$n’ you must delimit ``n`` with curly braces ``{}``."
msgstr ""

#: ../../tregexpr.rst:177
# 85569e13faf7400f884bb57d5fc5a26e
msgid "'a$12bc' -> 'a<Match[12]>bc'\n"
"'a${1}2bc' -> 'a<Match[1]>2bc'."
msgstr ""

#: ../../tregexpr.rst:181
# 9285f4f0589c4df88ed9a1b9d25cc774
msgid "Split"
msgstr ""

#: ../../tregexpr.rst:183
# 471e9a74ee6f4427adfbcb9831c7ad5b
msgid "Split AInputStr into APieces by r.e. occurencies"
msgstr ""

#: ../../tregexpr.rst:185
#: ../../tregexpr.rst:213
# b322778a78174b19a1ec867d734b92fe
# b322778a78174b19a1ec867d734b92fe
msgid "Internally calls Exec_ / ExecNext_"
msgstr ""

#: ../../tregexpr.rst:187
# 0d64e7cd9fc344a5b7d389ec5306d7f0
msgid "See also global function SplitRegExpr_ that you can use without explicit ``TRegExpr`` object creation."
msgstr ""

#: ../../tregexpr.rst:193
# 40886178c28345688eeab68c4ca19f58
msgid "Replace, ReplaceEx"
msgstr ""

#: ../../tregexpr.rst:195
# 09523f19b3134cd0a900969dbc980445
msgid "Returns the string with r.e. occurencies replaced by the replace string."
msgstr ""

#: ../../tregexpr.rst:197
# 2253e3011c6f4789b9c96651014918ff
msgid "If last argument (``AUseSubstitution``) is true, then ``AReplaceStr`` will be used as template for Substitution methods."
msgstr ""

#: ../../tregexpr.rst:202
# 06bb14e2e3d44cd885e9003370843147
msgid "Expression := '((?i)block|var)\\s*(\\s*\\([^ ]*\\)\\s*)\\s*';\n"
"Replace ('BLOCK( test1)', 'def \"$1\" value \"$2\"', True);"
msgstr ""

#: ../../tregexpr.rst:205
# 19c18b1de0f140e6b54eb9b509ffb64b
msgid "Returns ``def \"BLOCK\" value \"test1\"``"
msgstr ""

#: ../../tregexpr.rst:209
# 5fe9c622e60040068319f376dc86f17c
msgid "Replace ('BLOCK( test1)', 'def \"$1\" value \"$2\"', False)"
msgstr ""

#: ../../tregexpr.rst:211
# 468582f17cf44aa99caf539ca7906a57
msgid "Returns ``def \"$1\" value \"$2\"``"
msgstr ""

#: ../../tregexpr.rst:215
# 217cf585377e4a5a87cd0d665e3ef7e9
msgid "Overloaded version and ``ReplaceEx`` operate with call-back function, so you can implement really complex functionality."
msgstr ""

#: ../../tregexpr.rst:218
# 3e40efdfe68a447a865227806a4c7649
msgid "See also global function ReplaceRegExpr_ that you can use without explicit ``TRegExpr`` object creation."
msgstr ""

#: ../../tregexpr.rst:222
# bc9f9ad63fa947458f625b6264d75cda
msgid "SubExprMatchCount"
msgstr ""

#: ../../tregexpr.rst:224
# d5ba0e249bdd4d8da0cfa8cfdeabbe6f
msgid "Number of subexpressions has been found in last Exec_ / ExecNext_ call."
msgstr ""

#: ../../tregexpr.rst:226
# d72f338a23914f4da1e709843b857975
msgid "If there are no subexpr. but whole expr was found (Exec\\* returned True), then ``SubExprMatchCount=0``, if no subexpressions nor whole r.e. found (Exec_ / ExecNext_ returned false) then ``SubExprMatchCount=-1``."
msgstr ""

#: ../../tregexpr.rst:230
# 2767db19f2ce40f78b7da4cb1b8153c2
msgid "Note, that some subexpr. may be not found and for such subexpr. ``MathPos=MatchLen=-1`` and ``Match=’’``."
msgstr ""

#: ../../tregexpr.rst:235
# d3f54fd075074e0481f0beeed23208ea
msgid "Expression := '(1)?2(3)?';\n"
"Exec ('123'): SubExprMatchCount=2, Match[0]='123', [1]='1', [2]='3'\n"
"\n"
"Exec ('12'): SubExprMatchCount=1, Match[0]='12', [1]='1'\n"
"\n"
"Exec ('23'): SubExprMatchCount=2, Match[0]='23', [1]='', [2]='3'\n"
"\n"
"Exec ('2'): SubExprMatchCount=0, Match[0]='2'\n"
"\n"
"Exec ('7') - return False: SubExprMatchCount=-1"
msgstr ""

#: ../../tregexpr.rst:248
# d6446a058569424690d3f8bfbd469117
msgid "MatchPos"
msgstr ""

#: ../../tregexpr.rst:250
# e0784531b3c640539018d95c97165d23
msgid "pos of entrance subexpr. ``#Idx`` into tested in last ``Exec*`` string. First subexpr. have ``Idx=1``, last - ``MatchCount``, whole r.e. have ``Idx=0``."
msgstr ""

#: ../../tregexpr.rst:254
# a66ed6de99ff46099378eedabcf77813
msgid "Returns ``-1`` if in r.e. no such subexpr. or this subexpr. not found in input string."
msgstr ""

#: ../../tregexpr.rst:258
# 04f50017d5d444659d11747e8362b1df
msgid "MatchLen"
msgstr ""

#: ../../tregexpr.rst:260
# 8e884ab088554170b70d0b9d2692c809
msgid "len of entrance subexpr. ``#Idx`` r.e. into tested in last ``Exec*`` string. First subexpr. have ``Idx=1``, last - MatchCount, whole r.e. have ``Idx=0``."
msgstr ""

#: ../../tregexpr.rst:264
# bbba58adb0954e1e88c524d9bb34160b
msgid "Returns -1 if in r.e. no such subexpr. or this subexpr. not found in input string."
msgstr ""

#: ../../tregexpr.rst:268
# da753df4c443438b8abe57a911637416
msgid "Match"
msgstr ""

#: ../../tregexpr.rst:270
# 02a23874f30c452da792eda482fd62e9
msgid "Returns ``’’`` if in r.e. no such subexpression or this subexpression was not found in the input string."
msgstr ""

#: ../../tregexpr.rst:274
# 89ec4afadd974ba188387c67bc86f14f
msgid "LastError"
msgstr ""

#: ../../tregexpr.rst:276
# 5adfd6f2bf3d4083a7fd8d5af8db4cd8
msgid "Returns ``ID`` of last error, ``0`` if no errors (unusable if ``Error`` method raises exception) and clear internal status into ``0`` (no errors)."
msgstr ""

#: ../../tregexpr.rst:280
# 8902c40fabf34dadbaaca281acc2207e
msgid "ErrorMsg"
msgstr ""

#: ../../tregexpr.rst:282
# f0dcf06301844649adfbadb8d8a8d6d4
msgid "Returns ``Error`` message for error with ``ID = AErrorID``."
msgstr ""

#: ../../tregexpr.rst:285
# 6e49cd6c15b84f38ba4e22529accdaf7
msgid "CompilerErrorPos"
msgstr ""

#: ../../tregexpr.rst:287
# 73e266fea1294fdea0be2ce8a84d81a1
msgid "Returns pos in r.e. there compiler stopped."
msgstr ""

#: ../../tregexpr.rst:289
# 68a43b758c6948a18e6701b8fb00812e
msgid "Useful for error diagnostics"
msgstr ""

#: ../../tregexpr.rst:292
# 18c8e71b482b4b13aff769194f90df6c
msgid "SpaceChars"
msgstr ""

#: ../../tregexpr.rst:294
# 6c1028cadcb44c92b5d9b529824d72ff
msgid "Contains chars, treated as ``\\s`` (initially filled with RegExprSpaceChars_ global constant)"
msgstr ""

#: ../../tregexpr.rst:298
# 8cf870efcd0d4c7a8b0cc93e84516465
msgid "WordChars"
msgstr ""

#: ../../tregexpr.rst:300
# a270f810074240d9b63651ad4c4a8a17
msgid "Contains chars, treated as ``\\w`` (initially filled with RegExprWordChars_ global constant)"
msgstr ""

#: ../../tregexpr.rst:305
# 6a97370bdeab422bb5ae0c9b3a036f97
msgid "LineSeparators"
msgstr ""

#: ../../tregexpr.rst:307
# f24790b4283644b8b544d7e2a5da684a
msgid "line separators (like ``\\n`` in Unix), initially filled with RegExprLineSeparators_ global constant)"
msgstr ""

#: ../../tregexpr.rst:310
#: ../../tregexpr.rst:321
# 9a2790f4b35b46dd8d067f2601a11d2e
# 9a2790f4b35b46dd8d067f2601a11d2e
msgid "see also `about line separators <regular_expressions.html#line-separators>`__"
msgstr ""

#: ../../tregexpr.rst:314
# 365d71bfb73645d8ac1dc3bc69bebba2
msgid "LinePairedSeparator"
msgstr ""

#: ../../tregexpr.rst:316
# 0858c0e771ff4062a02f4f60e60b319c
msgid "paired line separator (like ``\\r\\n`` in DOS and Windows)."
msgstr ""

#: ../../tregexpr.rst:318
# 908fba08a9e14d618d0639c8a52414ec
msgid "must contain exactly two chars or no chars at all, initially filled with RegExprLinePairedSeparator global constant)"
msgstr ""

#: ../../tregexpr.rst:324
# d5fcd4a7ae984f41954575a890a13689
msgid "For example, if you need Unix-style behaviour, assign ``LineSeparators := #$a`` and ``LinePairedSeparator := ''`` (empty string)."
msgstr ""

#: ../../tregexpr.rst:327
# c3211083e90a4a39a944ec1bc4b36deb
msgid "If you want to accept as line separators only ``\\x0D\\x0A`` but not ``\\x0D`` or ``\\x0A`` alone, then assign ``LineSeparators := ''`` (empty string) and ``LinePairedSeparator := #$d#$a``."
msgstr ""

#: ../../tregexpr.rst:331
# e9b5de25fffd431483ee4bf0e87e2c9e
msgid "By default ‘mixed’ mode is used (defined in RegExprLine[Paired]Separator[s] global constants):"
msgstr ""

#: ../../tregexpr.rst:336
# 7e4dfafc0da343818e7c236d3a8a61a2
msgid "LineSeparators := #$d#$a;\n"
"LinePairedSeparator := #$d#$a"
msgstr ""

#: ../../tregexpr.rst:339
# d8be7f9e6d1d4bb482ae504c9a589919
msgid "Behaviour of this mode is detailed described in the `syntax section <regular_expressions.html#syntax_line_separators>`__."
msgstr ""

#: ../../tregexpr.rst:343
# c9a5033ddf894b9da56c691eb013541f
msgid "InvertCase"
msgstr ""

#: ../../tregexpr.rst:345
# 695956b458584ac29fd3a42ac17e9671
msgid "Set this property if you want to override case-insensitive functionality."
msgstr ""

#: ../../tregexpr.rst:349
# e3afaecd54dd4fb3b652545a4477e036
msgid "Compile"
msgstr ""

#: ../../tregexpr.rst:351
# d44c9ef8b2a74f4c855c33ee7671d119
msgid "Compiles regular expression."
msgstr ""

#: ../../tregexpr.rst:353
# 9772176176724152abcfa01ce5275d48
msgid "Useful for example for GUI regular expressions editors - to check regular expression without using it."
msgstr ""

#: ../../tregexpr.rst:357
# a3e43476373a48978533b7dd6819d647
msgid "Dump"
msgstr ""

#: ../../tregexpr.rst:359
# a80b2e57d8cb464d8ea2e4a12fa4fbe7
msgid "Show ``P-code`` (compiled regular expression) as human-readable string."
msgstr ""

#: ../../tregexpr.rst:362
# 9f264ffc0a2b4738b7670ee5ad10a703
msgid "Global constants"
msgstr ""

#: ../../tregexpr.rst:365
# 27406b79d7294fc281b4b1e526b94aa5
msgid "EscChar"
msgstr ""

#: ../../tregexpr.rst:367
# 125f2a4e7a824ac8bc65b2b761482b42
msgid "Escape-char, by default ``\\``."
msgstr ""

#: ../../tregexpr.rst:370
# b694219c815443b39f3e092d12171dba
msgid "RegExprModifierI"
msgstr ""

#: ../../tregexpr.rst:372
# 088ef484a7bd4a65a20b1d88022ce0d0
msgid "`Modifier i <regular_expressions.html#i>`_ default value"
msgstr ""

#: ../../tregexpr.rst:375
# aa9c039a53d74df59987ae3abed1ce18
msgid "RegExprModifierR"
msgstr ""

#: ../../tregexpr.rst:377
# 217317d65eee4edd9e01483cd49a0d83
msgid "`Modifier r <regular_expressions.html#r>`_ default value"
msgstr ""

#: ../../tregexpr.rst:380
# 45cda2c7f6ca40c0ab899663a0f65f05
msgid "RegExprModifierS"
msgstr ""

#: ../../tregexpr.rst:382
# 59b7ae2c56fa49f5801c1d3af277f8e8
msgid "`Modifier s <regular_expressions.html#s>`_ default value"
msgstr ""

#: ../../tregexpr.rst:385
# 58bc3091060d4399a02951ec97630f33
msgid "RegExprModifierG"
msgstr ""

#: ../../tregexpr.rst:387
# da0b49d2a3d74b32988134b30e573819
msgid "`Modifier g <regular_expressions.html#g>`_ default value"
msgstr ""

#: ../../tregexpr.rst:390
# 0d2a949eb6a340399449ebacb03097ac
msgid "RegExprModifierM"
msgstr ""

#: ../../tregexpr.rst:392
# 60489a8dd5f24d2ba28233c0a1458f2d
msgid "`Modifier m <regular_expressions.html#m>`_ default value"
msgstr ""

#: ../../tregexpr.rst:395
# aeb6c43c45a84a549d44b4de741fe653
msgid "RegExprModifierX"
msgstr ""

#: ../../tregexpr.rst:397
# b491af4c78b94bc18fc874d59524b7a1
msgid "`Modifier x <regular_expressions.html#x>`_ default value"
msgstr ""

#: ../../tregexpr.rst:400
# ad707065285c43e18a9477e6ede04d9b
msgid "RegExprSpaceChars"
msgstr ""

#: ../../tregexpr.rst:402
# d97ac5ca4291439d9990079ff07d9b1b
msgid "Default for SpaceChars_ property"
msgstr ""

#: ../../tregexpr.rst:406
# 4aa0deda29784187946dd010c02c5aec
msgid "RegExprWordChars"
msgstr ""

#: ../../tregexpr.rst:408
# e31a20227b1f463f8eb30a51a63d9b12
msgid "Default value for WordChars_ property"
msgstr ""

#: ../../tregexpr.rst:412
# 587f145f49a743a7ac74d65b58a7d6d4
msgid "RegExprLineSeparators"
msgstr ""

#: ../../tregexpr.rst:414
# 02f6f3bc3f3240999252663ffb1946ba
msgid "Default value for LineSeparators_ property"
msgstr ""

#: ../../tregexpr.rst:417
# f11ef3231f4a4f7c976633edcbf6cdde
msgid "RegExprLinePairedSeparator"
msgstr ""

#: ../../tregexpr.rst:419
# 845c9e7f55954551b55b737424a5aa70
msgid "Default value for LinePairedSeparator_ property"
msgstr ""

#: ../../tregexpr.rst:423
# ad093a53ba3d4944a8d9921577e5b6e3
msgid "RegExprInvertCaseFunction"
msgstr ""

#: ../../tregexpr.rst:425
# 39bb61941e1b44c1b2df720ff7b38904
msgid "Default for InvertCase_ property"
msgstr ""

#: ../../tregexpr.rst:428
# 0539fbf94edd40388db5e2100343c4c5
msgid "Global functions"
msgstr ""

#: ../../tregexpr.rst:430
# ff352fde8a094be0b82e9b5e15427f0c
msgid "All this functionality is available as methods of ``TRegExpr``, but with global functions you do not need to create ``TReExpr`` instance so your code would be more simple if you just need one function."
msgstr ""

#: ../../tregexpr.rst:435
# 976f67edefab42f3ac9f276d20a8a6bf
msgid "ExecRegExpr"
msgstr ""

#: ../../tregexpr.rst:437
# 379c9c62941e4aaba9f5033fbe5164ec
msgid "true if the string matches the regular expression. Just as Exec_ in ``TRegExpr``."
msgstr ""

#: ../../tregexpr.rst:441
# 8ebb3f82d0ed4174b953a0d49c6e3225
msgid "SplitRegExpr"
msgstr ""

#: ../../tregexpr.rst:443
# 50b241d388564b3897942fe14045c6a4
msgid "Splits the string by regular expressions. See also Split_ if you prefer to create ``TRegExpr`` instance explicitly."
msgstr ""

#: ../../tregexpr.rst:447
# 848d75458db94f55aa25dc110c38dab1
msgid "ReplaceRegExpr"
msgstr ""

#: ../../tregexpr.rst:449
# 3446fdd5d12849ca9d526b4ac3599206
msgid "Returns the string with regular expressions replaced by the ``AReplaceStr``. See also Replace_ if you prefer to create TRegExpr instance explicitly."
msgstr ""

#: ../../tregexpr.rst:452
# 1b6dc7fa59294b0ba3653468f5cee2d4
msgid "If last argument (``AUseSubstitution``) is true, then ``AReplaceStr`` will be used as template for ``Substitution methods``:"
msgstr ""

#: ../../tregexpr.rst:457
# 2bf6d65a1443409384b682e259c5be76
msgid "ReplaceRegExpr (\n"
"  '((?i)block|var)\\s*(\\s*\\([^ ]*\\)\\s*)\\s*',\n"
"  'BLOCK(test1)',\n"
"  'def \"$1\" value \"$2\"',\n"
"  True\n"
")"
msgstr ""

#: ../../tregexpr.rst:464
# 19c18b1de0f140e6b54eb9b509ffb64b
msgid "Returns  ``def 'BLOCK' value 'test1'``"
msgstr ""

#: ../../tregexpr.rst:466
# ab2ee91a93a44e7ea26959497f57dd99
msgid "But this one (note there is no last argument):"
msgstr ""

#: ../../tregexpr.rst:470
# 2bf6d65a1443409384b682e259c5be76
msgid "ReplaceRegExpr (\n"
"  '((?i)block|var)\\s*(\\s*\\([^ ]*\\)\\s*)\\s*',\n"
"  'BLOCK(test1)',\n"
"  'def \"$1\" value \"$2\"'\n"
")"
msgstr ""

#: ../../tregexpr.rst:476
# 468582f17cf44aa99caf539ca7906a57
msgid "Returns ``def \"$1\" value \"$2\"``"
msgstr ""

#: ../../tregexpr.rst:479
# 154956e5a5684cfe8fe738b50f2e623e
msgid "Version with options"
msgstr ""

#: ../../tregexpr.rst:481
# cfbcd8a386864fed94530caa92931339
msgid "With ``Options`` you control ``\\n`` behaviour (if ``rroUseOsLineEnd`` then ``\\n`` is replaced with ``\\n\\r`` in Windows and ``\\n`` in Linux). And so on."
msgstr ""

#: ../../tregexpr.rst:484
# 260c91d9e4944a759e3bd73168ebc836
msgid "Type\n"
"  TRegexReplaceOption = (rroModifierI,\n"
"                         rroModifierR,\n"
"                         rroModifierS,\n"
"                         rroModifierG,\n"
"                         rroModifierM,\n"
"                         rroModifierX,\n"
"                         rroUseSubstitution,\n"
"                         rroUseOsLineEnd);"
msgstr ""

#: ../../tregexpr.rst:497
# 1ed790106086420dbcb76422bd55ca5d
msgid "QuoteRegExprMetaChars"
msgstr ""

#: ../../tregexpr.rst:499
# a32c441895684121977d60f0fbd6db0c
msgid "Replace all metachars with its safe representation, for example ``abc'cd.(`` converts into ``abc\\'cd\\.\\(``"
msgstr ""

#: ../../tregexpr.rst:502
# 77d383900a7c4f6588708ac87a1d30f8
msgid "This function usefull for r.e. autogeneration from user input"
msgstr ""

#: ../../tregexpr.rst:505
# a5c9b2e21be44d4783cc11c309b5113c
msgid "RegExprSubExpressions"
msgstr ""

#: ../../tregexpr.rst:507
# bb18fa14624b49f89e7e635017d65415
msgid "Makes list of subexpressions found in ``ARegExpr``"
msgstr ""

#: ../../tregexpr.rst:509
# f5fe823d6b9d44c19a4656fccfb94ec7
msgid "In ``ASubExps`` every item represent subexpression, from first to last, in format:"
msgstr ""

#: ../../tregexpr.rst:512
# 691fb061827f4c34a92dacde681dc4d5
msgid "String - subexpression text (without ‘()’)"
msgstr ""

#: ../../tregexpr.rst:514
# fd9c0421e94f42a2b7c1a24d60b09c3d
msgid "low word of Object - starting position in ARegExpr, including ‘(’ if exists! (first position is 1)"
msgstr ""

#: ../../tregexpr.rst:517
# 36c9774b5f4543b2a3f11b8d3ebed089
msgid "high word of Object - length, including starting ‘(’ and ending ‘)’ if exist!"
msgstr ""

#: ../../tregexpr.rst:520
# 2e1c0fd57150421c9f7fb6dfadd66141
msgid "``AExtendedSyntax`` - must be ``True`` if modifier ``/x`` will be ``On`` while using the r.e."
msgstr ""

#: ../../tregexpr.rst:523
# e124e12c0b9748088e423f0cb5c53c37
msgid "Usefull for GUI editors of r.e. etc (you can find example of using in `REStudioMain.pas <https://github.com/masterandrey/TRegExpr/blob/74ab342b639fc51941a4eea9c7aa53dcdf783592/restudio/REStudioMain.pas#L474>`_)"
msgstr ""

#: ../../tregexpr.rst:527
# 3f20b5860f984ad8b65858dad109f7b3
msgid "Result code"
msgstr ""

#: ../../tregexpr.rst:527
# d1575d03df594bb5a1f5259d9bde1f96
msgid "Meaning"
msgstr ""

#: ../../tregexpr.rst:529
# 4f0a93de521a470f8ccd3bc06efde5d9
msgid "0"
msgstr ""

#: ../../tregexpr.rst:529
# e31c68543c174722ab7814aa70c21d42
msgid "Success. No unbalanced brackets was found"
msgstr ""

#: ../../tregexpr.rst:530
# d5330ee8b4de4800b73f912aee5f0687
msgid "-1"
msgstr ""

#: ../../tregexpr.rst:530
# 61091b3b25774e2cbebe3ab73c70c459
msgid "there are not enough closing brackets ``)``"
msgstr ""

#: ../../tregexpr.rst:531
# 27190c0c3dfd4d35b17fe9b37fc76a4c
msgid "-(n+1)"
msgstr ""

#: ../../tregexpr.rst:531
# 1a26203a8657400c9d453af26cd933de
msgid "at position n was found opening ``[`` without corresponding closing ``]``"
msgstr ""

#: ../../tregexpr.rst:532
# 6c205095ee8d4373983f802772b82aca
msgid "n"
msgstr ""

#: ../../tregexpr.rst:532
# 7b8a44df14a44204b77878f26f7f7f79
msgid "at position n was found closing bracket ``)`` without corresponding opening ``(``"
msgstr ""

#: ../../tregexpr.rst:535
# 5ccc5e356eda4954a316c17918906fa4
msgid "If ``Result <> 0``, then ``ASubExprs`` can contain empty items or illegal ones"
msgstr ""

#: ../../tregexpr.rst:538
# aed94ac85d94421eaa743168b7ac3892
msgid "ERegExpr"
msgstr ""

#: ../../tregexpr.rst:542
# a7223b94cacf4357adc94ff03ab8e197
msgid "ERegExpr = class (Exception)\n"
"  public\n"
"   ErrorCode : integer; // error code. Compilation error codes are before 1000\n"
"   CompilerErrorPos : integer; // Position in r.e. where compilation error occured\n"
" end;"
msgstr ""

#: ../../tregexpr.rst:549
# 5acc362ed76e4abebb386b53cb17ec25
msgid "Unicode"
msgstr ""

#: ../../tregexpr.rst:551
# a7d589b8a607447db3b94266e7a63009
msgid "TRegExpr now supports UniCode, but it works very slow :("
msgstr ""

#: ../../tregexpr.rst:553
# 84722658884048a78b46f8fc469e9bd7
msgid "Who want to optimize it ? ;)"
msgstr ""

#: ../../tregexpr.rst:555
# 428fc56a60244ed9bd7e21fe079b4450
msgid "Use it only if you really need Unicode support !"
msgstr ""

#: ../../tregexpr.rst:557
# c44517be82fc44adbe4f598a2e67cff1
msgid "Remove ``.`` in ``{.$DEFINE UniCode}`` in regexpr.pas. After that all strings will be treated as WideString."
msgstr ""

