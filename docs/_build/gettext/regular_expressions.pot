# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-12 21:15+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../translations_list.rst:6
# 33fa7ef366574502aff1eff05b18dc7e
msgid "`English <https://regex.masterandrey.com/en/latest/index.html>`__"
msgstr ""

#: ../../translations_list.rst:7
# f78866de30184f25aacf1a0ccd28dbd9
msgid "`Русский <https://regex.masterandrey.com/ru/latest/index.html>`__"
msgstr ""

#: ../../translations_list.rst:8
# a527af33c2d34a34ba5ac2cdf817d1c0
msgid "`Deutsch <https://regex.masterandrey.com/de/latest/index.html>`__"
msgstr ""

#: ../../translations_list.rst:9
# 305606a9ef6e40cbb52c6f0690274fd5
msgid "`Български <https://regex.masterandrey.com/bg/latest/index.html>`__"
msgstr ""

#: ../../translations_list.rst:10
# db5cf923a0f24fbd96c31488fea62803
msgid "`Français <https://regex.masterandrey.com/fr/latest/index.html>`__"
msgstr ""

#: ../../translations_list.rst:11
# 94fb67db62c04236bb0ed90f06daaabe
msgid "`Español <https://regex.masterandrey.com/es/latest/index.html>`__"
msgstr ""

#: ../../regular_expressions.rst:4
# f31d49f9e1da427886b0f062a7129019
msgid "Regular expressions (RegEx)"
msgstr ""

#: ../../regular_expressions.rst:7
# 8dfeea7a48b748ccb251c6b79c7bbde6
msgid "Introduction"
msgstr ""

#: ../../regular_expressions.rst:9
# c539fa8fe4d44399835566cc43838186
msgid "Regular expressions are a handy way to specify patterns of text."
msgstr ""

#: ../../regular_expressions.rst:12
# 0a805f8678c04a80993edbbc482c4c80
msgid "With regular expressions you can validate user input, search for some patterns like emails of phone numbers on web pages or in some documents and so on."
msgstr ""

#: ../../regular_expressions.rst:16
# 11368f3398e64ed4b9a63cd2df9d2237
msgid "Below is complete regular expressions cheat sheet just on one page."
msgstr ""

#: ../../regular_expressions.rst:19
# 6b971f651c4b4b07820e06ee5ecd27e0
msgid "Characters"
msgstr ""

#: ../../regular_expressions.rst:22
# cbcf30bb80f24f27b5aaa33c3568efba
msgid "Simple matches"
msgstr ""

#: ../../regular_expressions.rst:24
# 1a85f7fea3964090b7fc47fe009b0c8d
msgid "Any single character matches itself."
msgstr ""

#: ../../regular_expressions.rst:26
# c0259faae4264ac1aaacba2eec964206
msgid "A series of characters matches that series of characters in the input string."
msgstr ""

#: ../../regular_expressions.rst:30
#: ../../regular_expressions.rst:41
#: ../../regular_expressions.rst:52
#: ../../regular_expressions.rst:75
#: ../../regular_expressions.rst:93
#: ../../regular_expressions.rst:103
#: ../../regular_expressions.rst:118
#: ../../regular_expressions.rst:134
#: ../../regular_expressions.rst:148
#: ../../regular_expressions.rst:173
#: ../../regular_expressions.rst:234
#: ../../regular_expressions.rst:256
#: ../../regular_expressions.rst:279
#: ../../regular_expressions.rst:304
#: ../../regular_expressions.rst:317
#: ../../regular_expressions.rst:350
#: ../../regular_expressions.rst:398
#: ../../regular_expressions.rst:522
#: ../../regular_expressions.rst:577
# b7fd8e0c406b46bb8a9752acf4458ef4
# 1a3c6fa6dc1640a5a50d659ffba9a245
# 781dfe3beaa34b3b86bfbc818ab0cd77
# 5b193296f5af4d1ab636bfc9319c35f9
# d9bbe0f1e60b40b5bfd10cb53bee24a4
# d2e4a3f5ccad4d4f96100b44714e3687
# 6193defe03204ea6939ee4e29eeb6c43
# 73220211b800458781ccea0b7633f9b4
# d7ffbb350c5347adaeafe5d586c51943
# 828610d72c2040f2b484be63734ecee6
# 17327948f76b4a6ab35f93522d67f889
# 44a3ccbf85a44207b302c7b1884073df
# 7d02da7813094f138703d97c06022f6c
# df10d6e0b81c4f38b4f6c3e117e05351
# 5d582b03a9b34dc2a9569ac34f11b6c8
# de207813752a4fc789c75b49da9b513a
# a6841a0836714a73a3f71e15e62d5077
# 3a28b30479754ef1802514f3b9212307
# 5afb7dc0e4cd472a923684b23f27567a
msgid "RegEx"
msgstr ""

#: ../../regular_expressions.rst:30
#: ../../regular_expressions.rst:41
#: ../../regular_expressions.rst:52
#: ../../regular_expressions.rst:75
#: ../../regular_expressions.rst:93
#: ../../regular_expressions.rst:103
#: ../../regular_expressions.rst:118
#: ../../regular_expressions.rst:134
#: ../../regular_expressions.rst:148
#: ../../regular_expressions.rst:173
#: ../../regular_expressions.rst:234
#: ../../regular_expressions.rst:256
#: ../../regular_expressions.rst:279
#: ../../regular_expressions.rst:304
#: ../../regular_expressions.rst:317
#: ../../regular_expressions.rst:350
#: ../../regular_expressions.rst:398
#: ../../regular_expressions.rst:522
#: ../../regular_expressions.rst:577
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
# 6b971f651c4b4b07820e06ee5ecd27e0
msgid "Matches"
msgstr ""

#: ../../regular_expressions.rst:32
#: ../../regular_expressions.rst:32
#: ../../regular_expressions.rst:386
#: ../../regular_expressions.rst:387
# 8c06f71125134df88776174790984327
# 8c06f71125134df88776174790984327
# 8c06f71125134df88776174790984327
# 8c06f71125134df88776174790984327
msgid "``foobar``"
msgstr ""

#: ../../regular_expressions.rst:36
# cacc0626b0184a8f875d44798062217b
msgid "Non-Printable Characters (escape-codes)"
msgstr ""

#: ../../regular_expressions.rst:38
# 5d1e876aca5a42b3a5c905294b0d4f30
msgid "To represent non-printable character in regular expression you use ``\\x..``:"
msgstr ""

#: ../../regular_expressions.rst:43
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``\\xnn``"
msgstr ""

#: ../../regular_expressions.rst:43
# 4fdf9b0b732a450fa919d6410c299b23
msgid "character with hex code ``nn``"
msgstr ""

#: ../../regular_expressions.rst:44
# 015bea8c472c43478a5d63e30c8442e5
msgid "``\\x{nnnn}``"
msgstr ""

#: ../../regular_expressions.rst:44
# 254d7e5c962144578714f269163415f5
msgid "character with hex code ``nnnn`` (one byte for plain text and two bytes for Unicode)"
msgstr ""

#: ../../regular_expressions.rst:45
# 09b1c71eb8ef44fba0c999f09e60e11e
msgid "``foo\\x20bar``"
msgstr ""

#: ../../regular_expressions.rst:45
# 54611eb63eb34eccbbab4a42b90d7404
msgid "``foo bar`` (note space in the middle)"
msgstr ""

#: ../../regular_expressions.rst:48
# 394de011985d41cfacc8d5776ff08281
msgid "There are a number of predefined ``escape-codes`` for non-printable characters, just like in ``C`` language:"
msgstr ""

#: ../../regular_expressions.rst:54
# 549416904cd74c13bd00f44cca2431ac
msgid "``\\t``"
msgstr ""

#: ../../regular_expressions.rst:54
# 73125ec06ea84790ba22bb4f71870b25
msgid "tab (HT/TAB), same as ``\\x09``"
msgstr ""

#: ../../regular_expressions.rst:55
# 7fd80b15c29c44c09b9704816c1a9623
msgid "``\\n``"
msgstr ""

#: ../../regular_expressions.rst:55
# 46dcd8a844ef4d6abed5ec6f329d2541
msgid "newline (NL), same as ``\\x0a``"
msgstr ""

#: ../../regular_expressions.rst:56
# 5a488030c74e44e8826073692a77f9c2
msgid "``\\r``"
msgstr ""

#: ../../regular_expressions.rst:56
# 33886a4bdab74b5a8e4c68537233774a
msgid "car.return (CR), same as ``\\x0d``"
msgstr ""

#: ../../regular_expressions.rst:57
# 0d0408cf750a42f5904fc08e3c184b78
msgid "``\\f``"
msgstr ""

#: ../../regular_expressions.rst:57
# c7a3c432397740d1b50061d45535a317
msgid "form feed (FF), same as ``\\x0c``"
msgstr ""

#: ../../regular_expressions.rst:58
# 2144e962544c4ea09f23a8fac385df07
msgid "``\\a``"
msgstr ""

#: ../../regular_expressions.rst:58
# 89f09ace43094c50b730bd891fadcdbf
msgid "alarm (BEL), same as ``\\x07``"
msgstr ""

#: ../../regular_expressions.rst:59
# d609430f324a473f9e28f68cf0d0d263
msgid "``\\e``"
msgstr ""

#: ../../regular_expressions.rst:59
# 435697a7291a4f3fa8d7c10ae217d1fc
msgid "escape (ESC), same as ``\\x1b``"
msgstr ""

#: ../../regular_expressions.rst:60
# 015bea8c472c43478a5d63e30c8442e5
msgid "``\\tfoobar``"
msgstr ""

#: ../../regular_expressions.rst:60
# a402992133f340299c6927c440b27710
msgid "``foobar`` preceded by TAB"
msgstr ""

#: ../../regular_expressions.rst:66
# 31cb2b97f2264999b65d03898aab5b05
msgid "Escaping"
msgstr ""

#: ../../regular_expressions.rst:68
# fee64123b3974456bedcd497899243fa
msgid "If you want to use character ``\\`` by itself, not as part of ``escape-code``, just prefix it with ``\\``, like that: ``\\\\``."
msgstr ""

#: ../../regular_expressions.rst:71
# 35197027f8db4f8b84674df203bd2f7d
msgid "In fact you can prefix (or ``escape``) with ``\\`` any character that has special meaning in regular expressions."
msgstr ""

#: ../../regular_expressions.rst:77
# d80fec09f0d14786a143622e69fe5c13
msgid "``\\^FooBarPtr``"
msgstr ""

#: ../../regular_expressions.rst:77
# f88ab8b393b847969d0e860db2c712f1
msgid "``^FooBarPtr`` this is ``^`` and not `start of line <#lineseparators>`__"
msgstr ""

#: ../../regular_expressions.rst:78
# 0e46a3d379b14c438d1ee841c713a83e
msgid "``\\[a\\]``"
msgstr ""

#: ../../regular_expressions.rst:78
# 714b08c429d44c62a9620a407ba3dfb7
msgid "``[a]`` this is not `character class <#userclass>`__"
msgstr ""

#: ../../regular_expressions.rst:82
# c20cb33b6ae1493f9038d2611cb571c7
msgid "Character Classes"
msgstr ""

#: ../../regular_expressions.rst:87
# c20cb33b6ae1493f9038d2611cb571c7
msgid "User Character Classes"
msgstr ""

#: ../../regular_expressions.rst:89
# 1790b54569be4679a2909c2bedf1b3b5
msgid "Character class is a list of characters inside ``[]``. The class matches any **one** character listed in this class."
msgstr ""

#: ../../regular_expressions.rst:95
# bfbc0a48ce1f4527995a1d4892efaed9
msgid "``foob[aeiou]r``"
msgstr ""

#: ../../regular_expressions.rst:95
# 5a7655ed4a1d4076ae044d3a292fd38d
msgid "``foobar``, ``foober`` etc but not ``foobbr``, ``foobcr`` etc"
msgstr ""

#: ../../regular_expressions.rst:98
# 10b7c7a5060f4e19ae386f638eb30acb
msgid "You can ``invert`` the class - if the first character after the ``[`` is ``^``, then the class matches any character **but** characters listed in the class."
msgstr ""

#: ../../regular_expressions.rst:105
# 4cdbb1947bc34a23938026e776462b55
msgid "``foob[^aeiou]r``"
msgstr ""

#: ../../regular_expressions.rst:105
# 93b33ea6ef95463985f56ddbe042f8dc
msgid "``foobbr``, ``foobcr`` etc but not ``foobar``, ``foober`` etc"
msgstr ""

#: ../../regular_expressions.rst:108
# 489b5dfb11e442bfa9ac160703d8f5b4
msgid "Within a list, the ``-`` character is used to specify a range, so that ``a-z`` represents all characters between ``a`` and ``z``, inclusive."
msgstr ""

#: ../../regular_expressions.rst:111
# 307a6c501bf04aaca82c0b435fb04d1d
msgid "If you want ``-`` itself to be a member of a class, put it at the start or end of the list, or `escape <#escape>`__ it with a backslash."
msgstr ""

#: ../../regular_expressions.rst:114
# 307a6c501bf04aaca82c0b435fb04d1d
msgid "If you want ``]`` or ``[`` you may place it at the start of list or escape it with a backslash."
msgstr ""

#: ../../regular_expressions.rst:120
# b29ce6c24b8c417ca87f221afe16fcf6
msgid "``[-az]``"
msgstr ""

#: ../../regular_expressions.rst:120
#: ../../regular_expressions.rst:121
#: ../../regular_expressions.rst:122
# 44d513943e124408bffe6456715105b9
# 44d513943e124408bffe6456715105b9
# 44d513943e124408bffe6456715105b9
msgid "``a``, ``z`` and ``-``"
msgstr ""

#: ../../regular_expressions.rst:121
# 015bea8c472c43478a5d63e30c8442e5
msgid "``[az-]``"
msgstr ""

#: ../../regular_expressions.rst:122
# 0e46a3d379b14c438d1ee841c713a83e
msgid "``[a\\-z]``"
msgstr ""

#: ../../regular_expressions.rst:123
# 539e6048fc9e4c4e9b28444af5666c80
msgid "``[a-z]``"
msgstr ""

#: ../../regular_expressions.rst:123
# 4fdf9b0b732a450fa919d6410c299b23
msgid "characters from ``a`` to ``z``"
msgstr ""

#: ../../regular_expressions.rst:124
# 9b71f0ebadd44bfe96a7686875f89d56
msgid "``[\\n-\\x0D]``"
msgstr ""

#: ../../regular_expressions.rst:124
# 4fdf9b0b732a450fa919d6410c299b23
msgid "characters from ``#10`` to ``#13``"
msgstr ""

#: ../../regular_expressions.rst:128
# fba5be6ecf3443a08a94f9a3d9bb56eb
msgid "Predefined Character Classes"
msgstr ""

#: ../../regular_expressions.rst:130
# c2170060f16a49df9afd20db9dd8bd32
msgid "There are a number of predefined character classes that keeps regular expressions more compact."
msgstr ""

#: ../../regular_expressions.rst:136
# 81c82efc1ed3482683b5b693539271b4
msgid "``\\w``"
msgstr ""

#: ../../regular_expressions.rst:136
# 7013ab0d756b42489d52c7ebdb9179e0
msgid "an alphanumeric character (including ``_``)"
msgstr ""

#: ../../regular_expressions.rst:137
# 8ef1f9a1f4c84f3cb1dd36647c52ee7e
msgid "``\\W``"
msgstr ""

#: ../../regular_expressions.rst:137
# 2ebed1a340fe4e71a605643cdf0c6bea
msgid "a nonalphanumeric"
msgstr ""

#: ../../regular_expressions.rst:138
# 46b7d80f33eb4181bb42e4c36b1c575a
msgid "``\\d``"
msgstr ""

#: ../../regular_expressions.rst:138
# 7013ab0d756b42489d52c7ebdb9179e0
msgid "a numeric character (same as ``[0123456789]``)"
msgstr ""

#: ../../regular_expressions.rst:139
# b05afcd0b23b492c8684a233d000dcaa
msgid "``\\D``"
msgstr ""

#: ../../regular_expressions.rst:139
# 5e5606c3c057494f82703e06fc80d761
msgid "a non-numeric"
msgstr ""

#: ../../regular_expressions.rst:140
# c514858363dc4b8f96f62aa987c2e2e3
msgid "``\\s``"
msgstr ""

#: ../../regular_expressions.rst:140
# a5742539a5e2465aa42ebaeeae2eb180
msgid "any space (same as ``[ \\t\\n\\r\\f]``)"
msgstr ""

#: ../../regular_expressions.rst:141
# 868026bfce6543d1b0f00341f427b66c
msgid "``\\S``"
msgstr ""

#: ../../regular_expressions.rst:141
# ac0d5e5a5a7a4c07a2d8071ffdd5bb70
msgid "a non space"
msgstr ""

#: ../../regular_expressions.rst:144
# 714b08c429d44c62a9620a407ba3dfb7
msgid "You may use ``\\w``, ``\\d`` and ``\\s`` within `user character classes <User Character Classes_>`_."
msgstr ""

#: ../../regular_expressions.rst:150
# 5bf7190aae7a4c449ba725816314ed6f
msgid "``foob\\dr``"
msgstr ""

#: ../../regular_expressions.rst:150
# 5ecb1b6a1c634723ace15fca6ca25e78
msgid "``foob1r``, ``foob6r`` and so on but not ``foobar``, ``foobbr`` and so on"
msgstr ""

#: ../../regular_expressions.rst:151
# 96eec08b9694452db9562c1ab22d1cc2
msgid "``foob[\\w\\s]r``"
msgstr ""

#: ../../regular_expressions.rst:151
# d67799ae980e4b548f69c5521651f30a
msgid "``foobar``, ``foob r``, ``foobbr`` and so on but not ``foob1r``, ``foob=r`` and so on"
msgstr ""

#: ../../regular_expressions.rst:155
#: ../../regular_expressions.rst:197
#: ../../regular_expressions.rst:217
#: ../../regular_expressions.rst:364
#: ../../regular_expressions.rst:416
#: ../../regular_expressions.rst:543
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
msgid "`TRegExpr <tregexpr.html>`__"
msgstr ""

#: ../../regular_expressions.rst:157
# 71bf614d96fb4d20b1af029bbdc2ace5
msgid "Properties `SpaceChars <tregexpr.html#spacechars>`_ and `WordChars <tregexpr.html#wordchars>`_ define character classes ``\\w``, ``\\W``, ``\\s``, ``\\S``."
msgstr ""

#: ../../regular_expressions.rst:162
# c5d52d7967cb42ada66679111a10e12d
msgid "So you can redefine this classes."
msgstr ""

#: ../../regular_expressions.rst:165
# 5d62589014db4360a29e8d5b5991c71a
msgid "Boundaries"
msgstr ""

#: ../../regular_expressions.rst:170
# 5d62589014db4360a29e8d5b5991c71a
msgid "Line Boundaries"
msgstr ""

#: ../../regular_expressions.rst:175
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``^``"
msgstr ""

#: ../../regular_expressions.rst:175
# 6eae323c3cbb40419c82b8cf33735b7e
msgid "start of line"
msgstr ""

#: ../../regular_expressions.rst:176
# 88b1997c4f8344fe8fc31206deb548ed
msgid "``$``"
msgstr ""

#: ../../regular_expressions.rst:176
# 335d1b6f303e4322959cd21caa380037
msgid "end of line"
msgstr ""

#: ../../regular_expressions.rst:177
# 2a95cb8a872f4701a5a7250a673bec49
msgid "``\\A``"
msgstr ""

#: ../../regular_expressions.rst:177
# 0c58c7d0caa84ae9b4a5c96e635e616a
msgid "start of text"
msgstr ""

#: ../../regular_expressions.rst:178
# a45c35366ff8427bb89bdfcd6c08ba71
msgid "``\\Z``"
msgstr ""

#: ../../regular_expressions.rst:178
# b0e79b137f2448ee8b6627c530b22bde
msgid "end of text"
msgstr ""

#: ../../regular_expressions.rst:179
# 5106dad3e38a4b94bc1ab34af7b6c844
msgid "``.``"
msgstr ""

#: ../../regular_expressions.rst:179
# 3999c57cd9574dac85a81cc63767508b
msgid "any character in line"
msgstr ""

#: ../../regular_expressions.rst:180
# 0cee4c3f18174100aac0ea40dbdbded0
msgid "``^foobar``"
msgstr ""

#: ../../regular_expressions.rst:180
# 2e0d8e2edb824979859e04f34329c974
msgid "``foobar`` only if it's at the beginning of line"
msgstr ""

#: ../../regular_expressions.rst:181
# b29ce6c24b8c417ca87f221afe16fcf6
msgid "``foobar$``"
msgstr ""

#: ../../regular_expressions.rst:181
# 8a9bbfc79f90401d9f9a7c723163a704
msgid "``foobar`` only if it's at the end of line"
msgstr ""

#: ../../regular_expressions.rst:182
# 492e24293767417f9612c35c0bbcff4d
msgid "``^foobar$``"
msgstr ""

#: ../../regular_expressions.rst:182
# 0b6edb406c4f4696a89905f303237d67
msgid "``foobar`` only if it's the only string in line"
msgstr ""

#: ../../regular_expressions.rst:183
# 0e46a3d379b14c438d1ee841c713a83e
msgid "``foob.r``"
msgstr ""

#: ../../regular_expressions.rst:183
# 65a6171b7ce44e1dba6745448ce5c914
msgid "``foobar``, ``foobbr``, ``foob1r`` and so on"
msgstr ""

#: ../../regular_expressions.rst:186
# 1dc1cb9a1e0d4f1a9dbb9d1ba7cbac4c
msgid "``^`` metacharacter by default match the beginning of the input string. ``$`` - the end."
msgstr ""

#: ../../regular_expressions.rst:189
# a9af5da35fd4481f99af58c14c8fedd2
msgid "You may, however, wish to treat a string as a multi-line text, so ``^`` will match after any line separator within the string, and ``$`` will match before any line separator. You can do this by switching `modifier /m <#m>`_."
msgstr ""

#: ../../regular_expressions.rst:194
# 93b076c78657416da0429f8180e79005
msgid "Note that there is no empty line within the sequence ``\\x0D\\x0A``."
msgstr ""

#: ../../regular_expressions.rst:199
# e60601d8933c40dd9a84cefd99219b86
msgid "If you are using `Unicode version <tregexpr.html#unicode>`__, then ``^``/``$`` also matches ``\\x2028``, ``\\x2029``, ``\\x0B``, ``\\x0C`` or ``\\x85``."
msgstr ""

#: ../../regular_expressions.rst:203
# 18cf7bd6c41c4f85ad13795e0c1cd582
msgid "The ``\\A`` and ``\\Z`` are just like ``^`` and ``$``, except that they won’t match multiple times when the `modifier /m <#m>`_ is used."
msgstr ""

#: ../../regular_expressions.rst:207
# 190cf85bc1414a1cb61207bc434d1c97
msgid "The ``.`` metacharacter by default matches any character, but if you switch ``Off`` the `modifier /s <#s>`_, then ``.`` won’t match line separators inside the string."
msgstr ""

#: ../../regular_expressions.rst:211
# a64f557e8d694a11a8e99a549d7989ab
msgid "Note that ``^.*$`` does not match a string between ``\\x0D\\x0A``, because this is unbreakable line separator. But it matches the empty string within the sequence ``\\x0A\\x0D`` because this is just wrong order to be treated as line separator."
msgstr ""

#: ../../regular_expressions.rst:219
# 31b83138b2ac421cab1cf7c41f8db5e4
msgid "Multiline processing can be tuned with of properties `LineSeparators <tregexpr.html#lineseparators>`__ and `LinePairedSeparator <tregexpr.html#linepairedseparator>`_."
msgstr ""

#: ../../regular_expressions.rst:223
# 8e87a02f6e43454598b39c9fef2fbe6c
msgid "So you can use Unix style separators ``\\n`` or DOS/Windows style ``\\r\\n`` or mix them together (as in described above default behaviour)."
msgstr ""

#: ../../regular_expressions.rst:226
# b0f4bfb8364d4c95b5940a57a68a41aa
msgid "If you prefer mathematically correct description you can find it on `www.unicode.org <http://www.unicode.org/unicode/reports/tr18/>`__."
msgstr ""

#: ../../regular_expressions.rst:231
# 5d62589014db4360a29e8d5b5991c71a
msgid "Word Boundaries"
msgstr ""

#: ../../regular_expressions.rst:236
# 549416904cd74c13bd00f44cca2431ac
msgid "``\\b``"
msgstr ""

#: ../../regular_expressions.rst:236
# 5d62589014db4360a29e8d5b5991c71a
msgid "a word boundary"
msgstr ""

#: ../../regular_expressions.rst:237
# 549416904cd74c13bd00f44cca2431ac
msgid "``\\B``"
msgstr ""

#: ../../regular_expressions.rst:237
# ac48a89115584019a59b4b416748618c
msgid "a non-word boundary"
msgstr ""

#: ../../regular_expressions.rst:240
# 0d88e4bff70d480cb39ee78c53000f6a
msgid "A word boundary ``\\b`` is a spot between two characters that has a ``\\w`` on one side of it and a ``\\W`` on the other side of it (in either order)."
msgstr ""

#: ../../regular_expressions.rst:247
# 185ca4dbfecd4f10a1f02b4c28e371c4
msgid "Quantification"
msgstr ""

#: ../../regular_expressions.rst:250
# b536c9b135c143fdb1e61cdc89ad9ca8
msgid "Quantifier"
msgstr ""

#: ../../regular_expressions.rst:252
# 92dcead47a694f28b6083b522ac7a0bb
msgid "Any item of a regular expression may be followed by quantifier. Quantifier specifies number of repetition of the item."
msgstr ""

#: ../../regular_expressions.rst:258
# 7fd80b15c29c44c09b9704816c1a9623
msgid "``{n}``"
msgstr ""

#: ../../regular_expressions.rst:258
# bb5f6a9d093442ae9d58edce577ee941
msgid "exactly ``n`` times"
msgstr ""

#: ../../regular_expressions.rst:259
# 015bea8c472c43478a5d63e30c8442e5
msgid "``{n,}``"
msgstr ""

#: ../../regular_expressions.rst:259
# feea40ec958c4f13ae32c1f7cbd2995f
msgid "at least ``n`` times"
msgstr ""

#: ../../regular_expressions.rst:260
# 015bea8c472c43478a5d63e30c8442e5
msgid "``{n,m}``"
msgstr ""

#: ../../regular_expressions.rst:260
# a7290b67a4d64a2a9c2bd6e14712ea8c
msgid "at least ``n`` but not more than ``m`` times"
msgstr ""

#: ../../regular_expressions.rst:261
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``*``"
msgstr ""

#: ../../regular_expressions.rst:261
# 846fbe74056f4aaa9a30422b5e3e5f4b
msgid "zero or more, similar to ``{0,}``"
msgstr ""

#: ../../regular_expressions.rst:262
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``+``"
msgstr ""

#: ../../regular_expressions.rst:262
# c74c2a71c8ca4c1e8ed7184e304b7584
msgid "one or more, similar to ``{1,}``"
msgstr ""

#: ../../regular_expressions.rst:263
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``?``"
msgstr ""

#: ../../regular_expressions.rst:263
# 6c59f6946a804ce99be983640c3434be
msgid "zero or one, similar to ``{0,1}``"
msgstr ""

#: ../../regular_expressions.rst:266
# 910195d121904f26ae4b894ee372d37f
msgid "So, digits in curly brackets ``{n,m}``, specify the minimum number of times to match ``n`` and the maximum ``m``."
msgstr ""

#: ../../regular_expressions.rst:269
# a7290b67a4d64a2a9c2bd6e14712ea8c
msgid "The ``{n}`` is equivalent to ``{n,n}`` and matches exactly ``n`` times."
msgstr ""

#: ../../regular_expressions.rst:271
# bb5f6a9d093442ae9d58edce577ee941
msgid "The ``{n,}`` matches ``n`` or more times."
msgstr ""

#: ../../regular_expressions.rst:273
# 9d5f5d05ecaa4c00a869ae39106f33ab
msgid "There is no limit to the size of ``n`` or ``m``."
msgstr ""

#: ../../regular_expressions.rst:275
# 7c5322dc99e44b998d59017aaee0f1c0
msgid "If a curly bracket occurs in any other context, it is treated as a regular character."
msgstr ""

#: ../../regular_expressions.rst:281
# 44371b6ba18940ea875a076b322ee008
msgid "``foob.*r``"
msgstr ""

#: ../../regular_expressions.rst:281
# 7502ea10a87d4a8793ae29444993c1b4
msgid "``foobar``,  ``foobalkjdflkj9r`` and ``foobr``"
msgstr ""

#: ../../regular_expressions.rst:282
# f486817eb95543b195c171acb2a731e7
msgid "``foob.+r``"
msgstr ""

#: ../../regular_expressions.rst:282
# fed8cec1c7aa4ab9a79627ed209e3588
msgid "``foobar``, ``foobalkjdflkj9r`` but not ``foobr``"
msgstr ""

#: ../../regular_expressions.rst:283
# 864537d3762a4de282d92dd6568ba032
msgid "``foob.?r``"
msgstr ""

#: ../../regular_expressions.rst:283
# ceaefe43fa9140ccb98b225c4a18b5e8
msgid "``foobar``, ``foobbr`` and ``foobr`` but not ``foobalkj9r``"
msgstr ""

#: ../../regular_expressions.rst:284
# 668cdd70f067448c92f367165400e19a
msgid "``fooba{2}r``"
msgstr ""

#: ../../regular_expressions.rst:284
# a85094bac2e1465ab95189af4b68fdd7
msgid "``foobaar``"
msgstr ""

#: ../../regular_expressions.rst:285
# b13467b4415c49848770da86c88fd5fb
msgid "``fooba{2,}r``"
msgstr ""

#: ../../regular_expressions.rst:285
# 93bb5ae7f7cc4069bb37a372329e3c0b
msgid "``foobaar'``, ``foobaaar``, ``foobaaaar`` etc."
msgstr ""

#: ../../regular_expressions.rst:286
# 7487af01cf904e1f8ff42c06d571bc96
msgid "``fooba{2,3}r``"
msgstr ""

#: ../../regular_expressions.rst:286
# c9a33aa859d147a59e22c6721860012d
msgid "``foobaar``, or ``foobaaar``  but not ``foobaaaar``"
msgstr ""

#: ../../regular_expressions.rst:287
# 0e2f6b8ffde44a299a99c73c9b80974d
msgid "``(foobar){8,10}``"
msgstr ""

#: ../../regular_expressions.rst:287
# e5c0fc94ded9424d86526f2349352295
msgid "``8``, ``9`` or ``10`` instances of the ``foobar`` (``()`` is `Subexpression <#subexpression>`__)"
msgstr ""

#: ../../regular_expressions.rst:293
# 2bbf0836657c4eb284f83c948895b769
msgid "Greediness"
msgstr ""

#: ../../regular_expressions.rst:295
# 2d03b857084a49daac794b94c0871191
msgid "`Quantifiers <#iterator>`_ in ``greedy`` mode takes as many as possible, in ``non-greedy`` mode - as few as possible."
msgstr ""

#: ../../regular_expressions.rst:298
# 9cfb2e26596f48899ecc8353a4deb47c
msgid "By default all quantifiers are ``greedy``. Use ``?`` to make any quantifier ``non-greedy``."
msgstr ""

#: ../../regular_expressions.rst:301
# feda25aea71c4c30ba9bbbf2174fa4f6
msgid "For string ``abbbbc``:"
msgstr ""

#: ../../regular_expressions.rst:306
# 549416904cd74c13bd00f44cca2431ac
msgid "``b+``"
msgstr ""

#: ../../regular_expressions.rst:306
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``bbbb``"
msgstr ""

#: ../../regular_expressions.rst:307
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``b+?``"
msgstr ""

#: ../../regular_expressions.rst:307
#: ../../regular_expressions.rst:319
# 133cddbc84d641518aa8f52c01a2b4ee
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``b``"
msgstr ""

#: ../../regular_expressions.rst:308
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``b*?``"
msgstr ""

#: ../../regular_expressions.rst:308
# f2efd86f8a964dffb3d74e040d5061f0
msgid "empty string"
msgstr ""

#: ../../regular_expressions.rst:309
# 015bea8c472c43478a5d63e30c8442e5
msgid "``b{2,3}?``"
msgstr ""

#: ../../regular_expressions.rst:309
# 549416904cd74c13bd00f44cca2431ac
msgid "``bb``"
msgstr ""

#: ../../regular_expressions.rst:310
# 015bea8c472c43478a5d63e30c8442e5
msgid "``b{2,3}``"
msgstr ""

#: ../../regular_expressions.rst:310
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``bbb``"
msgstr ""

#: ../../regular_expressions.rst:313
# cc69fa48dbe04d7485a0fe7d3520dd8c
msgid "You can switch all quantifiers into ``non-greedy`` mode (`modifier /g <#g>`_, below we use `in-line modifier change <#inlinemodifiers>`_)."
msgstr ""

#: ../../regular_expressions.rst:319
# 539e6048fc9e4c4e9b28444af5666c80
msgid "``(?-g)b+``"
msgstr ""

#: ../../regular_expressions.rst:323
# 6798354466b44b3f84ba17500721650e
msgid "The choice"
msgstr ""

#: ../../regular_expressions.rst:325
# 8bc09de4d5704a16baec581934c1e0a7
msgid "Expressions in the choice are separated by ``|``."
msgstr ""

#: ../../regular_expressions.rst:327
# 60408ed9823347e6a3ff93a941fc4200
msgid "So ``fee|fie|foe`` will match any of ``fee``, ``fie``, or ``foe`` in the target string (as would ``f(e|i|o)e``)."
msgstr ""

#: ../../regular_expressions.rst:330
# 35903aec98f8406f96a653a1019c655d
msgid "The first expression includes everything from the last pattern delimiter (``(``, ``[``, or the beginning of the pattern) up to the first ``|``, and the last expression contains everything from the last ``|`` to the next pattern delimiter."
msgstr ""

#: ../../regular_expressions.rst:335
# 94bd0177c798411db724cef9c4b8b07e
msgid "Sounds a little complicated, so it’s common practice to include the choice in parentheses, to minimize confusion about where it starts and ends."
msgstr ""

#: ../../regular_expressions.rst:339
# 765cbac5974a43cf94f4e4ea3f1dbefe
msgid "Expressions in the choice are tried from left to right, so the first expression that matches, is the one that is chosen."
msgstr ""

#: ../../regular_expressions.rst:342
# 35d608d1b83243678f1f146331f691d5
msgid "For example, regular expression ``foo|foot`` in string ``barefoot`` will match ``foo``. Just a first expression that matches."
msgstr ""

#: ../../regular_expressions.rst:345
# 58753005ac70406b8cbfc9813dd137f1
msgid "Also remember that ``|`` is interpreted as a literal within square brackets, so if you write ``[fee|fie|foe]`` you’re really only matching ``[feio|]``."
msgstr ""

#: ../../regular_expressions.rst:352
# 66731d8ccc274a338df5cf3056cd30c8
msgid "``foo(bar|foo)``"
msgstr ""

#: ../../regular_expressions.rst:352
# 63c1141d053a46f6a8a6e7e399c42bdd
msgid "``foobar`` or ``foofoo``"
msgstr ""

#: ../../regular_expressions.rst:358
# a2ee50c135544aebb6d248b50364e68c
msgid "Subexpressions"
msgstr ""

#: ../../regular_expressions.rst:360
# 88cd160f76144971b10a09e47208330f
msgid "The brackets ``( ... )`` may also be used to define regular expression subexpressions."
msgstr ""

#: ../../regular_expressions.rst:366
# d779382e16b142c7996bd29ad1f25a41
msgid "Subexpression positions, lengths and actual values will be in `MatchPos <tregexpr.html#matchpos>`_, `MatchLen <tregexpr.html#matchlen>`_ and `Match <tregexpr.html#match>`_."
msgstr ""

#: ../../regular_expressions.rst:371
# 98aad30f8c874f4d96497883b2c05de3
msgid "You can substitute them with `Substitute <tregexpr.html#substitute>`_."
msgstr ""

#: ../../regular_expressions.rst:374
# 88f7d59969924433b79eb389a28c3f3a
msgid "Subexpressions are numbered from left to right by their opening parenthesis (including nested subexpressions)."
msgstr ""

#: ../../regular_expressions.rst:377
# 5d1e876aca5a42b3a5c905294b0d4f30
msgid "First subexpression has number ``1``. Whole regular expression has number ``0``."
msgstr ""

#: ../../regular_expressions.rst:380
# 129e981091744f76840fd2ffedf8ae85
msgid "For example for input string ``foobar`` regular expression ``(foo(bar))`` will find:"
msgstr ""

#: ../../regular_expressions.rst:384
# a2ee50c135544aebb6d248b50364e68c
msgid "subexpression"
msgstr ""

#: ../../regular_expressions.rst:384
# e48b627dd18648df894166975ac83ddc
msgid "value"
msgstr ""

#: ../../regular_expressions.rst:386
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``0``"
msgstr ""

#: ../../regular_expressions.rst:387
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``1``"
msgstr ""

#: ../../regular_expressions.rst:388
# 133cddbc84d641518aa8f52c01a2b4ee
msgid "``2``"
msgstr ""

#: ../../regular_expressions.rst:388
# d5e1f1a550524c0e89709a1e146cfe1a
msgid "``bar``"
msgstr ""

#: ../../regular_expressions.rst:392
# 4199e4d2fb894d8e9798d0809a20d014
msgid "Backreferences"
msgstr ""

#: ../../regular_expressions.rst:394
# f73b5bc9f71348ddbf5c0a1d3add678d
msgid "Metacharacters ``\\1`` through ``\\9`` are interpreted as backreferences. ``\\n`` matches previously matched subexpression ``n``."
msgstr ""

#: ../../regular_expressions.rst:400
# 2fc2afe6a77948f48e969b8457411145
msgid "``(.)\\1+``"
msgstr ""

#: ../../regular_expressions.rst:400
# e62d12574d98439d9f5ab9f11b4013d2
msgid "``aaaa`` and ``cc``"
msgstr ""

#: ../../regular_expressions.rst:401
# 9c94c85ff58345d1b7e282a2ea316287
msgid "``(.+)\\1+``"
msgstr ""

#: ../../regular_expressions.rst:401
# 6b1a49c7813c4bbfbf412ff0d34be3a4
msgid "also ``abab`` and ``123123``"
msgstr ""

#: ../../regular_expressions.rst:404
# 8ad064575fc5452dbcb34c49a17a6644
msgid "``(['\"]?)(\\d+)\\1`` matchs ``\"13\"`` (in double quotes), or ``'4'`` (in single quotes) or ``77`` (without quotes) etc"
msgstr ""

#: ../../regular_expressions.rst:408
# 02d142c965894d04ad425cb5b80f2c74
msgid "Modifiers"
msgstr ""

#: ../../regular_expressions.rst:410
# 1c324cac0f7f43ac9febdabba7d0d13e
msgid "Modifiers are for changing behaviour of regular expressions."
msgstr ""

#: ../../regular_expressions.rst:412
# cc69fa48dbe04d7485a0fe7d3520dd8c
msgid "You can set modifiers globally in your system or change inside the the regular expression using the `(?imsxr-imsxr) <#inlinemodifiers>`_."
msgstr ""

#: ../../regular_expressions.rst:418
# d48b16b6b8104fa3821459fe8af432d7
msgid "To change modifiers use `ModifierStr <tregexpr.html#modifierstr>`__ or appropriate ``TRegExpr`` properties `Modifier* <tregexpr.html#modifieri>`__."
msgstr ""

#: ../../regular_expressions.rst:423
# 51abbd7f8fa548c5aee664cd229cee5f
msgid "The default values are defined in `global variables <tregexpr.html#global-constants>`_. For example global variable ``RegExprModifierX`` defines default value for ``ModifierX`` property."
msgstr ""

#: ../../regular_expressions.rst:430
# 8e27159e16ea4aca84c5838613724ba7
msgid "i, case-insensitive"
msgstr ""

#: ../../regular_expressions.rst:432
# 98ca1bfa3ade48e9b48370bf833d3038
msgid "Case-insensitive. Use installed in you system locale settings, see also `InvertCase <tregexpr.html#invertcase>`__."
msgstr ""

#: ../../regular_expressions.rst:439
# c5c5d7fdeb764895a627626d74a36861
msgid "m, multi-line strings"
msgstr ""

#: ../../regular_expressions.rst:441
# d67bb943db2e4f289a450d9e264a648d
msgid "Treat string as multiple lines. So ``^`` and ``$`` matches the start or end of any line anywhere within the string."
msgstr ""

#: ../../regular_expressions.rst:444
# 8df5e36f4d764bf4baa3510aa7e7bb5b
msgid "See also `Line Boundaries <#lineseparators>`__."
msgstr ""

#: ../../regular_expressions.rst:449
# b5abd1a7ba0a44e2ba697036b6aed442
msgid "s, single line strings"
msgstr ""

#: ../../regular_expressions.rst:451
# ed5996a987034509a2e8bed9c3c5bc1f
msgid "Treat string as single line. So ``.`` matches any character whatsoever, even a line separators."
msgstr ""

#: ../../regular_expressions.rst:454
# 1f2de8cfdfbe48928d402710337d6bc3
msgid "See also `Line Boundaries <#lineseparators>`__, which it normally would not match."
msgstr ""

#: ../../regular_expressions.rst:460
# 86cbe41d0c6d4d8691beca56e179d2c8
msgid "g, greediness"
msgstr ""

#: ../../regular_expressions.rst:463
#: ../../regular_expressions.rst:508
# c39bd6d3367149d2acd557d5fb95b979
# c39bd6d3367149d2acd557d5fb95b979
msgid "`TRegExpr <tregexpr.html>`__ only modifier."
msgstr ""

#: ../../regular_expressions.rst:465
# 8b265c8b7f434059947206a124dc56b7
msgid "Switching it ``Off`` you’ll switch `quantifiers <#iterator>`__ into `non-greedy <#greedy>`__ mode."
msgstr ""

#: ../../regular_expressions.rst:468
# 8b265c8b7f434059947206a124dc56b7
msgid "So, if modifier ``/g`` is ``Off`` then ``+`` works as ``+?``, ``*`` as ``*?`` and so on."
msgstr ""

#: ../../regular_expressions.rst:471
# 5d8c651a8a4f434ebe1a86cb9e1ee0ce
msgid "By default this modifier is ``On``."
msgstr ""

#: ../../regular_expressions.rst:476
# f65280d72c5647fc8527f656932c3b31
msgid "x, eXtended syntax"
msgstr ""

#: ../../regular_expressions.rst:478
# 83b3c8363ae546feb4ad5d760b2ee4ae
msgid "Allows to comment regular expression and break them up into multiple lines."
msgstr ""

#: ../../regular_expressions.rst:481
# 350c4f235796471690e3ca02b8ee6209
msgid "If the modifier is ``On`` we ignore all whitespaces that is neither backslashed nor within a character class."
msgstr ""

#: ../../regular_expressions.rst:484
# 8473fb44913547cb8c91bf29ec14b83c
msgid "And the ``#`` character separates comments."
msgstr ""

#: ../../regular_expressions.rst:486
# 129e981091744f76840fd2ffedf8ae85
msgid "Notice that you can use empty lines to format regular expression for better readability:"
msgstr ""

#: ../../regular_expressions.rst:489
# 02ceac584e7b45948fc616fdbdc793d3
msgid "(\n"
"(abc) # comment 1\n"
"#\n"
"(efg) # comment 2\n"
")"
msgstr ""

#: ../../regular_expressions.rst:497
# e11d6600b3d84f2e90fe379a97f59f81
msgid "This also means that if you want real whitespace or ``#`` characters in the pattern (outside a character class, where they are unaffected by ``/x``), you’ll either have to escape them or encode them using octal or hex escapes."
msgstr ""

#: ../../regular_expressions.rst:505
# 8a4523bafdd942b59623258614bfb98e
msgid "r, Russian ranges"
msgstr ""

#: ../../regular_expressions.rst:510
# 581f1fd12e534e0c87f41eb6ee90529a
msgid "In Russian ASCII table characters ``ё``/``Ё`` are placed separately from others."
msgstr ""

#: ../../regular_expressions.rst:513
# 3fe678b6deec443683a377b394760f8b
msgid "Big and small Russian characters are in separated ranges, this is the same as with English characters but nevertheless I wanted some short form."
msgstr ""

#: ../../regular_expressions.rst:516
# 12e5f00844fa43d785df8052ddcebb21
msgid "With this modifier instead of ``[а-яА-ЯёЁ]`` you can write ``[а-Я]`` if you need all Russian characters."
msgstr ""

#: ../../regular_expressions.rst:519
# d081c1df46ab494c9b83136e7b9f9bab
msgid "When the modifier is ``On``:"
msgstr ""

#: ../../regular_expressions.rst:524
# e140b5b681604614b8445e456d2c2f49
msgid "``а-я``"
msgstr ""

#: ../../regular_expressions.rst:524
# 8a6ffc9022c344398178c56746f63f28
msgid "chars from ``а`` to ``я`` and ``ё``"
msgstr ""

#: ../../regular_expressions.rst:525
# 7c7c47504df54c139c18608918d319e4
msgid "``А-Я``"
msgstr ""

#: ../../regular_expressions.rst:525
# 850945cda1914c429018da79e67ee92d
msgid "chars from ``А`` to ``Я`` and ``Ё``"
msgstr ""

#: ../../regular_expressions.rst:526
# 79d4223fa3ce4041bf019872ec15a2ca
msgid "``а-Я``"
msgstr ""

#: ../../regular_expressions.rst:526
# 0f4c82e5dbbb443fa3249851010a4ac1
msgid "all russian symbols"
msgstr ""

#: ../../regular_expressions.rst:529
# 3bde32e7b560483894d2f7a00f8998ac
msgid "The modifier is set `On` by default."
msgstr ""

#: ../../regular_expressions.rst:532
# 1e1c198d34c74bf0a3cace2afe193dfe
msgid "Extensions"
msgstr ""

#: ../../regular_expressions.rst:537
# e8921b9a8c8c4fa8b8ce8b6682f08187
msgid "(?=<lookahead>)"
msgstr ""

#: ../../regular_expressions.rst:539
# 35197027f8db4f8b84674df203bd2f7d
msgid "``Look ahead`` assertion. It checks input for the regular expression ``<look-ahead>``, but do not capture it."
msgstr ""

#: ../../regular_expressions.rst:545
# 29d8cb65867f4b6db0cafcf02f6dece6
msgid "Look-ahead is not implemented in TRegExpr."
msgstr ""

#: ../../regular_expressions.rst:547
# 35197027f8db4f8b84674df203bd2f7d
msgid "In many cases you can replace ``look ahead`` with `Sub-expression <#subexpression>`_ and just ignore what will be captured in this subexpression."
msgstr ""

#: ../../regular_expressions.rst:551
# e6e0855383484ed78aa2c8ae75d5e0bf
msgid "For example ``(blah)(?=foobar)(blah)`` is the same as ``(blah)(foobar)(blah)``. But in the latter version you have to exclude the middle sub-expression manually - use ``Match[1] + Match[3]`` and ignore ``Match[2]``."
msgstr ""

#: ../../regular_expressions.rst:555
# e6e0855383484ed78aa2c8ae75d5e0bf
msgid "This is just not so convenient as in the former version where you can use whole ``Match[0]`` because captured by ``look ahead`` part would not be included in the regular expression match."
msgstr ""

#: ../../regular_expressions.rst:562
# 0d4fdd32e16440a7bccd47e1e3487eea
msgid "(?imsgxr-imsgxr)"
msgstr ""

#: ../../regular_expressions.rst:564
# c849b94a48f1468890383d24bfce78d8
msgid "You may use it inside regular expression for modifying modifiers by the fly."
msgstr ""

#: ../../regular_expressions.rst:566
# d5926c45b6a5415c8d9da7e78a7be111
msgid "This can be especially handy because it has local scope in a regular expression. It affects only that part of regular expression that follows ``(?imsgxr-imsgxr)`` operator."
msgstr ""

#: ../../regular_expressions.rst:570
# ed8aa7691fce4eb7b564536313e3b746
msgid "And if it's inside subexpression it will affect only this subexpression - specifically the part of the subexpression that follows after the operator. So in ``((?i)Saint)-Petersburg`` it affects only subexpression ``((?i)Saint)`` so it will match ``saint-Petersburg`` but not ``saint-petersburg``."
msgstr ""

#: ../../regular_expressions.rst:579
# c154669b289440289346db11f76c901d
msgid "``(?i)Saint-Petersburg``"
msgstr ""

#: ../../regular_expressions.rst:579
# 0dc8a7a40460411981725181364b298f
msgid "``Saint-petersburg`` and ``Saint-Petersburg``"
msgstr ""

#: ../../regular_expressions.rst:580
# 176320c26ae04c53b3263aaf90dd7b88
msgid "``(?i)Saint-(?-i)Petersburg``"
msgstr ""

#: ../../regular_expressions.rst:580
# 5071de2d3812462fa09ca52cec4745a7
msgid "``Saint-Petersburg`` but not ``Saint-petersburg``"
msgstr ""

#: ../../regular_expressions.rst:581
# 314956034ca8449c9e764aa50ae5e49f
msgid "``(?i)(Saint-)?Petersburg``"
msgstr ""

#: ../../regular_expressions.rst:581
# b42caf29ecca45c1bf3f79519553ebd0
msgid "``Saint-petersburg`` and ``saint-petersburg``"
msgstr ""

#: ../../regular_expressions.rst:582
# b726c5ed95d848f79b13d9a27a609773
msgid "``((?i)Saint-)?Petersburg``"
msgstr ""

#: ../../regular_expressions.rst:582
# ff728382c4fc4fb79723a0375cfd2411
msgid "``saint-Petersburg``, but not ``saint-petersburg``"
msgstr ""

#: ../../regular_expressions.rst:586
# e8b0c74ca7a249859ab0a4f9633bef75
msgid "(?#text)"
msgstr ""

#: ../../regular_expressions.rst:588
# 69d2ca4950e14125ad63534e84044108
msgid "A comment, the text is ignored."
msgstr ""

#: ../../regular_expressions.rst:590
# f62315cc990843cfa29c51e0dd36aca7
msgid "Note that the comment is closed by the nearest ``)``, so there is no way to put a literal ``)`` in the comment."
msgstr ""

#: ../../regular_expressions.rst:595
# d048410862fb47d09f3810e91dd8c699
msgid "Afterword"
msgstr ""

#: ../../regular_expressions.rst:597
# eaad7992e1304a2d824d9ea87fbeac68
msgid "In this `ancient blog post from previous century <https://masterandrey.com/posts/en/text_processing_from_birds_eye_view.html>`__ I illustrate some usages of regular expressions."
msgstr ""

