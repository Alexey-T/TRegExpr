# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-03 20:19+0300\n"
"PO-Revision-Date: 2019-05-03 15:51+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: Bulgarian "
"(https://www.transifex.com/masterAndrey/teams/98461/bg/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# aa6e3c22db524b60846b1fa6ea87b986
#: ../../regexp_syntax.rst:2
msgid "Regular expressions"
msgstr ""

# f59a7e2d99ed41ae82b74577fa88af4c
#: ../../regexp_syntax.rst:5
msgid "Introduction"
msgstr "Въведение"

# 8b38ddb668cd4b05bb73e1f9f3b851b9
#: ../../regexp_syntax.rst:7
msgid "Regular expressions are a handy way to specify patterns of text."
msgstr ""

# a270d6a6c96c412a9107266365aaebc4
#: ../../regexp_syntax.rst:10
msgid ""
"So you can validate user input, search for some patterns like emails of "
"phone numbers on web pages or in some documents and so on."
msgstr ""
"Така че можете да потвърдите въвеждането от потребителя, да потърсите "
"някои модели като имейли на телефонни номера на уеб страници или в някои "
"документи и т.н."

# 85859a31a678423ca2e30562c6d8dd1b
#: ../../regexp_syntax.rst:13
msgid ""
"Below is complete regular expressions cheat sheet just on one page. This "
"is regular expressions that are implemented for example in `TRegExpr "
"<tregexpr_interface.html>`_."
msgstr ""
"По-долу е пълна редовни изрази измама лист само на една страница. Това са"
" регулярни изрази, които са реализирани например в `TRegExpr "
"<tregexpr_interface.html>`_."

# 4ea6c0e1bfa2455794c9fcea646235e6
#: ../../regexp_syntax.rst:18
msgid "Simple matches"
msgstr "Обикновено съвпадение"

# b727fca2355b4a05bdaedc91737a4a71
#: ../../regexp_syntax.rst:20
msgid "Any single character matches itself."
msgstr ""

# 7a42dd79705641f0b9765b1b3d3f3f12
#: ../../regexp_syntax.rst:22
msgid ""
"A series of characters matches that series of characters in the target "
"string, so the pattern ``bluh`` would match ``bluh`` in the target "
"string."
msgstr ""
"Поредица от символи съвпада с тази серия от знаци в целевия низ, така че "
"шаблонът ``bluh`` ще съответства на ``bluh`` в целевия низ."

# 9f6a1f35c90f4dd2942104d776b07b45
#: ../../regexp_syntax.rst:30
msgid ""
"If you want to use some symbol with special meaning (see below) as plain "
"symbol you have to \"escape\" it with backslash ``\\``:"
msgstr ""
"Ако искате да използвате някакъв символ със специално значение (виж "
"по-долу) като обикновен символ, трябва да го &quot;избягате&quot; с "
"наклонена черта ``: \\ t"

# 379d188734234be995168022765d361d
#: ../../regexp_syntax.rst:38
msgid "Non-Printable Characters"
msgstr ""

# 44eca01f40e34c40b674024024556a1c
#: ../../regexp_syntax.rst:41
msgid "``\\xnn``"
msgstr "`` \\ Xnn``"

# 46c8636c4a8c42b4a91777e1dc8de378
#: ../../regexp_syntax.rst:41
msgid "matches character with hex code ``nn``"
msgstr "отговаря на символа с шестнадесетичен код ``nn``"

# 363c2d54eda246858c6400820e122798
#: ../../regexp_syntax.rst:42
msgid "``\\x{nnnn}``"
msgstr ""

# d193c283801f4a65a748fc26b2f96d65
#: ../../regexp_syntax.rst:42
msgid ""
"matches character with hex code ``nnnn`` (one byte for plain text and two"
" bytes for Unicode)"
msgstr ""
"съвпада със символа с шестнадесетичен код ``nnnn`` (един байт за "
"обикновен текст и два байта за Unicode)"

# 405695627ec84155b387b164c5fc155c
#: ../../regexp_syntax.rst:50
msgid ""
"There are a number of predefined non-printable character classes just "
"like in ``C`` language:"
msgstr ""
"Съществуват редица предварително дефинирани класове символи, които не "
"могат да бъдат отпечатани, точно както в езика &quot;C&quot;:"

# 1c2436f9a2814daea97c4cef4b54c638
#: ../../regexp_syntax.rst:54
msgid "``\\t``"
msgstr "`` \\ T``"

# 6dd58e2460c246a68aae13ab37e57a74
#: ../../regexp_syntax.rst:54
msgid "tab (HT/TAB), same as ``\\x09``"
msgstr "(HT / TAB), същото като &quot;x09&quot;"

# e4a1a1aff1cd41f5a0a039dc3a5e8764
#: ../../regexp_syntax.rst:55
msgid "``\\n``"
msgstr ""

# 014acab05bec486da15a9dcfe7701889
#: ../../regexp_syntax.rst:55
msgid "newline (NL), same as ``\\x0a``"
msgstr "нов ред (NL), същото като &quot;x0a&quot;"

# cf79e3fe9b7e40d4b12217710008cda4
#: ../../regexp_syntax.rst:56
msgid "``\\r``"
msgstr "`` \\ R``"

# 4489042dc4a841649dadf3cd693b79a6
#: ../../regexp_syntax.rst:56
msgid "car.return (CR), same as ``\\x0d``"
msgstr "car.return (CR), същото като &quot;x0d&quot;"

# 281cbafde3fb4c61833e3f12d19d0461
#: ../../regexp_syntax.rst:57
msgid "``\\f``"
msgstr "`` \\ F``"

# 76cdd368d5314a02901373bcbddcad3b
#: ../../regexp_syntax.rst:57
msgid "form feed (FF), same as ``\\x0c``"
msgstr "форма (FF), същата като &quot;x0c&quot;"

# 662bbe187a0e4d358418f16ffff91e6b
#: ../../regexp_syntax.rst:58
msgid "``\\a``"
msgstr "`` \\ A``"

# e0d148dd4ae64e7891ab43b853ee5cbe
#: ../../regexp_syntax.rst:58
msgid "alarm (BEL), same as ``\\x07``"
msgstr "аларма (BEL), същата като &quot;x07&quot;"

# e070e2246269437ba549472369efd022
#: ../../regexp_syntax.rst:59
msgid "``\\e``"
msgstr ""

# 5cd0c00beaff4ad0b7f6ebc8bd9acee5
#: ../../regexp_syntax.rst:59
msgid "escape (ESC), same as ``\\x1b``"
msgstr "бягство (ESC), същото като &quot;x1b&quot;"

# 3e32eb6ac6144c4d80b075e8ad5e44fd
#: ../../regexp_syntax.rst:63
msgid "User Character Classes"
msgstr "Класове на потребителските знаци"

# 99c4b0cfb5f9447a93c55e281d2426ed
#: ../../regexp_syntax.rst:65
msgid ""
"You can specify character class, by enclosing a list of characters in "
"``[]``. This class will match any **one** character listed inside ``[]``."
msgstr ""
"Можете да укажете клас на символи, като включите списък с символи в `` []"
" ``. Този клас ще съответства на всеки ** един ** символ, изброени в `` "
"[] ``."

# a39f8e8ec20d4a9cad93f2828b7a7a8f
#: ../../regexp_syntax.rst:68
msgid ""
"If the first character after the ``[`` is ``^``, the class matches any "
"character **but** characters listed in the class."
msgstr ""

# 55e948458d154686bc68edd9693db16e
#: ../../regexp_syntax.rst:76
msgid ""
"Within a list, the ``-`` character is used to specify a range, so that "
"``a-z`` represents all characters between ``a`` and ``z``, inclusive."
msgstr ""

# 60942a70eff042b1b4b607b0df0d70d2
#: ../../regexp_syntax.rst:79
msgid ""
"If you want ``-`` itself to be a member of a class, put it at the start "
"or end of the list, or escape it with a backslash. If you want ``]`` you "
"may place it at the start of list or escape it with a backslash."
msgstr ""
"Ако искате самият `` `` да бъде член на даден клас, поставете го в "
"началото или в края на списъка, или го избягвайте с наклонена черта. Ако "
"искате ``] `` можете да го поставите в началото на списъка или да го "
"избягате с обратна наклонена черта."

# 3e32eb6ac6144c4d80b075e8ad5e44fd
#: ../../regexp_syntax.rst:92
msgid "Predefined Character classes"
msgstr ""

# e9cf7f033ca641b0add4e4a82fbf7d95
#: ../../regexp_syntax.rst:95
msgid "``\\w``"
msgstr ""

# 2f3c970a9bc642f4a5288e9e3d03687f
#: ../../regexp_syntax.rst:95
msgid "an alphanumeric character (including \"_\")"
msgstr "буквено-цифров знак (включително „_“)"

# 30105093206d4dcab92e368ddb94eabe
#: ../../regexp_syntax.rst:96
msgid "``\\W``"
msgstr "`` \\ W``"

# 3ce4cb92e41748be8fc64bb6265b7f0d
#: ../../regexp_syntax.rst:96
msgid "a nonalphanumeric"
msgstr ""

# df57a92f15a7409db120efc7d552a3bc
#: ../../regexp_syntax.rst:97
#, fuzzy
msgid "``\\d``"
msgstr "`` \\ D``"

# 9e00e94893a64322bd643ea880763cff
#: ../../regexp_syntax.rst:97
msgid "a numeric character"
msgstr "цифров знак"

# 1a17245745b3418f9c6ed02fabc1abc0
#: ../../regexp_syntax.rst:98
msgid "``\\D``"
msgstr ""

# 6db6ad991b764f3bae7857ebf8e16883
#: ../../regexp_syntax.rst:98
msgid "a non-numeric"
msgstr "не-цифров"

# 03588588dd1b499f9c521e8b9896679b
#: ../../regexp_syntax.rst:99
msgid "``\\s``"
msgstr "`` \\ S``"

# c1733b9171af4b6387cbb14286e506ed
#: ../../regexp_syntax.rst:99
msgid "any space (same as [ \\t\\n\\r\\f])"
msgstr "всяко пространство (същото като [n \\ t"

# a1a5113a7ef14e04b2b49e585c8a6dc1
#: ../../regexp_syntax.rst:100
msgid "``\\S``"
msgstr "`` \\ S``"

# 21076843e1ec46acb9431646c227d424
#: ../../regexp_syntax.rst:100
msgid "a non space"
msgstr "непространство"

# 44495071157f415bbf138800e2a5beb0
#: ../../regexp_syntax.rst:103
#, fuzzy
msgid ""
"You may use ``\\w``, ``\\d`` and ``\\s`` within `user character classes "
"<User Character Classes_>`_."
msgstr ""
"Можете да използвате `` `` `,` `` `и` `` `в рамките на` класовете за "
"потребителски характер <User Character Classes_>`_."

# 6bea053f0752406687c4726fa59f70fb
#: ../../regexp_syntax.rst:110
msgid ""
"TRegExpr uses properties `SpaceChars "
"<tregexpr_interface.html#spacechars>`_ and `WordChars "
"<tregexpr_interface.html#wordchars>`_ to define character classes "
"``\\w``, ``\\W``, ``\\s``, ``\\S``, so you can easely redefine it."
msgstr ""
"TRegExpr използва свойства `SpaceChars "
"<tregexpr_interface.html#spacechars>`_ и` WordChars "
"<tregexpr_interface.html#wordchars>`_, за да се определят класове от "
"символи` `w``,` `W``,` `` `,` `S``, така че можете лесно да го "
"предефинирате."

# a07329be340945ea8edd4cd5d258b969
#: ../../regexp_syntax.rst:117
msgid "Metacharacters"
msgstr "метасимволи"

# c95fa60048ed4d64a00309f5404470c4
#: ../../regexp_syntax.rst:119
msgid ""
"Metacharacters are special characters which are the essence of Regular "
"Expressions. There are different types of metacharacters, described "
"below."
msgstr ""
"Метасимволите са специални символи, които са същността на регулярните "
"изрази. Има различни типове метасимволи, описани по-долу."

# a07329be340945ea8edd4cd5d258b969
#: ../../regexp_syntax.rst:124
msgid "Line separators"
msgstr ""

# f5f10adaf5cd4b9aac30860c4d87db8c
#: ../../regexp_syntax.rst:127
msgid "``^``"
msgstr "`` `` ^"

# 252b8a6700654de29747aa19cd60e2a6
#: ../../regexp_syntax.rst:127
msgid "start of line"
msgstr "начало на линията"

# 7c7c7e3ad9a5468f935dd8080fb0c5fe
#: ../../regexp_syntax.rst:128
msgid "``$``"
msgstr "`` `` $"

# e6ab18c3e90d46e39e445e6173e69d9d
#: ../../regexp_syntax.rst:128
msgid "end of line"
msgstr "края на линията"

# d37a4a5a5fc64b6397c4d8f1e374ee60
#: ../../regexp_syntax.rst:129
msgid "``\\A``"
msgstr "`` \\ A``"

# 10cf172be633491fbaa46c7c69d5d1d0
#: ../../regexp_syntax.rst:129
msgid "start of text"
msgstr "начало на текста"

# 93882f5e26dc4920859bb6a16e0ba663
#: ../../regexp_syntax.rst:130
msgid "``\\Z``"
msgstr "`` \\ Z``"

# dd6c480d6308459fa4da91da44aeb2de
#: ../../regexp_syntax.rst:130
msgid "end of text"
msgstr "края на текста"

# 6697928aa4e14755b090220368c23a39
#: ../../regexp_syntax.rst:131
msgid "``.``"
msgstr "``.``"

# d93b2586f3864904850c6176b1cf66df
#: ../../regexp_syntax.rst:131
msgid "any character in line"
msgstr "всеки знак в ред"

# 213b04c3d85244cab2561440188fd166
#: ../../regexp_syntax.rst:141
msgid ""
"The ``^`` metacharacter by default is matchthe beginning of the input "
"string, the ``$`` at the end."
msgstr ""
"Метасимволът `` ^ `` по подразбиране съвпада с началото на входния низ, "
"`` $ `` в края."

# ed87bfa235224adf9fa9830b2477711f
#: ../../regexp_syntax.rst:145
msgid ""
"You may, however, wish to treat a string as a multi-line text, so ``^`` "
"will match after any line separator within the string, and ``$`` will "
"match before any line separator. You can do this by switching ``On`` the "
"`modifier /m <#m>`_."
msgstr ""
"Може обаче да искате да третирате низ като многоредов текст, така че `` "
"`` ще съвпадне след всеки разделител на редове в низ и `` $ `` ще "
"съвпадне преди всеки разделител. Можете да направите това, като "
"превключите ``On`` на `modifier / m <#m &#39;`."

# fa6af706326b4f4ebdb8921bd79369cd
#: ../../regexp_syntax.rst:150
msgid ""
"The ``\\A`` and ``\\Z`` are just like ``^`` and ``$``, except that they "
"won’t match multiple times when the `modifier /m <#m>`_ is used."
msgstr ""
"`` `` И `` `` са точно като `` `` `и` `` `, с изключение на това, че те "
"няма да отговарят на няколко пъти, когато` модификаторът / m <#m>`_ се "
"използва."

# 870ba883c46d4caa8479873e139518bc
#: ../../regexp_syntax.rst:154
msgid ""
"The ``.`` metacharacter by default matches any character, but if you "
"switch ``Off`` the `modifier /s <#s>`_, then ``.`` won’t match embedded "
"line separators."
msgstr ""
"Метасимволът `` `` по подразбиране съвпада с всеки символ, но ако "
"включите ``Off`` на `modifier / s <#s>`_, то `` `` няма да съответства на"
" вградените разделители."

# 509fcee5caf24372b074d12b7902d9f8
#: ../../regexp_syntax.rst:159
msgid "Tech details"
msgstr "Технически подробности"

# 24b7172cc99045a68054dfd2623da3fc
#: ../../regexp_syntax.rst:161
msgid ""
"TRegExpr works with line separators as recommended at `www.unicode.org "
"<http://www.unicode.org/unicode/reports/tr18/>`__:"
msgstr ""
"TRegExpr работи с линейни разделители, както се препоръчва на адрес "
"www.unicode.org <http://www.unicode.org/unicode/reports/tr18/>`__:"

# 3bd8d69e73764aed8af762c1866a0514
#: ../../regexp_syntax.rst:164
msgid ""
"``^`` is at the beginning of a input string, and, if `modifier /m <#m>`_ "
"is On, also immediately following any occurrence of ``\\x0D\\x0A`` or "
"``\\x0A`` or ``\\x0D`` (if you are using `Unicode version "
"<tregexpr_interface.html#unicode>`__ of TRegExpr, then also ``\\x2028`` "
"or  ``\\x2029`` or ``\\x0B`` or ``\\x0C`` or ``\\x85``). Note that there "
"is no empty line within the sequence ``\\x0D\\x0A``."
msgstr ""
"`` `` е в началото на входния низ, и ако `модификатор / m <#m &#39;` е "
"Вкл., също непосредствено след всяка поява на `` 0o0&#39; &#39; `или` "
"`0D`` (ако използвате` Unicode версия "
"<tregexpr_interface.html#unicode>`__ на TRegExpr, след това също` `2028``"
" или` `2029`` или` `0B`` или` `0C`` или` `85``). Забележете, че няма "
"празна линия в последователността &quot;x0D0A&quot;."

# 2789416bbbad462186fbef55328265d1
#: ../../regexp_syntax.rst:171
msgid ""
"``$`` is at the end of a input string, and, if `modifier /m <#m>`_ is On,"
" also immediately preceding any occurrence of  ``\\x0D\\x0A`` or "
"``\\x0A`` or ``\\x0D`` (if you are using `Unicode version "
"<tregexpr_interface.html#unicode>`__ of TRegExpr, then also ``\\x2028`` "
"or  ``\\x2029`` or ``\\x0B`` or ``\\x0C`` or ``\\x85``). Note that there "
"is no empty line within the sequence ``\\x0D\\x0A``."
msgstr ""
"`` $ `` е в края на входния низ, и ако `модификатор / m <#m &#39;` е "
"Вкл., също непосредствено преди всяка поява на ``x0D0A`` или `` 0A&#39; "
"`или` `0D`` (ако използвате` Unicode версия "
"<tregexpr_interface.html#unicode>`__ на TRegExpr, след това също` `2028``"
" или` `2029`` или` `0B`` или` `0C`` или` `85``). Забележете, че няма "
"празна линия в последователността &quot;x0D0A&quot;."

# ede57b818ab74d3e967cda0c170d5a32
#: ../../regexp_syntax.rst:179
msgid ""
"``.`` matchs any character, but if you switch Off `modifier /s <#s>`_ "
"then ``.`` doesn’t match ``\\x0D\\x0A`` and ``\\x0A`` and ``\\x0D`` (if "
"you are using `Unicode version <tregexpr_interface.html#unicode>`__ of "
"TRegExpr, then also ``\\x2028`` and  ``\\x2029`` and ``\\x0B`` and "
"``\\x0C`` and ``\\x85``)."
msgstr ""

# f81e8471526e433dac99ecba23596cec
#: ../../regexp_syntax.rst:185
msgid ""
"Note that ``^.*$`` (an empty line pattern) does not match the empty "
"string within the sequence ``\\x0D\\x0A``, but matchs the empty string "
"within the sequence ``\\x0A\\x0D``."
msgstr ""
"Забележете, че &quot;^. * $` `(Празен шаблон на линия) не съвпада с "
"празния низ в последователността&quot; x0D0A &quot;, но съвпада с празния"
" низ в последователността&quot; x0A x0D &quot; ,"

# 34f4cb335eb246e78555c6de9e183ea5
#: ../../regexp_syntax.rst:189
msgid ""
"Multiline processing can be easely tuned for your own purpose with help "
"of TRegExpr properties `LineSeparators "
"<tregexpr_interface.html#lineseparators>`_ and `LinePairedSeparator "
"<tregexpr_interface.html#linepairedseparator>`_, you can use only Unix "
"style separators ``\\n`` or only DOS/Windows style ``\\r\\n`` or mix them"
" together (as described above and used by default) or define your own "
"line separators!"
msgstr ""
"Multiline обработката може лесно да бъде настроена за ваша собствена цел "
"с помощта на свойствата на TRegExpr ® LineSeparators "
"<tregexpr_interface.html#lineseparators>`_ и` LinePairedSeparator "
"<tregexpr_interface.html#linepairedseparator>`_, можете да използвате "
"само разделители за стил на Unix` `n`` или само стил DOS / Windows` `r`` "
"или да ги смесвате заедно (както е описано по-горе и използвано по "
"подразбиране) или да дефинирате собствени разделители на линии!"

# 81e3066e722f4adfb9bb68c941260b11
#: ../../regexp_syntax.rst:198
msgid "Word boundaries"
msgstr "Граници на думи"

# d74e1b5ab0794b27875247d4588aed0b
#: ../../regexp_syntax.rst:205
msgid ""
"A word boundary ``\\b`` is a spot between two characters that has a "
"``\\w`` on one side of it and a ``\\W`` on the other side of it (in "
"either order), counting the imaginary characters off the beginning and "
"end of the string as matching a ``\\W``."
msgstr ""
"Думата граница &quot;b&quot; е място между два знака, което има `` `` от "
"едната страна на него и `` `` от другата страна (в който и да е ред), "
"като се брои въображаемите символи на разстояние от началото и края на "
"низът като съвпадение на ``W``."

# a07329be340945ea8edd4cd5d258b969
#: ../../regexp_syntax.rst:211
msgid "Iterators"
msgstr "Итераторите"

# 04acda6d45cc4d9fb1bcd696cae8e926
#: ../../regexp_syntax.rst:213
msgid ""
"Any item of a regular expression may be followed by iterator. Iterator "
"specify number of repetition of the item."
msgstr ""
"Всеки елемент от регулярен израз може да бъде последван от итератор. "
"Iterator посочва броя на повторенията на елемента."

# 65658743edec4131af85fbd64959dfe5
#: ../../regexp_syntax.rst:231
msgid ""
"So, digits in curly brackets ``{n,m}``, specify the minimum number of "
"times to match ``n`` and the maximum ``m``."
msgstr ""
"Така, цифрите в къдрави скоби `` {n, m} ``, определят минималния брой "
"пъти, за да съответстват ``n`` и максималния ``m``."

# 7083fd33a7e040e3b3be29d9c829ebbc
#: ../../regexp_syntax.rst:234
msgid "The ``{n}`` is equivalent to ``{n,n}`` and matches exactly ``n`` times."
msgstr "`` {N} `` е еквивалентно на `` {n, n} `` и отговаря точно на ``n`` пъти."

# 957a3ac1c4f24f719fa5983197f653e5
#: ../../regexp_syntax.rst:236
msgid "The ``{n,}`` matches ``n`` or more times."
msgstr "`` {N,} `` съвпада с ``n`` или повече пъти."

# 312805d4873842c7b1f0f748e6f618c5
#: ../../regexp_syntax.rst:238
msgid ""
"There is no limit to the size of ``n`` or ``m``, but large numbers will "
"chew up more memory and slow down r.e. execution."
msgstr ""
"Няма ограничение за размера на ``n`` или ``m``, но големите числа ще "
"дъвчат повече памет и ще забавят повторното изпълнение."

# 13f1f9fee226460bbcdc883a5737304a
#: ../../regexp_syntax.rst:242
msgid ""
"If a curly bracket occurs in any other context, it is treated as a "
"regular character."
msgstr ""
"Ако фигурна скоба се появява във всеки друг контекст, тя се третира като "
"редовен символ."

# 55e370c749bb49cf9832463f0cee7887
#: ../../regexp_syntax.rst:256
msgid "Greediness"
msgstr "лакомия"

# 5f164e416b99414096ab1161392c065c
#: ../../regexp_syntax.rst:258
msgid ""
"“Greedy” (default) mode takes as many as possible, “non-greedy” takes as "
"few as possible."
msgstr ""

# 89d9da7f46c84cdb85f35ccd343ea378
#: ../../regexp_syntax.rst:260
msgid "For example, ``b+`` applied to string ``abbbbc`` returns ``bbbb``."
msgstr "Например, `` b + ``, приложено към низ ``abbbbc``, връща ``bbbb``."

# ba0609a7e0d3463d9191128af1b41f3f
#: ../../regexp_syntax.rst:262
msgid "``b+?`` returns ``b``, ``b*?`` returns empty string."
msgstr "`` b +? `` връща ``b``, `` b *? `` връща празен низ."

# 273b3453a56b42d187c64be4c9e0736f
#: ../../regexp_syntax.rst:264
msgid "``b{2,3}?`` returns ``bb``, ``b{2,3}`` returns ``bbb``."
msgstr "`` b {2,3}? `` връща ``bb``, `` b {2,3} `` връща ``bbb``."

# b66beb64fd70451399aefc3097936d11
#: ../../regexp_syntax.rst:266
msgid "You can switch all iterators into “non-greedy” mode (`modifier /g <#g>`_)."
msgstr ""
"Можете да превключите всички итератори в “не-алчен” режим (`modifier / g "
"<#g>`_)."

# d93b2586f3864904850c6176b1cf66df
#: ../../regexp_syntax.rst:269
msgid "Alternatives"
msgstr ""

# e14b0ac2ce974b1e9a163734d6e15de5
#: ../../regexp_syntax.rst:271
msgid "Series of alternatives are separated by ``|``."
msgstr "Серии от алтернативи се разделят с `` | ``."

# 9505557ec40a4628bcf209ff7addb560
#: ../../regexp_syntax.rst:273
msgid ""
"So ``fee|fie|foe`` will match any of ``fee``, ``fie``, or ``foe`` in the "
"target string (as would ``f(e|i|o)e``)."
msgstr ""

# 4ab43a2c82ca4645bba942b595d4fe7b
#: ../../regexp_syntax.rst:276
msgid ""
"The first alternative includes everything from the last pattern delimiter"
" (``(``, ``[``, or the beginning of the pattern) up to the first ``|``, "
"and the last alternative contains everything from the last ``|`` to the "
"next pattern delimiter."
msgstr ""
"Първата алтернатива включва всичко - от последния разделител на шаблона "
"(`` (``, ``[``, или началото на шаблона] до първия `` | ``, а последната "
"алтернатива съдържа всичко от последното ``; `|` `към следващия "
"разделител на шаблона."

# 1c4544867c1948b3bfafe3b25ce0e272
#: ../../regexp_syntax.rst:281
msgid ""
"Sounds a little complicated, so it’s common practice to include "
"alternatives in parentheses, to minimize confusion about where they start"
" and end."
msgstr ""
"Звучи малко сложно, така че е обичайна практика да се включват "
"алтернативи в скоби, за да се сведе до минимум объркването за това къде "
"те започват и завършват."

# 2681a9d2b8e44d26921f4fd32e2ea2db
#: ../../regexp_syntax.rst:285
msgid ""
"Alternatives are tried from left to right, so the first alternative found"
" for which the entire expression matches, is the one that is chosen."
msgstr ""
"Алтернативите се изпробват отляво надясно, така че първата намерена "
"алтернатива, за която съвпада целия израз, е избраната."

# 80eb9ab2149844699b57da6986e70671
#: ../../regexp_syntax.rst:289
msgid ""
"This means that alternatives are not necessarily ``greedy``. For example,"
" regular expression ``foo|foot`` in string ``barefoot`` will match "
"``foo``. Just a first alternative that's match."
msgstr ""

# 7b0db3f69a174600bf34bfe25b261511
#: ../../regexp_syntax.rst:293
msgid ""
"Also remember that ``|`` is interpreted as a literal within square "
"brackets, so if you write ``[fee|fie|foe]`` you’re really only matching "
"``[feio|]``."
msgstr ""

# aa64c2f338a04b289fe78d3cfa633298
#: ../../regexp_syntax.rst:302
msgid "Subexpressions"
msgstr "Subexpressions"

# 860e411631de43199768e5f102caa53f
#: ../../regexp_syntax.rst:304
msgid ""
"The brackets ``( ... )`` may also be used to define regular expression "
"subexpressions."
msgstr ""
"В скоби `` (...) `` може да се използва и за дефиниране на подекспресии "
"на регулярни изрази."

# 52c6047525cb405a8224e9cea120506d
#: ../../regexp_syntax.rst:307
msgid ""
"Subexpression positions, lengths and actual values will be in `MatchPos "
"<tregexpr_interface.html#matchpos>`_, `MatchLen "
"<tregexpr_interface.html#matchlen>`_ and `Match "
"<tregexpr_interface.html#match>`_."
msgstr ""

# 62e9e88af070460883b9f0a5b68accf9
#: ../../regexp_syntax.rst:312
msgid ""
"You can substitute them with `Substitute "
"<tregexpr_interface.html#substitute>`_)."
msgstr ""
"Можете да ги замените с &quot;Заместник&quot; "
"<tregexpr_interface.html#substitute>`_)."

# 3ad9d40bb6e44a82b47121d71ca31d07
#: ../../regexp_syntax.rst:315
msgid ""
"Subexpressions are numbered from left to right by their opening "
"parenthesis (including nested subexpressions)."
msgstr ""
"Подекспресиите се номерират от ляво на дясно чрез тяхната отваряща скоба "
"(включително вложени вдъхновения)."

# 62e9e88af070460883b9f0a5b68accf9
#: ../../regexp_syntax.rst:318
msgid ""
"First subexpression has number ``1``. Whole regular expression match has "
"number ``0``."
msgstr ""

# 55e370c749bb49cf9832463f0cee7887
#: ../../regexp_syntax.rst:325
msgid "Backreferences"
msgstr ""

# 6b83dd2925a94284a63aaa9cf83558b4
#: ../../regexp_syntax.rst:327
msgid ""
"Metacharacters ``\\1`` through ``\\9`` are interpreted as backreferences."
" ``\\n`` matches previously matched subexpression ``n``."
msgstr ""
"Метасимволите ``1`` до `` `` се тълкуват като обратни връзки. `` `` "
"съвпада с предварително съвпадащата субекспресия ``n``."

# acc26861fb344313bdecdff6f626fae3
#: ../../regexp_syntax.rst:335
msgid ""
"``(['\"]?)(\\d+)\\1`` matchs ``\"13\"`` (in double quotes), or ``'4'`` "
"(in single quotes) or ``77`` (without quotes) etc"
msgstr ""
"&quot;(&quot; [? “)?) (d +) 1`` съответства на&quot; 13 &quot;(в двойни "
"кавички), или&quot; 4 &quot;(в единични кавички) или&quot; 77 &quot; (без"
" кавички) и т.н."

# 10d44507f07642ffad564d91080daaf5
#: ../../regexp_syntax.rst:339
msgid "Modifiers"
msgstr "Модификатори"

# 0c63b470addc4ff29d3efc2f94fb91d5
#: ../../regexp_syntax.rst:341
msgid "Modifiers are for changing behaviour of ``TRegExpr``."
msgstr "Модификаторите са за промяна на поведението на &quot;TRegExpr&quot;."

# f42fac798a424605a6da99f290cff531
#: ../../regexp_syntax.rst:343
msgid "There are two ways to set up modifiers:"
msgstr ""

# 03e59023c9184d39a7431d9800f66b6a
#: ../../regexp_syntax.rst:345
msgid ""
"1) Embed within the regular expression using the `(?imsxr-imsxr) "
"<#inlinemodifiers>`_."
msgstr ""
"1) Вградете в нормалния израз, като използвате `(? Imsxr-imsxr) "
"<#inlinemodifiers>`_."

# 9abd0acbc64f4ff4b1d750fa74a6b286
#: ../../regexp_syntax.rst:349
msgid ""
"2) Assign to appropriate ``TRegExpr`` property (`Modifier* "
"<tregexpr_interface.html#modifierstr>`__. The default values for new "
"instances of TRegExpr object defined in `global variables "
"<tregexpr_interface.html#global-constants>`_. For example global variable"
" ``RegExprModifierX`` defines default value for ``ModifierX`` property."
msgstr ""
"2) Присвояване на подходящо свойство ``TRegExpr`` (`Модификатор * "
"<tregexpr_interface.html#modifierstr>`__. Стойностите по подразбиране за "
"нови инстанции на TRegExpr обект, дефинирани в `глобални променливи "
"<tregexpr_interface.html#global-constants>`_. Например глобалната "
"променлива ``RegExprModifierX`` определя стойността по подразбиране за ``"
" ModifierX``."

# 4a462047eaf94227b65ffd9f4b2c6899
#: ../../regexp_syntax.rst:357
msgid "i"
msgstr "аз"

# 336d3504dd62438cbbf9e16a5f2b5f16
#: ../../regexp_syntax.rst:359
msgid ""
"Case-insensitive pattern matching (using installed in you system locale "
"settings), see also `InvertCase <tregexpr_interface.html#invertcase>`__."
msgstr ""

# b1f3e4923431478aa78430ab93a48a1c
#: ../../regexp_syntax.rst:364
msgid "m"
msgstr "m"

# ae46910d6aeb417d91171cb96808a329
#: ../../regexp_syntax.rst:366
msgid ""
"Treat string as multiple lines. So ``^`` and ``$`` matches the start or "
"end of any line anywhere within the string."
msgstr ""
"Третирайте низ като няколко реда. Така `` `` и `` $ `` съвпадат с "
"началото или края на всяка линия навсякъде в низ."

# 5aeb46204921485d91b0ddb0dad01dda
#: ../../regexp_syntax.rst:369
msgid "See also `Line separators <tregexpr_interface.html#lineseparators>`_."
msgstr ""
"Вижте също `Разделители на линии "
"<tregexpr_interface.html#lineseparators>`_."

# ea24f3c286df48d58014591089ab9677
#: ../../regexp_syntax.rst:373
msgid "s"
msgstr "с"

# 7ff99496b53b4de8bb3f965560c7c840
#: ../../regexp_syntax.rst:375
msgid ""
"Treat string as single line. So ``.`` matches any character whatsoever, "
"even a line separators."
msgstr ""
"Третирайте низ като един ред. Така `` `` съответства на какъвто и да е "
"знак, дори и на линейни разделители."

# 7ff99496b53b4de8bb3f965560c7c840
#: ../../regexp_syntax.rst:378
msgid ""
"See also `Line separators <tregexpr_interface.html#lineseparators>`_, "
"which it normally would not match."
msgstr ""

# 3685b2edadf5463ea8f478cd0263ebcb
#: ../../regexp_syntax.rst:383
msgid "g"
msgstr ""

# a0bd7c1b560a4edd8e320bf7e9a30bf7
#: ../../regexp_syntax.rst:385
msgid "Non standard modifier."
msgstr "Нестандартен модификатор."

# b482af902d594489a5d615c34239b1f0
#: ../../regexp_syntax.rst:387
msgid ""
"Switching it ``Off`` you’ll switch all following operators into non-"
"greedy mode. So, if modifier ``/g`` is ``Off`` then ``+`` works as "
"``+?``, ``*`` as ``*?`` and so on."
msgstr ""

# 1377c54e69dd405b81e388fc341c6045
#: ../../regexp_syntax.rst:392
msgid "By default this modifier is ``On``."
msgstr "По подразбиране този модификатор е ``On``."

# 3bb504401df24e5fbe54f7be33071435
#: ../../regexp_syntax.rst:395
msgid "x"
msgstr ""

# 3c377316934041718ac686f39bdf75dc
#: ../../regexp_syntax.rst:397
msgid ""
"Tells the ``TRegExpr`` to ignore whitespace that is neither backslashed "
"nor within a character class. You can use this to break up your regular "
"expression into more readable parts."
msgstr ""

# c5d316b3cc6a4b4abebb54fcf2e6006a
#: ../../regexp_syntax.rst:401
msgid ""
"The ``#`` character is also treated as a metacharacter introducing a "
"comment."
msgstr ""
"Символът `` # &#39;&#39; също се третира като метасимвол, въвеждащ "
"коментар."

# 37e93e770a8f4e238ece39fad50a3eae
#: ../../regexp_syntax.rst:412
msgid ""
"This also means that if you want real whitespace or ``#`` characters in "
"the pattern (outside a character class, where they are unaffected by "
"``/x``), you’ll either have to escape them or encode them using octal or "
"hex escapes."
msgstr ""

# 2aafc1c7b3494a359ea31210613b3a91
#: ../../regexp_syntax.rst:418
msgid "r"
msgstr "R"

# a4524cc0e17b4aa5a9a86a3f07529b9c
#: ../../regexp_syntax.rst:420
msgid "Non-standard modifier."
msgstr "Нестандартно модификатор."

# d99041e46b0245dfbf138db8515d378b
#: ../../regexp_syntax.rst:422
msgid ""
"If is set then range ``а-я`` includes also ``ё``. And ``А-Я`` includes "
"also ``Ё``. And ``а-Я`` includes all russian symbols."
msgstr ""
"Ако е зададен, то обхватът &quot;а-я&quot; включва и `````. А "
"&quot;А-Я&quot; включва и &quot;Ё&quot;. А `а-Я` включва всички руски "
"символи."

# e673894b7b1e4e048b259d2ff1c2e991
#: ../../regexp_syntax.rst:426
msgid "The modifier is set `On` by default."
msgstr "Модификаторът е зададен по подразбиране &quot;On&quot;."

# aa64c2f338a04b289fe78d3cfa633298
#: ../../regexp_syntax.rst:429
msgid "Perl extensions"
msgstr "Perl разширения"

# 4522bf02a20d4c0d8109e8e70090609e
#: ../../regexp_syntax.rst:434
msgid "(?imsxr-imsxr)"
msgstr "(? Imsxr-imsxr)"

# a9b874f64bfd435892ffbcc7a97df1a0
#: ../../regexp_syntax.rst:436
msgid ""
"You may use it into r.e. for modifying modifiers by the fly. If this "
"construction inlined into subexpression, then it effects only into this "
"subexpression"
msgstr ""
"Можете да го използвате за повторно модифициране на модификаторите от "
"мухата. Ако тази конструкция е вдъхновена в субекспресия, тогава тя се "
"отразява само на тази субекспресия"

# 53b90f25371d42e8a3ef2f3433b16fd0
#: ../../regexp_syntax.rst:448
msgid "(?#text)"
msgstr "(?#текст)"

# 02ed8d39191842edbf00cc22d3f634e0
#: ../../regexp_syntax.rst:450
msgid ""
"A comment, the text is ignored. Note that TRegExpr closes the comment as "
"soon as it sees a ``)``, so there is no way to put a literal ``)`` in the"
" comment."
msgstr ""
"Коментар, текстът се игнорира. Имайте предвид, че TRegExpr затваря "
"коментара веднага щом види ``) ``, така че няма начин да сложи литерала "
"``) `` в коментара."

# 92033bf22124478a99083d06a522aca6
#: ../../regexp_syntax.rst:454
msgid ""
"Just now don’t forget to read the `FAQ <faq.html>`_ (expecially ‘non-"
"greediness’ optimization `question <faq.html#nongreedyoptimization>`_)."
msgstr ""
"Точно сега не забравяйте да прочетете `FAQ <faq.html>`_ (въпросът за "
"оптимизацията не е алчност) <faq.html#nongreedyoptimization>`_)."

# 96f6048d393f498a9255866a0e9b565e
#: ../../regexp_syntax.rst:459
msgid "Play ground"
msgstr "Игрище"

# c990b4abbf904ff9bbae2944ce7f96b8
#: ../../regexp_syntax.rst:461
msgid ""
"You can play with regular expressions using Windows `REStudio "
"<https://github.com/masterandrey/TRegExpr/releases/download/0.952b/REStudio.exe>`_."
msgstr ""
"Можете да играете с регулярни изрази с помощта на &quot;REStudio&quot; на"
" Windows "
"<https://github.com/masterandrey/TRegExpr/releases/download/0.952b/REStudio.exe>`_."

