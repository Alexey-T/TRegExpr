# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-26 13:41+0300\n"
"PO-Revision-Date: 2019-05-08 09:12+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: French "
"(https://www.transifex.com/masterAndrey/teams/98461/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# 8b91b48aa8cc4fa6989704106b075f9b
#: ../../faq.rst:6
msgid "English"
msgstr ""

# de8eaec964b44caa969d4c0554260f18
#: ../../faq.rst:7
#, fuzzy
msgid "`Русский <https://regex.sorokin.engineer/ru/latest/faq.html>`__"
msgstr "`Русский <https://regex.sorokin.engineer/ru/latest/index.html>`__"

# 5b034b6ed0fd4e8eb43b54c7af919236
#: ../../faq.rst:8
#, fuzzy
msgid "`Deutsch <https://regex.sorokin.engineer/de/latest/faq.html>`__"
msgstr "`Deutsch <https://regex.sorokin.engineer/de/latest/index.html>`__"

# 30275a62ea3b485dad6213838e7cef44
#: ../../faq.rst:9
#, fuzzy
msgid "`Български <https://regex.sorokin.engineer/bg/latest/faq.html>`__"
msgstr "`Български <https://regex.sorokin.engineer/bg/latest/index.html>`__"

# 4bfdf6e0a993484180e08f82511217d4
#: ../../faq.rst:10
#, fuzzy
msgid "`Français <https://regex.sorokin.engineer/fr/latest/faq.html>`__"
msgstr "`English <https://regex.sorokin.engineer/fr/latest/index.html>`__"

# 26f7df8f207445a7b791f6271a151d29
#: ../../faq.rst:11
#, fuzzy
msgid "`Español <https://regex.sorokin.engineer/es/latest/faq.html>`__"
msgstr "`Español <https://regex.sorokin.engineer/es/latest/index.html>`__"

# f4c5d9543b744cefaa7403e79a14612f
#: ../../faq.rst:14
msgid "FAQ"
msgstr "FAQ"

# 9d3d7b3a9c734313b57e8cb0b4901cdb
#: ../../faq.rst:17
msgid "I found a terrible bug: TRegExpr raises Access Violation exception!"
msgstr ""
"J&#39;ai trouvé un bug terrible: TRegExpr déclenche une exception de "
"violation d&#39;accès!"

# ace139c552db474ba39e0daa651c0daf
# a9d0e107500348919c95fcec7ad22651
# 04f6ceb1e42a47da98c095c1e10a0984
# 8af8f4daa99549cc9d8319053bf3c32a
# 1cc25edebc32455ba0a3efb294db4ada
# 00d7961f3bad4f479aedf0242255e555
# 3b0b6ba80aa948e783a39ab9e0e58f0e
# ed3681da4ce948c482690f6afb8fb8c5
# feea56036d58492094e1d31967becbca
# 2d9ed3e1f7ae46d180a969f71e21797c
# 223ecf4e33b141cba16ad42fd010bfb1
#: ../../faq.rst:19 ../../faq.rst:44 ../../faq.rst:54 ../../faq.rst:70
#: ../../faq.rst:83 ../../faq.rst:103 ../../faq.rst:114 ../../faq.rst:134
#: ../../faq.rst:161 ../../faq.rst:173 ../../faq.rst:186
msgid "**Answer**"
msgstr "**Réponse**"

# aa5401bb8d154a31b530a511217062db
#: ../../faq.rst:21
msgid ""
"You must create the object before usage. So, after you declared something"
" like:"
msgstr ""
"Vous devez créer l&#39;objet avant utilisation. Donc, après avoir déclaré"
" quelque chose comme:"

# eca009ee9dbd4f7c8edc26ab7b79cbed
#: ../../faq.rst:24
msgid "r : TRegExpr"
msgstr "r: TRegExpr"

# adf7e68737db4f318715259407cacfeb
#: ../../faq.rst:28
msgid "do not forget to create the object instance:"
msgstr "n&#39;oubliez pas de créer l&#39;instance d&#39;objet:"

# 2d2cd9a824d44bf0a270e4bd89ebb334
#: ../../faq.rst:30
msgid "r := TRegExpr.Create."
msgstr "r: = TRegExpr.Create."

# 6c23b4624c4446cb96a88dc880a175f6
#: ../../faq.rst:35
msgid "Regular expressions with (?=...) do not work"
msgstr "Les expressions régulières avec (? = ...) ne fonctionnent pas"

# dd699bf2d1e343faa9f008afce89241b
#: ../../faq.rst:37
msgid ""
"Look ahead is not implemented in the TRegExpr. But in many cases you can "
"easily `replace it with simple subexpressions "
"<regular_expressions.html#lookahead>`_."
msgstr ""
"Regarder devant n&#39;est pas implémenté dans le TRegExpr. Mais dans de "
"nombreux cas, vous pouvez facilement le remplacer par de simples `sous-"
"expressions. <regular_expressions.html#lookahead>`_."

# 86e279db0f2a4191bbad43ddc6f6e72f
#: ../../faq.rst:42
msgid "Does it support Unicode?"
msgstr "Est-ce qu&#39;il prend en charge Unicode?"

# f77cadf056444008ae8430cd57745a0a
#: ../../faq.rst:46
msgid "`How to use Unicode <tregexpr.html#unicode>`__"
msgstr "`Comment utiliser Unicode <tregexpr.html#unicode>`__"

# 9bbce3d11e354a42a81f07c7800ac04f
#: ../../faq.rst:49
msgid "Why does TRegExpr return more then one line?"
msgstr "Pourquoi TRegExpr renvoie-t-il plus d&#39;une ligne?"

# ca3bc0d659264d9a986005d388d99a22
#: ../../faq.rst:51
msgid ""
"For example, r.e. ``<font .\\*>`` returns the first ``<font``, then the "
"rest of the file including last ``</html>``."
msgstr ""
"Par exemple, re `` <font .\\*>`` renvoie le premier ``</font> <font``, "
"then the rest of the file including last ``</html> <font .\\*>``.</font>"

# 1d3c88ed2a134a19b7cdae39e3dad1fb
#: ../../faq.rst:56
msgid ""
"For backward compatibility, `modifier /s "
"<regular_expressions.html#modifier_s>`__ is ``On`` by default."
msgstr ""
"Pour la compatibilité ascendante, modificateur / s "
"<regular_expressions.html#modifier_s>`__ est` `On`` par défaut."

# 9d6754378b234933acae90469163d133
#: ../../faq.rst:59
msgid ""
"Switch it Off and ``.`` will match any but `Line separators "
"<regular_expressions.html#syntax_line_separators>`__ - exactly as you "
"wish."
msgstr ""
"Eteignez-le et ``.`` correspondra à tout sauf `séparateurs de lignes "
"<regular_expressions.html#syntax_line_separators>`__ - exactement comme "
"vous le souhaitez."

# 9e4b34f73bc94f32bbf649d10793e127
#: ../../faq.rst:62
msgid "BTW I suggest ``<font ([^\\n>]*)>``, in ``Match[1]`` will be the URL."
msgstr ""
"BTW, je suggère &quot;` <font ([^\\n>] *)&gt; &quot;, dans&quot; Match "
"[1] &quot;sera l&#39;URL.</font>"

# 0cb563a1ae9d4d5bb9dc46b6ecfc90d2
#: ../../faq.rst:65
msgid "Why does TRegExpr return more then I expect?"
msgstr "Pourquoi TRegExpr renvoie-t-il plus que ce à quoi je m&#39;attendais?"

# af83ab7928d54746abad0592dc967ff3
#: ../../faq.rst:67
msgid ""
"For example r.e. ``<p>(.+)</p>`` applyed to string ``<p>a</p><p>b</p>`` "
"returns ``a</p><p>b`` but not ``a`` as I expected."
msgstr ""
"Par exemple re `` <p> (. +) </p> `` appliqué à la chaîne `` <p> une "
"</p><p> b </p> `` renvoie `` a </p><p> b`` mais pas ``a`` comme je "
"m&#39;y attendais."

# 1c546cbcc27543e1828cc89aafa7082f
#: ../../faq.rst:72
msgid ""
"By default all operators works in ``greedy`` mode, so they match as more "
"as it possible."
msgstr ""
"Par défaut, tous les opérateurs fonctionnent en mode ``greedy``, de sorte"
" qu&#39;ils correspondent le plus possible."

# 4bc5407d2acf4901a04110d5fcdf24e9
#: ../../faq.rst:75
msgid ""
"If you want ``non-greedy`` mode you can use ``non-greedy`` operators like"
" ``+?`` and so on or switch all operators into ``non-greedy`` mode with "
"help of modifier ``g`` (use appropriate TRegExpr properties or operator "
"``?(-g)`` in r.e.)."
msgstr ""
"Si vous voulez le mode ``non-gourmand``, vous pouvez utiliser des "
"opérateurs ``non-gloutons`` comme ``+?`` Et ainsi de suite ou basculer "
"tous les opérateurs en mode ``non-gloutons`` avec l&#39;aide du "
"modificateur ``g`` (utilisez les propriétés TRegExpr appropriées ou "
"l&#39;opérateur ``?(-g)``dans re)."

# a5ecf81a5374494a981df531cbd30c5f
#: ../../faq.rst:81
msgid "How to parse sources like HTML with help of TRegExpr?"
msgstr "Comment analyser des sources comme HTML avec l&#39;aide de TRegExpr?"

# 53e7aca1bcc846ac992b0955347782b0
#: ../../faq.rst:85
msgid "Sorry folks, but it's nearly impossible!"
msgstr "Désolé les gars, mais c&#39;est presque impossible!"

# f0ff947789034c17b931a65a3e9dea59
#: ../../faq.rst:87
msgid ""
"Of course, you can easily use TRegExpr for extracting some information "
"from HTML, as shown in my examples, but if you want accurate parsing you "
"have to use real parser, not r.e."
msgstr ""
"Bien sûr, vous pouvez facilement utiliser TRegExpr pour extraire "
"certaines informations à partir de HTML, comme indiqué dans mes exemples,"
" mais si vous souhaitez une analyse précise, vous devez utiliser un "
"analyseur syntaxique réel."

# 8c033d5410014914bb489d51e80a89af
#: ../../faq.rst:91
msgid ""
"You can read full explanation in Tom Christiansen and Nathan Torkington "
"``Perl Cookbook``, for example."
msgstr ""
"Vous pouvez lire une explication complète dans Tom Christiansen et Nathan"
" Torkington, `` Perl Cookbook``, par exemple."

# fdc4d0c9b7e74c74918fabe35cdcc25a
#: ../../faq.rst:94
msgid ""
"In short - there are many structures that can be easy parsed by real "
"parser but cannot at all by r.e., and real parser is much faster to do "
"the parsing, because r.e. doesn't simply scan input stream, it performs "
"optimization search that can take a lot of time."
msgstr ""
"En bref - il existe de nombreuses structures qui peuvent facilement être "
"analysées par un analyseur réel mais ne peuvent pas du tout être "
"analysées. Cet analyseur réel est beaucoup plus rapide à analyser, car il"
" ne scanne pas simplement le flux d&#39;entrée, il effectue une recherche"
" d&#39;optimisation pouvant prendre beaucoup de temps."

# 9c71fc46337846998fb6a0ee855dd9c9
#: ../../faq.rst:101
msgid "Is there a way to get multiple matches of a pattern on TRegExpr?"
msgstr ""
"Existe-t-il un moyen d&#39;obtenir plusieurs correspondances d&#39;un "
"modèle sur TRegExpr?"

# 377af4e77ecc4dbeb4ea6278a4a3e34c
#: ../../faq.rst:105
msgid "You can iterate matches with ExecNext method."
msgstr "Vous pouvez itérer des correspondances avec la méthode ExecNext."

# bf61bcf537e84477ba2367b56f92d8b7
#: ../../faq.rst:107
msgid ""
"If you want some example, please take a look at ``TRegExpr.Replace`` "
"method implementation or at the examples for `HyperLinksDecorator "
"<demos.html>`_"
msgstr ""
"Si vous voulez quelques exemples, jetez un œil à l&#39;implémentation de "
"la méthode ``TRegExpr.Replace`` ou aux exemples de `HyperLinksDecorator "
"<demos.html>`_"

# 4dedc5f5e32946a4b3440dd9bea863a2
#: ../../faq.rst:112
msgid ""
"I am checking user input. Why does TRegExpr return ``True`` for wrong "
"input strings?"
msgstr ""
"Je vérifie les entrées de l&#39;utilisateur. Pourquoi TRegExpr "
"renvoie-t-il ``True`` pour les chaînes d&#39;entrée incorrectes?"

# dc6abd55eada40e7948ade41a508bbad
#: ../../faq.rst:116
msgid ""
"In many cases TRegExpr users forget that regular expression is for "
"**search** in input string."
msgstr ""
"Dans de nombreux cas, les utilisateurs de TRegExpr oublient que "
"l&#39;expression régulière est utilisée pour ** rechercher ** dans la "
"chaîne de saisie."

# 8ea46cd41a804258930bda50eb03453c
#: ../../faq.rst:119
msgid ""
"So, for example if you use ``\\d{4,4}`` expression, you will get success "
"for wrong user inputs like ``12345`` or ``any letters 1234``."
msgstr ""
"Ainsi, par exemple, si vous utilisez une expression `` \\ d {4,4} ``, "
"vous obtiendrez un succès pour les entrées utilisateur incorrectes telles"
" que ``12345`` ou ``toutes les lettres 1234``."

# 51604eec8f1a4b6397435d2e558b294d
#: ../../faq.rst:122
msgid ""
"You have to check from line start to line end to ensure there are no "
"anything else around: ``^\\d{4,4}$``."
msgstr ""
"Vous devez vérifier du début à la fin de la ligne pour vous assurer "
"qu&#39;il n&#39;y a plus rien d&#39;autre: `` ^ \\ d {4,4} $ ``."

# 3c95393d60c64116a7b3bc0d86c57cac
#: ../../faq.rst:128
msgid "Why does non-greedy iterators sometimes work as in greedy mode?"
msgstr ""
"Pourquoi les itérateurs non-gourmands fonctionnent-ils parfois comme en "
"mode gourmand?"

# 6a94e68f92e1432481182e29373d2f1f
#: ../../faq.rst:130
msgid ""
"For example, the r.e. ``a+?,b+?`` applied to string ``aaa,bbb`` matches "
"``aaa,b``, but should it not match ``a,b`` because of non-greediness of "
"first iterator?"
msgstr ""
"Par exemple, le r.e. ``a+?,b+?`` Appliqué à la chaîne ``aaa,bbb`` "
"correspond à ``aaa,b``, mais ne devrait-il pas correspondre à ``a,b`` à "
"cause de la non-cupidité du premier itérateur?"

# 0abe79b4fc0d4aec80fbbc6cb4de06e2
#: ../../faq.rst:136
msgid ""
"This is because of TRegExpr way to work. In fact many others r.e. engines"
" work exactly the same: they performe only ``simple`` search "
"optimization, and do not try to do the best optimization."
msgstr ""
"C&#39;est à cause de la manière de TRegExpr de travailler. En fait, "
"beaucoup d&#39;autres moteurs fonctionnent exactement de la même manière:"
" ils ne font que l&#39;optimisation de la recherche ``simple``, et "
"n&#39;essayent pas de faire la meilleure optimisation."

# 35e4650d4ecf4bb1a7544658ab8bad07
#: ../../faq.rst:140
msgid ""
"In some cases it's bad, but in common it's rather advantage then "
"limitation, because of performance and predictability reasons."
msgstr ""
"Dans certains cas, c&#39;est mauvais, mais en commun, c&#39;est plutôt un"
" avantage que une limitation, pour des raisons de performance et de "
"prévisibilité."

# d5fc27db2e49486c859a0696c2f3947f
#: ../../faq.rst:143
msgid ""
"The main rule - r.e. first of all try to match from current place and "
"only if that's completely impossible move forward by one char and try "
"again from next position in the text."
msgstr ""
"La règle principale - essayez d’abord de faire la correspondance à partir"
" de l’emplacement actuel et seulement si cela est absolument impossible, "
"avancez d’un caractère et essayez à nouveau de la position suivante dans "
"le texte."

# 36fd9a7e76324f84a3bda28ccd3b1b8e
#: ../../faq.rst:147
msgid ""
"So, if you use ``a,b+?`` it'll match ``a,b``. In case of ``a+?,b+?`` it's"
" now not recommended (we add non-greedy modifyer) but still possible to "
"match more then one ``a``, so TRegExpr will do it."
msgstr ""
"Donc, si vous utilisez «a, b +?», Cela correspond à «a, b». Dans le cas "
"de ``a+?,b+?``, Ce n&#39;est plus recommandé (nous ajoutons un "
"modificateur non-glouton) mais il est toujours possible de faire "
"correspondre plus d&#39;un ``a``, donc TRegExpr le fera."

# 6d3322cb2d6a4ac6a79ef91632c9d04c
#: ../../faq.rst:151
msgid ""
"TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and "
"check - would it will be \"better\" match. Fisrt of all, just because "
"there is no way to say it's more or less good match."
msgstr ""
"TRegExpr comme Perl ou Unix ne tente pas d’avancer et de vérifier - ce "
"serait une &quot;meilleure&quot; correspondance. En premier lieu, juste "
"parce qu’il n’ya aucun moyen de dire que c’est plus ou moins bon."

# e7b4ac68b8dc440da1b092a3e4be7f69
#: ../../faq.rst:157
msgid "How can I use TRegExpr with Borland C++ Builder?"
msgstr "Comment utiliser TRegExpr avec Borland C ++ Builder?"

# e3175e4aaf3e4a4286a23bcf99325e70
#: ../../faq.rst:159
msgid "I have a problem since no header file (``.h`` or ``.hpp``) is available."
msgstr ""
"J&#39;ai un problème car aucun fichier d&#39;en-tête (``.h`` ou ``.hpp``)"
" n&#39;est disponible."

# 56e168e7f59f406584b26e23f454de7d
#: ../../faq.rst:163
msgid "Add ``RegExpr.pas`` to ``bcb`` project."
msgstr "Ajoutez ``RegExpr.pas`` au projet ``bcb``."

# 564dbd5c8a054246be9e733a5bfc8081
#: ../../faq.rst:164
msgid "Compile project. This generates the header file ``RegExpr.hpp``."
msgstr "Compiler le projet. Cela génère le fichier d’en-tête ``RegExpr.hpp``."

# 458a6e97f830430b9c392329c3551f4d
#: ../../faq.rst:165
msgid "Now you can write code which uses the ``RegExpr`` unit."
msgstr "Vous pouvez maintenant écrire du code utilisant l’unité ``RegExpr``."

# 5c694c5ffce044dc89eb33065913b119
#: ../../faq.rst:166
msgid "Don't forget to add  ``#include “RegExpr.hpp”`` where needed."
msgstr "N&#39;oubliez pas d&#39;ajouter «#include« RegExpr.hpp »` `si nécessaire."

# dae10011da1a4048bdee249504151e87
#: ../../faq.rst:167
msgid ""
"Don't forget to replace all ``\\`` in regular expressions with ``\\\\`` "
"or redefined `EscChar <tregexpr.html#escchar>`__ const."
msgstr ""
"N&#39;oubliez pas de remplacer tous les ``\\`` dans les expressions "
"régulières par ``\\\\`` ou redéfinis `EscChar <tregexpr.html#escchar>`__ "
"const."

# 264106ace4e942d59634d2831942aaa9
#: ../../faq.rst:171
msgid ""
"Why many r.e. (including r.e. from TRegExpr help and demo) work wrong in "
"Borland C++ Builder?"
msgstr ""
"Pourquoi beaucoup de solutions (y compris de l&#39;aide et de la "
"démonstration TRegExpr) fonctionnent-elles mal dans Borland C ++ Builder?"

# eb9cfc8291e141f591ea9c3c4341f5b4
#: ../../faq.rst:175
msgid ""
"The hint is in the previous question ;) Symbol ``\\`` has special meaning"
" in ``C++``, so you have to ``escape`` it (as described in previous "
"answer). But if you don't like r.e. like ``\\\\w+\\\\\\\\w+\\\\.\\\\w+`` "
"you can redefine the constant ``EscChar`` (in ``RegExpr.pas``). For "
"example ``EscChar = \"/\"``. Then you can write ``/w+/w+/./w+``, looks "
"unusual but more readable."
msgstr ""
"Le conseil se trouve dans la question précédente;) Le symbole `` `` a une"
" signification particulière dans ``C++``, il faut donc ``y échapper`` "
"(comme décrit dans la réponse précédente). Mais si vous n&#39;aimez pas "
"les choses comme ``\\\\w + \\\\\\\\ w + \\\\. \\\\ w + ``, vous pouvez "
"redéfinir la constante ``EscChar`` (dans ``RegExpr.pas``). Par exemple "
"``EscChar = &quot;/&quot;``. Ensuite, vous pouvez écrire ``/w+/w+/./w+``,"
" semble inhabituel mais plus lisible."

# d71401485c1640b29d19998af0548ae7
#: ../../faq.rst:184
msgid "Why TRegExpr does not work with strings with #0 inside?"
msgstr ""

# 8c7a115a5d18412ca3b276de6978645a
#: ../../faq.rst:188
msgid ""
"The TRegExpr parser convert all strings to PChars and internally all "
"processing are based on #0k-terminated PChars."
msgstr ""

# 28d625d553ad49b591763bf49d5fb880
#: ../../faq.rst:191
msgid ""
"To make it work with #0 chars we need a big effort. Are you going to "
"volunteer to fix that?"
msgstr ""

# e2a3dc0c705640788818a205bca41480
#~ msgid "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"
#~ msgstr "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"

