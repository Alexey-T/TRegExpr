# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-08 11:59+0300\n"
"PO-Revision-Date: 2019-05-08 09:12+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: French (https://www.transifex.com/masterAndrey/teams/98461/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 7bbeef6bea68422db66aa6085017ef9f
#: ../../translations_list.rst:6
msgid "`Русский <https://regex.masterandrey.com/ru/latest/index.html>`__"
msgstr "`Русский <https://regex.masterandrey.com/ru/latest/index.html>`__"

# 47d26c4e88e1421c992425b65f8521ae
#: ../../translations_list.rst:7
msgid "`Deutsch <https://regex.masterandrey.com/de/latest/index.html>`__"
msgstr "`Deutsch <https://regex.masterandrey.com/de/latest/index.html>`__"

# 552aef36d89e4ec5a789d12e92aad0c5
#: ../../translations_list.rst:8
msgid "`Български <https://regex.masterandrey.com/bg/latest/index.html>`__"
msgstr "`Български <https://regex.masterandrey.com/bg/latest/index.html>`__"

# e4e735c9540244d3a49b5f5d285b4c61
#: ../../translations_list.rst:9
msgid "`Français <https://regex.masterandrey.com/fr/latest/index.html>`__"
msgstr "`English <https://regex.masterandrey.com/fr/latest/index.html>`__"

# e2a3dc0c705640788818a205bca41480
#: ../../translations_list.rst:10
msgid "`Español <https://regex.masterandrey.com/es/latest/index.html>`__"
msgstr "`Español <https://regex.masterandrey.com/es/latest/index.html>`__"

# cf1fdea7e27f4b6b9e33211b59fc1c64
#: ../../faq.rst:4
msgid "FAQ"
msgstr "FAQ"

# d6fc760c6fc94d9a899a479298b4c3dc
#: ../../faq.rst:7
msgid "I found a terrible bug: TRegExpr raises Access Violation exception!"
msgstr ""
"J&#39;ai trouvé un bug terrible: TRegExpr déclenche une exception de "
"violation d&#39;accès!"

# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
# 3833e9a61eba4b809278c359680e17ca
# 40da4f3424204e0f9f5560fb3c87b10a
# 40da4f3424204e0f9f5560fb3c87b10a
#: ../../faq.rst:9 ../../faq.rst:34 ../../faq.rst:44 ../../faq.rst:60
#: ../../faq.rst:73 ../../faq.rst:93 ../../faq.rst:104 ../../faq.rst:124
#: ../../faq.rst:151 ../../faq.rst:163
msgid "**Answer**"
msgstr "**Réponse**"

# 42f037ad3d0d4c54b07a7dca4f7e1779
#: ../../faq.rst:11
msgid ""
"You must create the object before usage. So, after you declared something "
"like:"
msgstr ""
"Vous devez créer l&#39;objet avant utilisation. Donc, après avoir déclaré "
"quelque chose comme:"

# a5956a2cf8c44909bc4302f8810f37ba
#: ../../faq.rst:14
msgid "r : TRegExpr"
msgstr "r: TRegExpr"

# e865298e59094744b6eb09fa43db311b
#: ../../faq.rst:18
msgid "do not forget to create the object instance:"
msgstr "n&#39;oubliez pas de créer l&#39;instance d&#39;objet:"

# c0ed663f35dc4b31b84a24a42dfb7508
#: ../../faq.rst:20
msgid "r := TRegExpr.Create."
msgstr "r: = TRegExpr.Create."

# c74dd30f3876405c96375f50eba0c708
#: ../../faq.rst:25
msgid "Regular expressions with (?=...) do not work"
msgstr "Les expressions régulières avec (? = ...) ne fonctionnent pas"

# 4c3e888756b74937a190a3d129fa0752
#: ../../faq.rst:27
msgid ""
"Look ahead is not implemented in the TRegExpr. But in many cases you can "
"easily `replace it with simple subexpressions "
"<regular_expressions.html#lookahead>`_."
msgstr ""
"Regarder devant n&#39;est pas implémenté dans le TRegExpr. Mais dans de "
"nombreux cas, vous pouvez facilement le remplacer par de simples `sous-"
"expressions. <regular_expressions.html#lookahead>`_."

# 77037f107b7e47abaa5fcf3a28e7b18c
#: ../../faq.rst:32
msgid "Does it support Unicode?"
msgstr "Est-ce qu&#39;il prend en charge Unicode?"

# 155b188809f94d1e9cca25cf1937d82d
#: ../../faq.rst:36
msgid "`How to use Unicode <tregexpr.html#unicode>`__"
msgstr "`Comment utiliser Unicode <tregexpr.html#unicode>`__"

# 836b9a07a857496c8570a92e1ff86f73
#: ../../faq.rst:39
msgid "Why does TRegExpr return more then one line?"
msgstr "Pourquoi TRegExpr renvoie-t-il plus d&#39;une ligne?"

# 27f1d5918d444c55b07292a55a65fd49
#: ../../faq.rst:41
msgid ""
"For example, r.e. ``<font .\\*>`` returns the first ``<font``, then the rest"
" of the file including last ``</html>``."
msgstr ""
"Par exemple, re `` <font .\\*>`` renvoie le premier ``</font> <font``, then "
"the rest of the file including last ``</html> <font .\\*>``.</font>"

# 2456e655103c4b788ccb1bf90ed3772b
#: ../../faq.rst:46
msgid ""
"For backward compatibility, `modifier /s "
"<regular_expressions.html#modifier_s>`__ is ``On`` by default."
msgstr ""
"Pour la compatibilité ascendante, modificateur / s "
"<regular_expressions.html#modifier_s>`__ est` `On`` par défaut."

# 74667df4efa94c54bb5fa7140be21392
#: ../../faq.rst:49
msgid ""
"Switch it Off and ``.`` will match any but `Line separators "
"<regular_expressions.html#syntax_line_separators>`__ - exactly as you wish."
msgstr ""
"Eteignez-le et ``.`` correspondra à tout sauf `séparateurs de lignes "
"<regular_expressions.html#syntax_line_separators>`__ - exactement comme vous"
" le souhaitez."

# b31d50bb744f40ae9282e43a1967fad6
#: ../../faq.rst:52
msgid "BTW I suggest ``<font ([^\\n>]*)>``, in ``Match[1]`` will be the URL."
msgstr ""
"BTW, je suggère &quot;` <font ([^\\n>] *)&gt; &quot;, dans&quot; Match [1] "
"&quot;sera l&#39;URL.</font>"

# 65c336793c8746af86f7916910aa1bd4
#: ../../faq.rst:55
msgid "Why does TRegExpr return more then I expect?"
msgstr "Pourquoi TRegExpr renvoie-t-il plus que ce à quoi je m&#39;attendais?"

# d751c0f0d0e7458d905073d0ca772bee
#: ../../faq.rst:57
msgid ""
"For example r.e. ``<p>(.+)</p>`` applyed to string ``<p>a</p><p>b</p>`` "
"returns ``a</p><p>b`` but not ``a`` as I expected."
msgstr ""
"Par exemple re `` <p> (. +) </p> `` appliqué à la chaîne `` <p> une </p><p> "
"b </p> `` renvoie `` a </p><p> b`` mais pas ``a`` comme je m&#39;y "
"attendais."

# 2e19907717ae4932b951c9e57b2bbd5a
#: ../../faq.rst:62
msgid ""
"By default all operators works in ``greedy`` mode, so they match as more as "
"it possible."
msgstr ""
"Par défaut, tous les opérateurs fonctionnent en mode ``greedy``, de sorte "
"qu&#39;ils correspondent le plus possible."

# aff79b8422d0482f8c03a4f9e3e5c2f6
#: ../../faq.rst:65
msgid ""
"If you want ``non-greedy`` mode you can use ``non-greedy`` operators like "
"``+?`` and so on or switch all operators into ``non-greedy`` mode with help "
"of modifier ``g`` (use appropriate TRegExpr properties or operator ``?(-g)``"
" in r.e.)."
msgstr ""
"Si vous voulez le mode ``non-gourmand``, vous pouvez utiliser des opérateurs"
" ``non-gloutons`` comme ``+?`` Et ainsi de suite ou basculer tous les "
"opérateurs en mode ``non-gloutons`` avec l&#39;aide du modificateur ` `g`` "
"(utilisez les propriétés TRegExpr appropriées ou l&#39;opérateur` `?? (- g)`"
" `dans re)."

# 98b9a7d955c94ac699086ed6b50c59e2
#: ../../faq.rst:71
msgid "How to parse sources like HTML with help of TRegExpr"
msgstr "Comment analyser des sources comme HTML avec l&#39;aide de TRegExpr"

# 84b05a8a734c400f84412a496820942a
#: ../../faq.rst:75
msgid "Sorry folks, but it's nearly impossible!"
msgstr "Désolé les gars, mais c&#39;est presque impossible!"

# 8d6e67a8dc71482fab61baec80f05bb3
#: ../../faq.rst:77
msgid ""
"Of course, you can easily use TRegExpr for extracting some information from "
"HTML, as shown in my examples, but if you want accurate parsing you have to "
"use real parser, not r.e."
msgstr ""
"Bien sûr, vous pouvez facilement utiliser TRegExpr pour extraire certaines "
"informations à partir de HTML, comme indiqué dans mes exemples, mais si vous"
" souhaitez une analyse précise, vous devez utiliser un analyseur syntaxique "
"réel."

# 6c0a493a04494f7aae37970898a379f4
#: ../../faq.rst:81
msgid ""
"You can read full explanation in Tom Christiansen and Nathan Torkington "
"``Perl Cookbook``, for example."
msgstr ""
"Vous pouvez lire une explication complète dans Tom Christiansen et Nathan "
"Torkington, `` Perl Cookbook``, par exemple."

# ed36cb64ef9248de884cbb0c9a7d08f9
#: ../../faq.rst:84
msgid ""
"In short - there are many structures that can be easy parsed by real parser "
"but cannot at all by r.e., and real parser is much faster to do the parsing,"
" because r.e. doesn't simply scan input stream, it performs optimization "
"search that can take a lot of time."
msgstr ""
"En bref - il existe de nombreuses structures qui peuvent facilement être "
"analysées par un analyseur réel mais ne peuvent pas du tout être analysées. "
"Cet analyseur réel est beaucoup plus rapide à analyser, car il ne scanne pas"
" simplement le flux d&#39;entrée, il effectue une recherche "
"d&#39;optimisation pouvant prendre beaucoup de temps."

# ab01e6cbba074618b1022ffead0efc80
#: ../../faq.rst:91
msgid "Is there a way to get multiple matches of a pattern on TRegExpr?"
msgstr ""
"Existe-t-il un moyen d&#39;obtenir plusieurs correspondances d&#39;un modèle"
" sur TRegExpr?"

# fe91a4bc0fd4447489141747ee0ea224
#: ../../faq.rst:95
msgid "You can iterate matches with ExecNext method."
msgstr "Vous pouvez itérer des correspondances avec la méthode ExecNext."

# 641d4fc669be4c9aa475918aa91126ed
#: ../../faq.rst:97
msgid ""
"If you want some example, please take a look at ``TRegExpr.Replace`` method "
"implementation or at the examples for `HyperLinksDecorator <demos.html>`_"
msgstr ""
"Si vous voulez quelques exemples, jetez un œil à l&#39;implémentation de la "
"méthode ``TRegExpr.Replace`` ou aux exemples de `HyperLinksDecorator "
"<demos.html>`_"

# 9a455417a3d044c9b984ae73dcc64ace
#: ../../faq.rst:102
msgid ""
"I am checking user input. Why does TRegExpr return ``True`` for wrong input "
"strings?"
msgstr ""
"Je vérifie les entrées de l&#39;utilisateur. Pourquoi TRegExpr renvoie-t-il "
"``True`` pour les chaînes d&#39;entrée incorrectes?"

# e7dd38f412234006aefa108dc8555b35
#: ../../faq.rst:106
msgid ""
"In many cases TRegExpr users forget that regular expression is for "
"**search** in input string."
msgstr ""
"Dans de nombreux cas, les utilisateurs de TRegExpr oublient que "
"l&#39;expression régulière est utilisée pour ** rechercher ** dans la chaîne"
" de saisie."

# 84c50dddfedc418ca4e5de33a2388527
#: ../../faq.rst:109
msgid ""
"So, for example if you use ``\\d{4,4}`` expression, you will get success for"
" wrong user inputs like ``12345`` or ``any letters 1234``."
msgstr ""
"Ainsi, par exemple, si vous utilisez une expression `` \\ d {4,4} ``, vous "
"obtiendrez un succès pour les entrées utilisateur incorrectes telles que `` "
"12345`` ou `` toutes les lettres 1234``."

# 555ace2776ff491baccc6bc35a2574b3
#: ../../faq.rst:112
msgid ""
"You have to check from line start to line end to ensure there are no "
"anything else around: ``^\\d{4,4}$``."
msgstr ""
"Vous devez vérifier du début à la fin de la ligne pour vous assurer "
"qu&#39;il n&#39;y a plus rien d&#39;autre: `` ^ \\ d {4,4} $ ``."

# 3c901ebacebb4af69e073edc07332ecd
#: ../../faq.rst:118
msgid "Why does non-greedy iterators sometimes work as in greedy mode?"
msgstr ""
"Pourquoi les itérateurs non-gourmands fonctionnent-ils parfois comme en mode"
" gourmand?"

# 360da2fcf4f04302a1ec1b9557fad598
#: ../../faq.rst:120
msgid ""
"For example, the r.e. ``a+?,b+?`` applied to string ``aaa,bbb`` matches "
"``aaa,b``, but should it not match ``a,b`` because of non-greediness of "
"first iterator?"
msgstr ""
"Par exemple, le re `` a + ?, b +? `` Appliqué à la chaîne `` aaa, bbb`` "
"correspond à `` aaa, b``, mais ne devrait-il pas correspondre à `` a, b`` à "
"cause de la non-cupidité du premier itérateur?"

# fc89dddf135b42ac956db2e8891af351
#: ../../faq.rst:126
msgid ""
"This is because of TRegExpr way to work. In fact many others r.e. engines "
"work exactly the same: they performe only ``simple`` search optimization, "
"and do not try to do the best optimization."
msgstr ""
"C&#39;est à cause de la manière de TRegExpr de travailler. En fait, beaucoup"
" d&#39;autres moteurs fonctionnent exactement de la même manière: ils ne "
"font que l&#39;optimisation de la recherche ``simple``, et n&#39;essayent "
"pas de faire la meilleure optimisation."

# ef8b9a54e25e4fa9a9ae7ab5904a4b17
#: ../../faq.rst:130
msgid ""
"In some cases it's bad, but in common it's rather advantage then limitation,"
" because of performance and predictability reasons."
msgstr ""
"Dans certains cas, c&#39;est mauvais, mais en commun, c&#39;est plutôt un "
"avantage que une limitation, pour des raisons de performance et de "
"prévisibilité."

# 947ff8c1afe940479c8fd0c41677ae41
#: ../../faq.rst:133
msgid ""
"The main rule - r.e. first of all try to match from current place and only "
"if that's completely impossible move forward by one char and try again from "
"next position in the text."
msgstr ""
"La règle principale - essayez d’abord de faire la correspondance à partir de"
" l’emplacement actuel et seulement si cela est absolument impossible, "
"avancez d’un caractère et essayez à nouveau de la position suivante dans le "
"texte."

# 7c46172a4c3b4941b63c368dc1b2a948
#: ../../faq.rst:137
msgid ""
"So, if you use ``a,b+?`` it'll match ``a,b``. In case of ``a+?,b+?`` it's "
"now not recommended (we add non-greedy modifyer) but still possible to match"
" more then one ``a``, so TRegExpr will do it."
msgstr ""
"Donc, si vous utilisez «a, b +?», Cela correspond à «a, b». Dans le cas de "
"`` a + ?, b +? ``, Ce n&#39;est plus recommandé (nous ajoutons un "
"modificateur non-glouton) mais il est toujours possible de faire "
"correspondre plus d&#39;un ``a``, donc TRegExpr le fera."

# 41feed27e8ad405faa9ea1e4b0c8d18f
#: ../../faq.rst:141
msgid ""
"TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and "
"check - would it will be \"better\" match. Fisrt of all, just because there "
"is no way to say it's more or less good match."
msgstr ""
"TRegExpr comme Perl ou Unix ne tente pas d’avancer et de vérifier - ce "
"serait une &quot;meilleure&quot; correspondance. En premier lieu, juste "
"parce qu’il n’ya aucun moyen de dire que c’est plus ou moins bon."

# 781bb73b9cd34896bd61ea052d2869ea
#: ../../faq.rst:147
msgid "How can I use TRegExpr with Borland C++ Builder?"
msgstr "Comment utiliser TRegExpr avec Borland C ++ Builder?"

# 252a4182e2ca41febf89678337efb6c2
#: ../../faq.rst:149
msgid ""
"I have a problem since no header file (``.h`` or ``.hpp``) is available."
msgstr ""
"J&#39;ai un problème car aucun fichier d&#39;en-tête (``.h`` ou ``.hpp``) "
"n&#39;est disponible."

# c17bbf36186946eb9b60c1c609ec12ec
#: ../../faq.rst:153
msgid "Add ``RegExpr.pas`` to ``bcb`` project."
msgstr "Ajoutez ``RegExpr.pas`` au projet ``bcb``."

# 7b1b72640e2c46c7a5ae52e5dc598b7d
#: ../../faq.rst:154
msgid "Compile project. This generates the header file ``RegExpr.hpp``."
msgstr "Compiler le projet. Cela génère le fichier d’en-tête ``RegExpr.hpp``."

# 16ee016a9fa547d7b412bd44ea526e44
#: ../../faq.rst:155
msgid "Now you can write code which uses the ``RegExpr`` unit."
msgstr "Vous pouvez maintenant écrire du code utilisant l’unité ``RegExpr``."

# 92c071830b604493a9b0982e4c690f0d
#: ../../faq.rst:156
msgid "Don't forget to add  ``#include “RegExpr.hpp”`` where needed."
msgstr ""
"N&#39;oubliez pas d&#39;ajouter «#include« RegExpr.hpp »` `si nécessaire."

# a14b93d760474e5f83f70bb9479d161b
#: ../../faq.rst:157
msgid ""
"Don't forget to replace all ``\\`` in regular expressions with ``\\\\`` or "
"redefined `EscChar <tregexpr.html#escchar>`__ const."
msgstr ""
"N&#39;oubliez pas de remplacer tous les ``\\`` dans les expressions "
"régulières par ``\\\\`` ou redéfinis `EscChar <tregexpr.html#escchar>`__ "
"const."

# 6c8450146f0841d1a013cff6b32e8dcc
#: ../../faq.rst:161
msgid ""
"Why many r.e. (including r.e. from TRegExpr help and demo) work wrong in "
"Borland C++ Builder?"
msgstr ""
"Pourquoi beaucoup de solutions (y compris de l&#39;aide et de la "
"démonstration TRegExpr) fonctionnent-elles mal dans Borland C ++ Builder?"

# 86691c4364694b7a8784006481ec491e
#: ../../faq.rst:165
msgid ""
"The hint is in the previous question ;) Symbol ``\\`` has special meaning in"
" ``C++``, so you have to ``escape`` it (as described in previous answer). "
"But if you don't like r.e. like ``\\\\w+\\\\\\\\w+\\\\.\\\\w+`` you can "
"redefine the constant ``EscChar`` (in ``RegExpr.pas``). For example "
"``EscChar = \"/\"``. Then you can write ``/w+/w+/./w+``, looks unusual but "
"more readable."
msgstr ""
"Le conseil se trouve dans la question précédente;) Le symbole `` `` a une "
"signification particulière dans `` C ++ ``, il faut donc `` y échapper`` "
"(comme décrit dans la réponse précédente). Mais si vous n&#39;aimez pas les "
"choses comme ``\\\\w + \\\\\\\\ w + \\\\. \\\\ w + ``, vous pouvez "
"redéfinir la constante ``EscChar`` (dans ``RegExpr.pas``). Par exemple `` "
"EscChar = &quot;/&quot; ``. Ensuite, vous pouvez écrire `` / w + / w + /. / "
"W + ``, semble inhabituel mais plus lisible."
