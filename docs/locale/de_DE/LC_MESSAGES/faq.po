# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-30 13:00+0300\n"
"PO-Revision-Date: 2019-04-27 17:26+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: German (Germany) (https://www.transifex.com/masterAndrey/teams/98461/de_DE/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de_DE\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 14a0920e6f3d4940ba98aa198a3c6907
#: ../../faq.rst:2
msgid "FAQ"
msgstr "FAQ"

# 409efcd46f2e4c9a9437e22fa24db8fd
#: ../../faq.rst:5
msgid "I found a terrible bug: TRegExpr raises Access Violation exception!"
msgstr ""
"Ich habe einen schrecklichen Fehler gefunden: TRegExpr löst Ausnahme wegen "
"Zugriffsverletzung aus!"

# a2842b65546a4441b1b69e312c0f3211
# 8cd2ff7bcb3e4c0088e1e9b725a7cc4f
# f0c2b01cf27846f987b328f52d6ab2d1
# 2de098aa7cb54981b31e08f94a01aaf5
# e3e118ae88494988bc0773ea83cc2cba
# 131e2b6f59a34514aa47cec67c20e7db
# 9467fd30ee024abc96834213cf1a3105
# 90dc0be1b9eb424b84be320e8db403d0
# f307053ecaa44cb5b95fe6d78b69dc41
#: ../../faq.rst:7 ../../faq.rst:27 ../../faq.rst:39 ../../faq.rst:55
#: ../../faq.rst:71 ../../faq.rst:84 ../../faq.rst:104 ../../faq.rst:115
#: ../../faq.rst:135
msgid "**Answer**"
msgstr "**Antworten**"

# bca1dc47646e46b2acc136934e8b2115
#: ../../faq.rst:9
msgid ""
"You must create the object before usage. So, after you declared something "
"like:"
msgstr ""
"Sie müssen das Objekt vor der Verwendung erstellen. Nachdem Sie also etwas "
"erklärt haben:"

# 008a45e0501e4be78de2b2c2fbaf464f
#: ../../faq.rst:16
msgid "do not forget to create the object instance:"
msgstr "Vergessen Sie nicht, die Objektinstanz zu erstellen:"

# e78ed133fdd64baab8febfca8fdd52fb
#: ../../faq.rst:23
msgid "How can I use TRegExpr with Borland C++ Builder?"
msgstr "Wie kann ich TRegExpr mit Borland C ++ Builder verwenden?"

# 86b2c2279e9c48dfb136edfb532cd445
#: ../../faq.rst:25
msgid ""
"I have a problem since no header file (``.h`` or ``.hpp``) is available."
msgstr ""
"Ich habe ein Problem, da keine Header-Datei (`` .h`` oder `` .hpp``) "
"verfügbar ist."

# dfbcc43803f04e2aa9353cbd660a5eb8
#: ../../faq.rst:29
msgid "Add ``RegExpr.pas`` to ``bcb`` project."
msgstr "Fügen Sie `` RegExpr.pas`` zu `` bcb`` hinzu."

# f1a826fa077741ba8389a5bee9976ae3
#: ../../faq.rst:30
msgid "Compile project. This generates the header file ``RegExpr.hpp``."
msgstr ""
"Projekt kompilieren Dadurch wird die Header-Datei `` RegExpr.hpp`` "
"generiert."

# af15bcbbde874b738ea988f1ec14001e
#: ../../faq.rst:31
msgid "Now you can write code which uses the ``RegExpr`` unit."
msgstr ""
"Jetzt können Sie Code schreiben, der die `` RegExpr``-Einheit verwendet."

# 74a3a3d158264b388913bcf7fdb37593
#: ../../faq.rst:32
msgid "Don't forget to add  ``#include “RegExpr.hpp”`` where needed."
msgstr ""
"Vergessen Sie nicht, `` #include “RegExpr.hpp” `` bei Bedarf hinzuzufügen."

# b38915e941b64829bbe56c2e3ab66519
#: ../../faq.rst:33
msgid ""
"Don't forget to replace all ``\\`` in regular expressions with ``\\\\`` or "
"redefined `EscChar <tregexpr_interface.html#escchar>`__ const."
msgstr ""
"Vergessen Sie nicht, alle `` \\ `` in regulären Ausdrücken durch `` \\\\ `` "
"oder neu definierte `EscChar zu ersetzen <tregexpr_interface.html#escchar> "
"__ const."

# cb41f5b7912e432bb9da287b121cbdae
#: ../../faq.rst:37
msgid ""
"Why many r.e. (including r.e. from TRegExpr help and demo) work wrong in "
"Borland C++ Builder?"
msgstr ""
"Warum arbeiten viele Benutzer (einschließlich der TRegExpr-Hilfe und -Demo) "
"in Borland C ++ Builder falsch?"

# 0f73f257d9514302b0957d8a0e7a541f
#: ../../faq.rst:41
msgid ""
"The hint is in the previous question ;) Symbol ``\\`` has special meaning in"
" ``C++``, so you have to ``escape`` it (as described in previous answer). "
"But if you don't like r.e. like ``\\\\w+\\\\\\\\w+\\\\.\\\\w+`` you can "
"redefine the constant ``EscChar`` (in ``RegExpr.pas``). For example "
"``EscChar = \"/\"``. Then you can write ``/w+/w+/./w+``, looks unusual but "
"more readable."
msgstr ""
"Der Hinweis ist in der vorherigen Frage;) Das Symbol `` \\ `` hat eine "
"besondere Bedeutung in `` C ++ ``, also müssen Sie es `` entkommen`` (wie in"
" der vorherigen Antwort beschrieben). Wenn Sie nicht gerne `` \\\\ w + "
"\\\\\\\\ w + \\\\. \\\\ w + `` mögen, können Sie die Konstante `` EscChar`` "
"(in `` RegExpr.pas``) neu definieren. Zum Beispiel `` EscChar = "
"&quot;/&quot; ``. Dann können Sie `` / w + / w + /. / W + `` schreiben, "
"sieht ungewöhnlich aus, ist aber lesbarer."

# 36695be1d9ec4d4aa713b26c2274ab6f
#: ../../faq.rst:50
msgid "Why does TRegExpr return more then one line?"
msgstr "Warum gibt TRegExpr mehr als eine Zeile zurück?"

# 88f899a2a3a94c00994ab9518a100e30
#: ../../faq.rst:52
msgid ""
"For example, r.e. ``<font .\\*>`` returns the first ``<font``, then the rest"
" of the file including last ``</html>``."
msgstr ""
"Zum Beispiel gibt re `` <font .\\*>`` das erste `` zurück</font> <font``, "
"then the rest of the file including last ``</html> <font .\\*>``.</font>"

# e0575b3e984b464db5c9c891fae78696
#: ../../faq.rst:57
msgid ""
"For backward compatibility, `modifier /s <regexp_syntax.html#modifier_s>`__ "
"is ``On`` by default."
msgstr ""
"Für Rückwärtskompatibilität `Modifier / s <regexp_syntax.html#modifier_s> "
"`__ ist standardmäßig` `Ein``."

# b46cbeccc5b0433f9702d6e28f98b4fe
#: ../../faq.rst:60
msgid ""
"Switch it Off and ``.`` will match any but `Line separators "
"<regexp_syntax.html#syntax_line_separators>`__ - exactly as you wish."
msgstr ""
"Schalten Sie es aus und `` .`` passt zu allen anderen als "
"&#39;Trennzeichen&#39; <regexp_syntax.html#syntax_line_separators> __ - "
"genau wie Sie es wünschen."

# 6c572634b3d944b58f8f0d3f952ea759
#: ../../faq.rst:63
msgid "BTW I suggest ``<font ([^\\n>]*)>``, in ``Match[1]`` will be the URL."
msgstr ""
"Übrigens empfehle ich `` <font ([^\\n>] *)&gt; ``, in `` Match [1] `` `ist "
"die URL.</font>"

# 990efeb8bd2e41adbbe07e2fc3e3a610
#: ../../faq.rst:66
msgid "Why does TRegExpr return more then I expect?"
msgstr "Warum gibt TRegExpr mehr als ich erwarte?"

# 80ee47319d05423982e55c8dbab25933
#: ../../faq.rst:68
msgid ""
"For example r.e. ``<p>(.+)</p>`` applyed to string ``<p>a</p><p>b</p>`` "
"returns ``a</p><p>b`` but not ``a`` as I expected."
msgstr ""
"Zum Beispiel: `` <p> (. +) </p> `` auf String `` angewendet <p> ein </p><p> "
"b </p> `` gibt `` a zurück </p><p> b`` aber nicht `` a`` wie ich erwartet "
"hatte."

# 32bf658773da4d91a5d8bd6900393614
#: ../../faq.rst:73
msgid ""
"By default all operators works in ``greedy`` mode, so they match as more as "
"it possible."
msgstr ""
"Standardmäßig arbeiten alle Operatoren im `` gierigen`` Modus, so dass sie "
"so weit wie möglich zusammenpassen."

# a08254f8c0504a6a9ccfdd10e3b334d8
#: ../../faq.rst:76
msgid ""
"If you want ``non-greedy`` mode you can use ``non-greedy`` operators like "
"``+?`` and so on or switch all operators into ``non-greedy`` mode with help "
"of modifier ``g`` (use appropriate TRegExpr properties or operator ``?(-g)``"
" in r.e.)."
msgstr ""
"Wenn Sie den `` nicht-gierigen`` Modus wollen, können Sie `` nicht-"
"gierige`&#39;-Operatoren wie `` +? `` Usw. verwenden, oder alle Operatoren "
"mit Hilfe des Modifikators `` `` `g`` (verwenden Sie die entsprechenden "
"TRegExpr-Eigenschaften oder den Operator` `? (- g)` `in re)."

# 2eadee7057dc4226a18bff60bc9e240b
#: ../../faq.rst:82
msgid "How to parse sources like HTML with help of TRegExpr"
msgstr "Wie kann man mit TRegExpr Quellen wie HTML analysieren?"

# 7b05da52c9fa4bd6921ecdf3523b1f1a
#: ../../faq.rst:86
msgid "Sorry folks, but it's nearly impossible!"
msgstr "Sorry Leute, aber es ist fast unmöglich!"

# 7c2264dd8c4f42ddaba11aab9e787296
#: ../../faq.rst:88
msgid ""
"Of course, you can easily use TRegExpr for extracting some information from "
"HTML, as shown in my examples, but if you want accurate parsing you have to "
"use real parser, not r.e."
msgstr ""
"Natürlich können Sie TRegExpr problemlos zum Extrahieren einiger "
"Informationen aus HTML verwenden, wie in meinen Beispielen gezeigt. Wenn Sie"
" jedoch eine genaue Analyse wünschen, müssen Sie einen echten Parser "
"verwenden, nicht re"

# 186382f57c884e25bac133c13dc4c85a
#: ../../faq.rst:92
msgid ""
"You can read full explanation in Tom Christiansen and Nathan Torkington "
"``Perl Cookbook``, for example."
msgstr ""
"Die vollständige Erklärung finden Sie beispielsweise in Tom Christiansen und"
" Nathan Torkington, `` Perl Cookbook``."

# 8d1ebbae47894046b35030a66ceaaba6
#: ../../faq.rst:95
msgid ""
"In short - there are many structures that can be easy parsed by real parser "
"but cannot at all by r.e., and real parser is much faster to do the parsing,"
" because r.e. doesn't simply scan input stream, it performs optimization "
"search that can take a lot of time."
msgstr ""
"Kurz gesagt, es gibt viele Strukturen, die mit echtem Parser einfach geparst"
" werden können, von re aber gar nicht, und realer Parser ist beim Parsing "
"viel schneller, da re nicht nur den Eingabestrom scannt, sondern eine "
"Optimierungssuche ausführt, die dauern kann viel Zeit."

# 37cebd08189446c0986a89d2a1e76950
#: ../../faq.rst:102
msgid "Is there a way to get multiple matches of a pattern on TRegExpr?"
msgstr ""
"Gibt es eine Möglichkeit, mehrere Übereinstimmungen eines Musters auf "
"TRegExpr abzurufen?"

# 67ea59a609174651baf2bc3f5c5499ee
#: ../../faq.rst:106
msgid "You can iterate matches with ExecNext method."
msgstr "Sie können Übereinstimmungen mit der ExecNext-Methode wiederholen."

# 8111d5e6bde64675b36c3282e306f28a
#: ../../faq.rst:108
msgid ""
"If you want some example, please take a look at ``TRegExpr.Replace`` method "
"implementation or at the examples for `HyperLinksDecorator <demos.html>`_"
msgstr ""
"Wenn Sie ein Beispiel wünschen, werfen Sie einen Blick auf die "
"Implementierung der `TRegExpr.Replace``-Methode oder auf die Beispiele für` "
"HyperLinksDecorator <demos.html> _"

# a15668614ebd4fa7b0f3c04c7882ee53
#: ../../faq.rst:113
msgid ""
"I am checking user input. Why does TRegExpr return ``True`` for wrong input "
"strings?"
msgstr ""
"Ich überprüfe die Benutzereingaben. Warum gibt TRegExpr für falsche "
"Eingabezeichenfolgen &quot;True&quot; zurück?"

# f355d9ab182546f5a2af687ca61f3f8b
#: ../../faq.rst:117
msgid ""
"In many cases TRegExpr users forget that regular expression is for "
"**search** in input string."
msgstr ""
"In vielen Fällen vergessen TRegExpr-Benutzer, dass reguläre Ausdrücke für **"
" Suche ** in der Eingabezeichenfolge sind."

# fd3d0fdde2be47c58298d4b51c71ca24
#: ../../faq.rst:120
msgid ""
"So, for example if you use ``\\d{4,4}`` expression, you will get success for"
" wrong user inputs like ``12345`` or ``any letters 1234``."
msgstr ""
"Wenn Sie beispielsweise `` \\ d {4,4} `` Ausdruck verwenden, erhalten Sie "
"Erfolg bei falschen Benutzereingaben wie `` 12345`` oder `` any letters "
"1234``."

# 2b2c2bec51e145a6a08dfa5d828e76ae
#: ../../faq.rst:123
msgid ""
"You have to check from line start to line end to ensure there are no "
"anything else around: ``^\\d{4,4}$``."
msgstr ""
"Sie müssen vom Anfang der Zeile bis zum Ende der Zeile überprüfen, um "
"sicherzustellen, dass sich in der Umgebung nichts anderes befindet: `` ^ \\ "
"d {4,4} $ ``."

# e0f9c502b38147f5a45030ee73df085a
#: ../../faq.rst:129
msgid "Why does non-greedy iterators sometimes work as in greedy mode?"
msgstr ""
"Warum funktionieren nichtgierige Iteratoren manchmal wie im gierigen Modus?"

# 3661c8c59e92415fbd3933c2770d2b0d
#: ../../faq.rst:131
msgid ""
"For example, the r.e. ``a+?,b+?`` applied to string ``aaa,bbb`` matches "
"``aaa,b``, but should it not match ``a,b`` because of non-greediness of "
"first iterator?"
msgstr ""
"Zum Beispiel entspricht das re `` a +?, B +? ``, Das auf den String `` aaa, "
"bbb`` angewendet wird, `` aaa, b``, sollte aber nicht mit `` a, b`` wegen "
"Nicht-Gier passen des ersten Iterators?"

# 8dd2a4a1252b4e1cb6062de371209eae
#: ../../faq.rst:137
msgid ""
"This is because of TRegExpr way to work. In fact many others r.e. engines "
"work exactly the same: they performe only ``simple`` search optimization, "
"and do not try to do the best optimization."
msgstr ""
"Dies liegt an TRegExprs Arbeitsweise. Tatsächlich arbeiten viele andere re-"
"Engines genau gleich: Sie führen nur eine &quot;einfache&quot; "
"Suchoptimierung durch und versuchen nicht, die beste Optimierung zu "
"erreichen."

# 95db1ec5d75a453b94a26c6b4b667319
#: ../../faq.rst:141
msgid ""
"In some cases it's bad, but in common it's rather advantage then limitation,"
" because of performance and predictability reasons."
msgstr ""
"In manchen Fällen ist es schlecht, aber im Allgemeinen ist es aus Gründen "
"der Leistung und Vorhersagbarkeit eher ein Vorteil als eine Einschränkung."

# aa96a14dafb64cc69734a5fa7c521cc3
#: ../../faq.rst:144
msgid ""
"The main rule - r.e. first of all try to match from current place and only "
"if that's completely impossible move forward by one char and try again from "
"next position in the text."
msgstr ""
"Die Hauptregel - versuchen Sie zuerst, vom aktuellen Ort aus zu passen. Nur "
"wenn dies völlig unmöglich ist, bewegen Sie sich um ein Zeichen vorwärts und"
" versuchen Sie es erneut von der nächsten Position im Text."

# d77ad26d44f946329cb98217a8304686
#: ../../faq.rst:148
msgid ""
"So, if you use ``a,b+?`` it'll match ``a,b``. In case of ``a+?,b+?`` it's "
"now not recommended (we add non-greedy modifyer) but still possible to match"
" more then one ``a``, so TRegExpr will do it."
msgstr ""
"Wenn Sie also `a, b + verwenden?` `Wird es` `a, b`` passen. Im Falle von `` "
"a +?, B +? `` `Wird es jetzt nicht empfohlen (wir fügen einen nicht-gierigen"
" Modifikator hinzu), aber es ist immer noch möglich, mehr als einen` `a`` zu"
" finden, also macht TRegExpr dies."

# 707e76258fd8485d9847a89037903ec4
#: ../../faq.rst:152
msgid ""
"TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and "
"check - would it will be \"better\" match. Fisrt of all, just because there "
"is no way to say it's more or less good match."
msgstr ""
"TRegExpr wie Perl oder Unix versucht nicht, sich vorwärts zu bewegen und zu "
"prüfen - würde es &quot;besser&quot; passen. Fisrt von allem, nur weil es "
"keine Möglichkeit gibt zu sagen, dass es mehr oder weniger gut passt."
