# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-27 20:26+0300\n"
"PO-Revision-Date: 2019-04-27 17:26+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: Spanish (Spain) (https://www.transifex.com/masterAndrey/teams/98461/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 4e5929435d734b0bbd0a5e2e0dfcbdf3
#: ../../regexp_syntax.rst:2
msgid "Important note"
msgstr "Nota IMPORTANTE"

# f70fa158f8f64a0fbe20821418e453f8
#: ../../regexp_syntax.rst:4
msgid ""
"Below is the description of regular expressions implemented in freeware "
"library `TRegExpr <http://regexpstudio.com>`__. The library was widely used "
"in many free and commertial software products."
msgstr ""
"A continuación se muestra la descripción de las expresiones regulares "
"implementadas en la biblioteca de freeware `TRegExpr "
"<http://regexpstudio.com> `__. La biblioteca fue ampliamente utilizada en "
"muchos productos de software gratuitos y comerciales."

# f59a7e2d99ed41ae82b74577fa88af4c
#: ../../regexp_syntax.rst:9
msgid "Introduction"
msgstr "Introducción"

# e191b913c401454488eb03cc6430f60d
#: ../../regexp_syntax.rst:11
msgid ""
"Regular Expressions are a widely-used method of specifying patterns of text "
"to search for. Special metacharacters allow You to specify, for instance, "
"that a particular string You are looking for occurs at the beginning or end "
"of a line, or contains n recurrences of a certain character."
msgstr ""
"Las expresiones regulares son un método ampliamente utilizado para "
"especificar patrones de texto para buscar. Los metacaracteres especiales le "
"permiten especificar, por ejemplo, que una cadena particular que está "
"buscando ocurre al principio o al final de una línea, o contiene n "
"repeticiones de un determinado carácter."

# fb98a7524b9f41eeab892bd8344e627b
#: ../../regexp_syntax.rst:17
msgid ""
"Regular expressions look ugly for novices, but really they are very simple "
"(well, usually simple ;) ), handly and powerfull tool."
msgstr ""
"Las expresiones regulares se ven feas para los principiantes, pero en "
"realidad son muy simples (bueno, generalmente simples;)), una herramienta "
"práctica y poderosa."

# c990b4abbf904ff9bbae2944ce7f96b8
#: ../../regexp_syntax.rst:20
msgid ""
"I recommend You to play with regular expressions using Windows `REStudio "
"<https://github.com/masterandrey/TRegExpr/releases/download/0.952b/REStudio.exe>`__"
" - it’ll help You to uderstand main conceptions. Moreover, there are many "
"predefined examples with comments included into repository of R.e. visual "
"debugger."
msgstr ""
"Te recomiendo jugar con expresiones regulares usando Windows `REStudio "
"<https://github.com/masterandrey/TRegExpr/releases/download/0.952b/REStudio.exe>"
" `__ - Te ayudará a entender las principales concepciones. Además, hay "
"muchos ejemplos predefinidos con comentarios incluidos en el repositorio de "
"Re visual debugger."

# 252b8a6700654de29747aa19cd60e2a6
#: ../../regexp_syntax.rst:26
msgid "Let’s start our learning trip!"
msgstr "¡Empecemos nuestro viaje de aprendizaje!"

# 4ea6c0e1bfa2455794c9fcea646235e6
#: ../../regexp_syntax.rst:29
msgid "Simple matches"
msgstr "Partidos simples"

# c5d316b3cc6a4b4abebb54fcf2e6006a
#: ../../regexp_syntax.rst:31
msgid ""
"Any single character matches itself, unless it is a metacharacter with a "
"special meaning described below."
msgstr ""
"Cualquier carácter individual coincide solo, a menos que sea un metacarácter"
" con un significado especial que se describe a continuación."

# 7a42dd79705641f0b9765b1b3d3f3f12
#: ../../regexp_syntax.rst:34
msgid ""
"A series of characters matches that series of characters in the target "
"string, so the pattern ``bluh`` would match ``bluh`` in the target string. "
"Quite simple, eh ?"
msgstr ""
"Una serie de caracteres coincide con esa serie de caracteres en la cadena de"
" destino, por lo que el patrón `` bluh`` coincidiría con `` bluh`` en la "
"cadena de destino. Bastante simple, ¿eh?"

# f93880dfbfc5450d96eca74a70d59bc1
#: ../../regexp_syntax.rst:38
msgid ""
"You can cause characters that normally function as metacharacters or escape "
"sequences to be interpreted literally by ‘escaping’ them by preceding them "
"with a backslash ``\\``, for instance: metacharacter ``^`` match beginning "
"of string, but ``\\^`` match character ``^``, ``\\\\`` match ``\\`` and so "
"on."
msgstr ""
"Puede hacer que los caracteres que normalmente funcionan como metacaracteres"
" o secuencias de escape se interpreten literalmente &#39;escapándolos&#39; "
"precediéndolos con una barra invertida `` \\ ``, por ejemplo: metacharacter "
"`` ^ `` coincide con el principio de la cadena, pero `` \\ ^ `` coincide con"
" el carácter `` ^ ``, `` \\\\ `` coincide con `` \\ `` y así sucesivamente."

# 315f24cf90ef413e9f9c28c3bd2a9d09
# ddde720794ee4dc9a70d558b0c89b02e
# 453e611690e64701b95cfecabd23e660
# 43254f60ac264bd980998c3b1c8c19d2
# c5a529bb746b47828265927b2bc307dd
# aa1e6c2ed53640ae99ee7d606bcb73d2
# 5299948d8e75419fab9aaac2d9bb653a
# f7341e71a6e4418c9659747f22427c94
# 6adf892d82a0473697b4dd8d2f55b935
# c30869e3fa2743e7a46f42efbc5ae347
# 80a859c2d50047298fed7f7c84f5346c
#: ../../regexp_syntax.rst:45 ../../regexp_syntax.rst:82
#: ../../regexp_syntax.rst:101 ../../regexp_syntax.rst:118
#: ../../regexp_syntax.rst:151 ../../regexp_syntax.rst:231
#: ../../regexp_syntax.rst:293 ../../regexp_syntax.rst:342
#: ../../regexp_syntax.rst:367 ../../regexp_syntax.rst:383
#: ../../regexp_syntax.rst:488
msgid "Examples:"
msgstr "Ejemplos:"

# 0cab32ead0d64b65ab97ee0b9bdfc83d
#: ../../regexp_syntax.rst:53
msgid "Note for C++ Builder users"
msgstr "Nota para los usuarios de C ++ Builder."

# 72675db9a7d648b090bd9a65bc03a504
#: ../../regexp_syntax.rst:55
msgid ""
"Please, read in FAQ answer on question `Why many r.e. work wrong in Borland "
"C++ Builder? <faq.html#cppbescchar>`__"
msgstr ""
"Por favor, lea la sección de preguntas frecuentes y responda a la pregunta "
"`¿Por qué muchos trabajan mal en Borland C ++ Builder? "
"<faq.html#cppbescchar> `__"

# 55e370c749bb49cf9832463f0cee7887
#: ../../regexp_syntax.rst:59
msgid "Escape sequences"
msgstr "Secuencias de escape"

# 9241a32e8c4f4aee871edb912e0955f0
#: ../../regexp_syntax.rst:61
msgid ""
"Characters may be specified using a escape sequences syntax much like that "
"used in C and Perl: ``\\n`` matches a newline, ``\\t`` a tab, etc. More "
"generally, ``\\xnn``, where nn is a string of hexadecimal digits, matches "
"the character whose ASCII value is nn. If You need wide (Unicode) character "
"code, You can use ``\\x{nnnn}``, where ``nnnn`` - one or more hexadecimal "
"digits."
msgstr ""
"Los caracteres pueden especificarse usando una sintaxis de secuencias de "
"escape muy parecida a la utilizada en C y Perl: `` \\ n`` coincide con una "
"nueva línea, `` \\ t`` una pestaña, etc. Más generalmente, `` \\ xnn``, "
"donde nn es una cadena de dígitos hexadecimales, coincide con el carácter "
"cuyo valor ASCII es nn. Si necesita un código de caracteres anchos "
"(Unicode), puede usar `` \\ x {nnnn} ``, donde `` nnnn`` - uno o más dígitos"
" hexadecimales."

# 3e32eb6ac6144c4d80b075e8ad5e44fd
#: ../../regexp_syntax.rst:90
msgid "Character classes"
msgstr "Clases de personajes"

# 99c4b0cfb5f9447a93c55e281d2426ed
#: ../../regexp_syntax.rst:92
msgid ""
"You can specify a character class, by enclosing a list of characters in "
"``[]``, which will match any one character from the list."
msgstr ""
"Puede especificar una clase de caracteres, al incluir una lista de "
"caracteres en `` [] ``, que coincidirá con cualquier carácter de la lista."

# a39f8e8ec20d4a9cad93f2828b7a7a8f
#: ../../regexp_syntax.rst:95
msgid ""
"If the first character after the ``[`` is ``^``, the class matches any "
"character not in the list."
msgstr ""
"Si el primer carácter después del `` [`` es `` ^ ``, la clase coincide con "
"cualquier carácter que no esté en la lista."

# 55e948458d154686bc68edd9693db16e
#: ../../regexp_syntax.rst:108
msgid ""
"Within a list, the ``-`` character is used to specify a range, so that a-z "
"represents all characters between ``a`` and ``z``, inclusive."
msgstr ""
"Dentro de una lista, el carácter `` -`` se usa para especificar un rango, de"
" modo que az representa todos los caracteres entre `` a`` y `` z``, "
"inclusive."

# 60942a70eff042b1b4b607b0df0d70d2
#: ../../regexp_syntax.rst:111
msgid ""
"If You want ``-`` itself to be a member of a class, put it at the start or "
"end of the list, or escape it with a backslash. If You want ``]`` you may "
"place it at the start of list or escape it with a backslash."
msgstr ""
"Si quiere que `` -`` sea un miembro de una clase, póngalo al principio o al "
"final de la lista, o escúchelo con una barra invertida. Si desea ``] `` "
"puede colocarlo al comienzo de la lista o escapar con una barra invertida."

# a07329be340945ea8edd4cd5d258b969
#: ../../regexp_syntax.rst:131
msgid "Metacharacters"
msgstr "Metacaracteres"

# c95fa60048ed4d64a00309f5404470c4
#: ../../regexp_syntax.rst:133
msgid ""
"Metacharacters are special characters which are the essence of Regular "
"Expressions. There are different types of metacharacters, described below."
msgstr ""
"Los metacaracteres son caracteres especiales que son la esencia de las "
"expresiones regulares. Hay diferentes tipos de metacaracteres, que se "
"describen a continuación."

# 213b04c3d85244cab2561440188fd166
#: ../../regexp_syntax.rst:160
msgid ""
"The ``^`` metacharacter by default is only guaranteed to match at the "
"beginning of the input string/text, the ``$`` metacharacter only at the end."
" Embedded line separators will not be matched by ``^`` or ``$``."
msgstr ""
"El metacarácter `` ^ `` por defecto solo se garantiza que coincida al "
"comienzo de la cadena / texto de entrada, el metacarácter `` $ `` solo al "
"final. Los separadores de línea incrustados no coincidirán con `` ^ `` o `` "
"$ ``."

# ed87bfa235224adf9fa9830b2477711f
#: ../../regexp_syntax.rst:164
msgid ""
"You may, however, wish to treat a string as a multi-line buffer, such that "
"the ``^`` will match after any line separator within the string, and ``$`` "
"will match before any line separator. You can do this by switching On the "
"`modifier /m <regexp_syntax.html#modifier_m>`__."
msgstr ""
"Sin embargo, puede querer tratar una cadena como un búfer multilínea, de "
"manera que el `` ^ `` coincidirá después de cualquier separador de línea "
"dentro de la cadena, y `` $ `` coincidirá antes de cualquier separador de "
"línea. Puede hacer esto activando el modificador `/ m "
"<regexp_syntax.html#modifier_m> `__."

# fa6af706326b4f4ebdb8921bd79369cd
#: ../../regexp_syntax.rst:169
msgid ""
"The ``\\A`` and ``\\Z`` are just like ``^`` and ``$``, except that they "
"won’t match multiple times when the `modifier /m "
"<regexp_syntax.html#modifier_m>`__ is used, while ``^`` and ``$`` will match"
" at every internal line separator."
msgstr ""
"`` \\ A`` y `` \\ Z`` son como `` ^ `` y `` $ ``, excepto que no coincidirán"
" varias veces cuando el `modificador / m <regexp_syntax.html#modifier_m> Se "
"usa `__, mientras que` `^` `y` `$` `coincidirán en cada separador de línea "
"interno."

# 870ba883c46d4caa8479873e139518bc
#: ../../regexp_syntax.rst:174
msgid ""
"The ``.`` metacharacter by default matches any character, but if You switch "
"Off the `modifier /s <regexp_syntax.html#modifier_s>`__, then ``.`` won’t "
"match embedded line separators."
msgstr ""
"El metacarácter `` .`` por defecto coincide con cualquier carácter, pero si "
"usted desactiva el modificador / s <regexp_syntax.html#modifier_s> `__, "
"entonces` `.`` no coincidirá con los separadores de línea incrustados."

# 24b7172cc99045a68054dfd2623da3fc
#: ../../regexp_syntax.rst:178
msgid ""
"TRegExpr works with line separators as recommended at `www.unicode.org "
"<http://www.unicode.org/unicode/reports/tr18/>`__:"
msgstr ""
"TRegExpr trabaja con separadores de línea como se recomienda en "
"`www.unicode.org <http://www.unicode.org/unicode/reports/tr18/> `__:"

# 3bd8d69e73764aed8af762c1866a0514
#: ../../regexp_syntax.rst:181
msgid ""
"``^`` is at the beginning of a input string, and, if `modifier /m "
"<regexp_syntax.html#modifier_m>`__ is On, also immediately following any "
"occurrence of ``\\x0D\\x0A`` or ``\\x0A`` or ``\\x0D`` (if You are using "
"`Unicode version <tregexpr_interface.html#unicode>`__ of TRegExpr, then also"
" ``\\x2028`` or  ``\\x2029`` or ``\\x0B`` or ``\\x0C`` or ``\\x85``). Note "
"that there is no empty line within the sequence ``\\x0D\\x0A``."
msgstr ""
"`` ^ `` está al principio de una cadena de entrada, y, si `modifier / m "
"<regexp_syntax.html#modifier_m> `__ está activado, también inmediatamente "
"después de cualquier aparición de` `\\ x0D \\ x0A`` o` `\\ x0A`` o` `\\ "
"x0D`` (si está utilizando la versión` Unicode "
"<tregexpr_interface.html#unicode> `__ de TRegExpr, entonces también` `\\ "
"x2028`` o` `\\ x2029`` o` `\\ x0B`` o` `\\ x0C`` o` `\\ x85``). Tenga en "
"cuenta que no hay una línea vacía dentro de la secuencia `` \\ x0D \\ x0A``."

# 2789416bbbad462186fbef55328265d1
#: ../../regexp_syntax.rst:188
msgid ""
"``$`` is at the end of a input string, and, if `modifier /m "
"<regexp_syntax.html#modifier_m>`__ is On, also immediately preceding any "
"occurrence of  ``\\x0D\\x0A`` or ``\\x0A`` or ``\\x0D`` (if You are using "
"`Unicode version <tregexpr_interface.html#unicode>`__ of TRegExpr, then also"
" ``\\x2028`` or  ``\\x2029`` or ``\\x0B`` or ``\\x0C`` or ``\\x85``). Note "
"that there is no empty line within the sequence ``\\x0D\\x0A``."
msgstr ""
"`` $ `` está al final de una cadena de entrada, y, si `modificador / m "
"<regexp_syntax.html#modifier_m> `__ está activado, también precede "
"inmediatamente a cualquier aparición de` `\\ x0D \\ x0A`` o` `\\ x0A`` o` "
"`\\ x0D`` (si está utilizando la versión` Unicode "
"<tregexpr_interface.html#unicode> `__ de TRegExpr, entonces también` `\\ "
"x2028`` o` `\\ x2029`` o` `\\ x0B`` o` `\\ x0C`` o` `\\ x85``). Tenga en "
"cuenta que no hay una línea vacía dentro de la secuencia `` \\ x0D \\ x0A``."

# ede57b818ab74d3e967cda0c170d5a32
#: ../../regexp_syntax.rst:196
msgid ""
"``.`` matchs any character, but if You switch Off `modifier /s "
"<regexp_syntax.html#modifier_s>`__ then ``.`` doesn’t match ``\\x0D\\x0A`` "
"and ``\\x0A`` and ``\\x0D`` (if You are using `Unicode version "
"<tregexpr_interface.html#unicode>`__ of TRegExpr, then also ``\\x2028`` and"
"  ``\\x2029`` and ``\\x0B`` and ``\\x0C`` and ``\\x85``)."
msgstr ""
"`` .`` coincide con cualquier carácter, pero si usted desactiva `modifier / "
"s <regexp_syntax.html#modifier_s> `__ entonces` `.`` no coincide con` `\\ "
"x0D \\ x0A`` y` `\\ x0A`` y` `\\ x0D`` (si está usando la versión` Unicode "
"<tregexpr_interface.html#unicode> `__ de TRegExpr, entonces también` `\\ "
"x2028`` y` `\\ x2029`` y` `\\ x0B`` y` `\\ x0C`` y` `\\ x85``)."

# f81e8471526e433dac99ecba23596cec
#: ../../regexp_syntax.rst:202
msgid ""
"Note that ``^.*$`` (an empty line pattern) doesnot match the empty string "
"within the sequence ``\\x0D\\x0A``, but matchs the empty string within the "
"sequence ``\\x0A\\x0D``."
msgstr ""
"Tenga en cuenta que `` ^. * $ `` (Un patrón de línea vacío) no coincide con "
"la cadena vacía dentro de la secuencia `` \\ x0D \\ x0A``, pero coincide con"
" la cadena vacía dentro de la secuencia `` \\ x0A \\ x0D``."

# 34f4cb335eb246e78555c6de9e183ea5
#: ../../regexp_syntax.rst:206
msgid ""
"Multiline processing can be easely tuned for Your own purpose with help of "
"TRegExpr properties `LineSeparators "
"<tregexpr_interface.html#lineseparators>`__ and `LinePairedSeparator "
"<tregexpr_interface.html#linepairedseparator>`__, You can use only Unix "
"style separators ``\\n`` or only DOS/Windows style ``\\r\\n`` or mix them "
"together (as described above and used by default) or define Your own line "
"separators!"
msgstr ""
"El procesamiento multilínea se puede ajustar fácilmente para su propio "
"propósito con la ayuda de las propiedades TRegExpr `LineSeparators "
"<tregexpr_interface.html#lineseparators> `__ y` LinePairedSeparator "
"<tregexpr_interface.html#linepairedseparator> `__, puede usar solo los "
"separadores de estilo Unix` `\\ n`` o solo el estilo DOS / Windows` `\\ r \\"
" n`` o mezclarlos (como se describió anteriormente y se usa de manera "
"predeterminada) o definir Sus propios separadores de línea."

# bca0e713201a45c991139a31d2b216da
#: ../../regexp_syntax.rst:215
msgid "Metacharacters - predefined classes"
msgstr "Metacaracteres - clases predefinidas"

# 44495071157f415bbf138800e2a5beb0
#: ../../regexp_syntax.rst:226
msgid "You may use ``\\w``, ``\\d`` and ``\\s`` within custom character classes."
msgstr ""
"Puede usar `` \\ w``, `` \\ d`` y `` \\ s`` dentro de las clases de "
"caracteres personalizados."

# 6bea053f0752406687c4726fa59f70fb
#: ../../regexp_syntax.rst:238
msgid ""
"TRegExpr uses properties `SpaceChars "
"<tregexpr_interface.html#tregexpr.spacechars>`__ and `WordChars "
"<tregexpr_interface.html#tregexpr.wordchars>`__ to define character classes "
"``\\w``, ``\\W``, ``\\s``, ``\\S``, so You can easely redefine it."
msgstr ""
"TRegExpr usa propiedades `SpaceChars "
"<tregexpr_interface.html#tregexpr.spacechars> `__ y` WordChars "
"<tregexpr_interface.html#tregexpr.wordchars> `__ para definir las clases de "
"caracteres` `\\ w``,` `\\ W``,` `\\ s``,` `\\ S``, así que puedes "
"redefinirlo fácilmente."

# 81e3066e722f4adfb9bb68c941260b11
#: ../../regexp_syntax.rst:245
msgid "Metacharacters - word boundaries"
msgstr "Metacaracteres - límites de palabras"

# d74e1b5ab0794b27875247d4588aed0b
#: ../../regexp_syntax.rst:252
msgid ""
"A word boundary (``\\b``) is a spot between two characters that has a "
"``\\w`` on one side of it and a ``\\W`` on the other side of it (in either "
"order), counting the imaginary characters off the beginning and end of the "
"string as matching a ``\\W``."
msgstr ""
"Un límite de palabra (`` \\ b``) es un punto entre dos caracteres que tiene "
"un `` \\ w`` en un lado y un `` \\ W`` en el otro lado (en cualquier orden) "
", contando los caracteres imaginarios del principio y el final de la cadena "
"para que coincidan con un `` \\ W``."

# 7fe5ead7b1c5449f95adcd7e972c5af6
#: ../../regexp_syntax.rst:258
msgid "Metacharacters - iterators"
msgstr "Metacaracteres - iteradores"

# 04acda6d45cc4d9fb1bcd696cae8e926
#: ../../regexp_syntax.rst:260
msgid ""
"Any item of a regular expression may be followed by another type of "
"metacharacters - iterators. Using this metacharacters You can specify number"
" of occurences of previous character, metacharacter or subexpression."
msgstr ""
"Cualquier elemento de una expresión regular puede ir seguido de otro tipo de"
" metacaracteres: los iteradores. Uso de estos metacaracteres Puede "
"especificar el número de apariciones de caracteres anteriores, "
"metacaracteres o subexpresiones."

# 8d5a003f7b7240d6b01621a810bfb030
#: ../../regexp_syntax.rst:280
msgid ""
"So, digits in curly brackets of the form ``{n,m}``, specify the minimum "
"number of times to match the item n and the maximum ``m``. The form ``{n}`` "
"is equivalent to ``{n,n}`` and matches exactly ``n`` times. The form "
"``{n,}`` matches ``n`` or more times. There is no limit to the size of ``n``"
" or ``m``, but large numbers will chew up more memory and slow down r.e. "
"execution."
msgstr ""
"Entonces, los dígitos entre paréntesis del formulario `` {n, m} ``, "
"especifique el número mínimo de veces para que coincida con el elemento n y "
"el máximo `` m``. La forma `` {n} `` es equivalente a `` {n, n} `` y "
"coincide exactamente con los tiempos `` n``. La forma `` {n,} `` coincide "
"con `` n`` o más veces. No hay límite para el tamaño de `` n`` o `` m``, "
"pero los números grandes consumirán más memoria y ralentizarán la ejecución."

# 13f1f9fee226460bbcdc883a5737304a
#: ../../regexp_syntax.rst:287
msgid ""
"If a curly bracket occurs in any other context, it is treated as a regular "
"character."
msgstr ""
"Si aparece un corchete en cualquier otro contexto, se trata como un carácter"
" regular."

# 3aa74bd3a1224b1cbbd9405d32430854
#: ../../regexp_syntax.rst:304
msgid ""
"A little explanation about “greediness”. “Greedy” takes as many as possible,"
" “non-greedy” takes as few as possible. For example, ``b+`` and ``b*`` "
"applied to string ``abbbbc`` return ``bbbb``, ``b+?`` returns ``b``, ``b*?``"
" returns empty string, ``b{2,3}?`` returns ``bb``, ``b{2,3}`` returns "
"``bbb``."
msgstr ""
"Una pequeña explicación sobre la “avaricia”. &quot;Codicioso&quot; toma la "
"mayor cantidad posible, &quot;no codicioso&quot; toma la menor cantidad "
"posible. Por ejemplo, `` b + `` y `` b * `` aplicados a la cadena `` "
"abbbbc`` devuelve `` bbbb``, `` b +? `` Devuelve `` b``, `` b *? `` devuelve"
" una cadena vacía, `` b {2,3}? `` devuelve `` bb``, `` b {2,3} `` devuelve "
"`` bbb``."

# b66beb64fd70451399aefc3097936d11
#: ../../regexp_syntax.rst:310
msgid ""
"You can switch all iterators into “non-greedy” mode (see the `modifier /g "
"<regexp_syntax.html#modifier_g>`__)."
msgstr ""
"Puede cambiar todos los iteradores al modo &quot;no codicioso&quot; "
"(consulte el `modificador / g <regexp_syntax.html#modifier_g> `__)."

# d93b2586f3864904850c6176b1cf66df
#: ../../regexp_syntax.rst:314
msgid "Metacharacters - alternatives"
msgstr "Metacaracteres - alternativas"

# 4ab43a2c82ca4645bba942b595d4fe7b
#: ../../regexp_syntax.rst:316
msgid ""
"You can specify a series of alternatives for a pattern using ``|`` to "
"separate them, so that fee|fie|foe will match any of ``fee``, ``fie``, or "
"``foe`` in the target string (as would ``f(e|i|o)e``). The first alternative"
" includes everything from the last pattern delimiter (``(``, ``[``, or the "
"beginning of the pattern) up to the first ``|``, and the last alternative "
"contains everything from the last ``|`` to the next pattern delimiter. For "
"this reason, it’s common practice to include alternatives in parentheses, to"
" minimize confusion about where they start and end."
msgstr ""
"Puedes especificar una serie de alternativas para un patrón usando `` | `` "
"para separarlos, de modo que fee | fie | foe coincidirá con cualquiera de ``"
" fee``, `` fie``, o `` foe`` en la cadena de destino (como lo haría `` f (e "
"| i | o) e``). La primera alternativa incluye todo, desde el último "
"delimitador de patrón (`` (``, `` [``, o el comienzo del patrón) hasta el "
"primer `` | ``, y la última alternativa contiene todo desde el último ` `|` "
"`hasta el siguiente delimitador de patrón. Por esta razón, es una práctica "
"común incluir alternativas entre paréntesis, para minimizar la confusión "
"sobre dónde comienzan y terminan."

# c47974e8be394b3a96ae5fbde7bc6d85
#: ../../regexp_syntax.rst:326
msgid ""
"Alternatives are tried from left to right, so the first alternative found "
"for which the entire expression matches, is the one that is chosen. This "
"means that alternatives are not necessarily greedy. For example: when "
"matching foo|foot against ``barefoot``, only the ``foo`` part will match, as"
" that is the first alternative tried, and it successfully matches the target"
" string. (This might not seem important, but it is important when you are "
"capturing matched text using parentheses.)"
msgstr ""
"Las alternativas se prueban de izquierda a derecha, por lo que la primera "
"alternativa encontrada para la cual concuerda la expresión completa es la "
"elegida. Esto significa que las alternativas no son necesariamente "
"codiciosas. Por ejemplo: al hacer coincidir foo | foot con `` barefoot``, "
"solo la parte `` foo`` coincidirá, ya que es la primera alternativa que se "
"intentó y coincide con la cadena objetivo. (Puede que esto no parezca "
"importante, pero es importante cuando está capturando texto coincidente "
"usando paréntesis)."

# 7b0db3f69a174600bf34bfe25b261511
#: ../../regexp_syntax.rst:335
msgid ""
"Also remember that ``|`` is interpreted as a literal within square brackets,"
" so if You write ``[fee|fie|foe]`` You’re really only matching ``[feio|]``."
msgstr ""
"También recuerda que `` | `` se interpreta como un literal entre corchetes, "
"así que si escribes `` [fee | fie | foe] `` Realmente solo estás haciendo "
"coincidir `` [feio |] ``."

# 36eede421b6a4e968f8462f2efadd46c
#: ../../regexp_syntax.rst:344
msgid "foo(bar|foo) matchs strings ‘foobar’ or ‘foofoo’."
msgstr ""
"foo (bar | foo) hace coincidir las cadenas &#39;foobar&#39; o "
"&#39;foofoo&#39;."

# aa6e3c22db524b60846b1fa6ea87b986
#: ../../regexp_syntax.rst:347
msgid "Metacharacters - subexpressions"
msgstr "Metacaracteres - subexpresiones"

# 52c6047525cb405a8224e9cea120506d
#: ../../regexp_syntax.rst:349
msgid ""
"The bracketing construct ``( ... )`` may also be used for define r.e. "
"subexpressions (after parsing You can find subexpression positions, lengths "
"and actual values in MatchPos, MatchLen and `Match "
"<tregexpr_interface.html#tregexpr.match>`__ properties of TRegExpr, and "
"substitute it in template strings by `TRegExpr.Substitute "
"<tregexpr_interface.html#tregexpr.substitute>`__)."
msgstr ""
"La construcción de corchetes `` (...) `` también se puede usar para definir "
"reexpresiones (después de analizar Puede encontrar posiciones de "
"subexpresión, longitudes y valores reales en MatchPos, MatchLen y `Match "
"<tregexpr_interface.html#tregexpr.match> `__ propiedades de TRegExpr, y "
"sustitúyalo en cadenas de plantillas por` TRegExpr.Substitute "
"<tregexpr_interface.html#tregexpr.substitute> `__)."

# 3ad9d40bb6e44a82b47121d71ca31d07
#: ../../regexp_syntax.rst:356
msgid ""
"Subexpressions are numbered based on the left to right order of their "
"opening parenthesis."
msgstr ""
"Las subexpresiones se numeran según el orden de izquierda a derecha de su "
"paréntesis de apertura."

# 62e9e88af070460883b9f0a5b68accf9
#: ../../regexp_syntax.rst:359
msgid ""
"First subexpression has number ``1`` (whole r.e. match has number ``0`` - "
"You can substitute it in `TRegExpr.Substitute "
"<tregexpr_interface.html#tregexpr.substitute>`__ as ``$0`` or ``$&``)."
msgstr ""
"La primera subexpresión tiene el número `` 1`` (toda la concordancia tiene "
"el número `` 0`` - Puede sustituirlo en `TRegExpr.Substitute "
"<tregexpr_interface.html#tregexpr.substitute> `__ como` `$ 0`` o` `$ &amp;` "
"`)."

# c415bc4601b04642876e944afe04a932
#: ../../regexp_syntax.rst:375
msgid "Metacharacters - backreferences"
msgstr "Metacaracteres - referencias inversas"

# 6b83dd2925a94284a63aaa9cf83558b4
#: ../../regexp_syntax.rst:377
msgid ""
"Metacharacters ``\\1`` through ``\\9`` are interpreted as backreferences. "
"``\\<n>`` matches previously matched subexpression ``#<n>``."
msgstr ""
"Los metacaracteres `` \\ 1`` a través de `` \\ 9`` se interpretan como "
"referencias inversas. `` \\ <n> `` coincide con subexpresiones previamente "
"coincidentes `` # <n> ``."

# acc26861fb344313bdecdff6f626fae3
#: ../../regexp_syntax.rst:390
msgid ""
"``(['\"]?)(\\d+)\\1`` matchs ``\"13\"`` (in double quotes), or ``'4'`` (in "
"single quotes) or ``77`` (without quotes) etc"
msgstr ""
"`` ([&#39;&quot;]?) (\\ d +) \\ 1`` coincide con` `&quot; 13 &quot;` `(entre"
" comillas dobles), o` `&#39; 4&#39;`` (entre comillas simples) o` `77`` (sin"
" comillas) etc"

# 10d44507f07642ffad564d91080daaf5
#: ../../regexp_syntax.rst:394
msgid "Modifiers"
msgstr "Modificadores"

# 0c63b470addc4ff29d3efc2f94fb91d5
#: ../../regexp_syntax.rst:396
msgid "Modifiers are for changing behaviour of TRegExpr."
msgstr "Los modificadores son para cambiar el comportamiento de TRegExpr."

# f42fac798a424605a6da99f290cff531
#: ../../regexp_syntax.rst:398
msgid "There are many ways to set up modifiers."
msgstr "Hay muchas formas de configurar modificadores."

# 03e59023c9184d39a7431d9800f66b6a
#: ../../regexp_syntax.rst:400
msgid ""
"Any of these modifiers may be embedded within the regular expression itself "
"using the `(?…) <regexp_syntax.html#inline_modifiers>`__ construct."
msgstr ""
"Cualquiera de estos modificadores se puede incrustar dentro de la expresión "
"regular usando el `(? ...) <regexp_syntax.html#inline_modifiers> `__ "
"construir."

# 9abd0acbc64f4ff4b1d750fa74a6b286
#: ../../regexp_syntax.rst:404
msgid ""
"Also, You can assign to appropriate TRegExpr properties (`ModifierX "
"<tregexpr_interface.html#tregexpr.modifier_x>`__ for example to change /x, "
"or ModifierStr to change all modifiers together). The default values for new"
" instances of TRegExpr object defined in `global variables "
"<#modifier_defs>`__, for example global variable RegExprModifierX defines "
"value of new TRegExpr instance ModifierX property."
msgstr ""
"Además, puede asignar propiedades TRegExpr apropiadas (`ModifierX "
"<tregexpr_interface.html#tregexpr.modifier_x> `__ por ejemplo para cambiar /"
" x, o ModifierStr para cambiar todos los modificadores juntos). Los valores "
"predeterminados para las nuevas instancias del objeto TRegExpr definidos en "
"`variables globales &lt;#modifier_defs&gt;` __, por ejemplo, la variable "
"global RegExprModifierX define el valor de la nueva propiedad ModifierX de "
"la instancia de TRegExpr."

# 23e63b9c72ac45c5990ae90b32703a53
#: ../../regexp_syntax.rst:412
msgid "### i"
msgstr "### yo"

# 336d3504dd62438cbbf9e16a5f2b5f16
#: ../../regexp_syntax.rst:414
msgid ""
"Do case-insensitive pattern matching (using installed in you system locale "
"settings), see also `InvertCase <tregexpr_interface.html#invertcase>`__."
msgstr ""
"Haga una comparación de patrones que no distinga mayúsculas de minúsculas "
"(utilizando la configuración regional de su sistema instalada), vea también "
"`InvertCase <tregexpr_interface.html#invertcase> `__."

# 973396b706db4d608878d8e3c0d3e070
#: ../../regexp_syntax.rst:418
msgid "### m"
msgstr "### m"

# ae46910d6aeb417d91171cb96808a329
#: ../../regexp_syntax.rst:420
msgid ""
"Treat string as multiple lines. That is, change ``^`` and ``$`` from "
"matching at only the very start or end of the string to the start or end of "
"any line anywhere within the string, see also `Line separators "
"<tregexpr_interface.html#line_separators>`__."
msgstr ""
"Trate la cuerda como líneas múltiples. Es decir, cambie `` ^ `` y `` $ `` de"
" coincidir solo al principio o al final de la cadena al principio o al final"
" de cualquier línea en cualquier lugar dentro de la cadena, vea también "
"`Separadores de línea <tregexpr_interface.html#line_separators> `__."

# 6ac79173e7194d87ae6f7f2575e41e7a
#: ../../regexp_syntax.rst:425
msgid "### s"
msgstr "### s"

# 7ff99496b53b4de8bb3f965560c7c840
#: ../../regexp_syntax.rst:427
msgid ""
"Treat string as single line. That is, change ``.`` to match any character "
"whatsoever, even a line separators (see also `Line separators "
"<tregexpr_interface.html#line_separators>`__), which it normally would not "
"match."
msgstr ""
"Trate la cuerda como una sola línea. Es decir, cambie `` .`` para que "
"coincida con cualquier carácter, incluso con separadores de línea (vea "
"también `Separadores de línea <tregexpr_interface.html#line_separators> "
"`__), que normalmente no coincidiría."

# 13c9b693f190489596c8dc510e2e4e90
#: ../../regexp_syntax.rst:432
msgid "### g"
msgstr "### g"

# b482af902d594489a5d615c34239b1f0
#: ../../regexp_syntax.rst:434
msgid ""
"Non standard modifier. Switching it Off You’ll switch all following "
"operators into non-greedy mode (by default this modifier is On). So, if "
"modifier ``/g`` is Off then ``+`` works as ``+?``, ``\\*`` as ``\\*?`` and "
"so on"
msgstr ""
"Modificador no estándar. Si lo desactiva, cambiará todos los siguientes "
"operadores al modo no codicioso (de forma predeterminada, este modificador "
"está activado). Entonces, si el modificador `` / g`` está desactivado, "
"entonces `` + `` funciona como `` +? ``, `` \\ * `` Como `` \\ *? `` Y así "
"sucesivamente"

# 1b7fe8d2c6674960878b97725cbe44a2
#: ../../regexp_syntax.rst:439
msgid "### x"
msgstr "### X"

# ab35a0a2b23949748b43104e68246a98
#: ../../regexp_syntax.rst:441
msgid ""
"Extend your pattern’s legibility by permitting whitespace and comments (see "
"explanation below)."
msgstr ""
"Amplíe la legibilidad de su patrón permitiendo espacios en blanco y "
"comentarios (vea la explicación a continuación)."

# 61e8f0b5d8ff4b90b700f5e55c961b7c
#: ../../regexp_syntax.rst:444
msgid "### r"
msgstr "### r"

# d99041e46b0245dfbf138db8515d378b
#: ../../regexp_syntax.rst:446
msgid ""
"Non-standard modifier. If is set then range а-я additional include russian "
"letter ``ё``, ``А-Я``  additional include ``Ё``, and ``а-Я`` include all "
"russian symbols."
msgstr ""
"Modificador no estándar. Si se establece, el rango а-я adicional incluye la "
"letra rusa `` ё``, `` А-Я`` adicional incluye `` Ё``, y `` а-Я`` incluye "
"todos los símbolos rusos."

# 9c0bf373099043a3a000067626f7fd73
#: ../../regexp_syntax.rst:450
msgid ""
"Sorry for foreign users, but it’s set by default. If you want switch if off "
"by default - set false to global variable `RegExprModifierR "
"<#modifier_defs>`__."
msgstr ""
"Lo siento por los usuarios extranjeros, pero está configurado de forma "
"predeterminada. Si desea apagar si está desactivado de forma predeterminada,"
" establezca falso en la variable global `RegExprModifierR "
"&lt;#modifier_defs&gt;` __."

# 3c377316934041718ac686f39bdf75dc
#: ../../regexp_syntax.rst:454
msgid ""
"The `modifier /x <regexp_syntax.html#modifier_x>`__ itself needs a little "
"more explanation. It tells the TRegExpr to ignore whitespace that is neither"
" backslashed nor within a character class. You can use this to break up your"
" regular expression into (slightly) more readable parts. The ``#`` character"
" is also treated as a metacharacter introducing a comment, for example:"
msgstr ""
"El modificador / x <regexp_syntax.html#modifier_x> `__ necesita un poco más "
"de explicación. Le dice a TRegExpr que ignore los espacios en blanco que no "
"están recortados ni dentro de una clase de caracteres. Puede usar esto para "
"dividir su expresión regular en partes (un poco) más legibles. El carácter "
"`` # `` también se trata como un metacarácter que introduce un comentario, "
"por ejemplo:"

# 37e93e770a8f4e238ece39fad50a3eae
#: ../../regexp_syntax.rst:469
msgid ""
"This also means that if you want real whitespace or ``#`` characters in the "
"pattern (outside a character class, where they are unaffected by ``/x``), "
"that you’ll either have to escape them or encode them using octal or hex "
"escapes. Taken together, these features go a long way towards making regular"
" expressions text more readable."
msgstr ""
"Esto también significa que si quieres que haya espacios en blanco reales o "
"caracteres `` # `` en el patrón (fuera de una clase de caracteres, donde no "
"estén afectados por `` / x``), tendrás que escapar de ellos o codificarlos "
"Utilizando escapes octales o hexagonales. En conjunto, estas características"
" contribuyen en gran medida a hacer que el texto de las expresiones "
"regulares sea más legible."

# aa64c2f338a04b289fe78d3cfa633298
#: ../../regexp_syntax.rst:476
msgid "Perl extensions"
msgstr "Extensiones perl"

# a9b874f64bfd435892ffbcc7a97df1a0
#: ../../regexp_syntax.rst:481
msgid ""
"You may use it into r.e. for modifying modifiers by the fly. If this "
"construction inlined into subexpression, then it effects only into this "
"subexpression"
msgstr ""
"Puedes usarlo para re modificar modificadores por la marcha. Si esta "
"construcción está en línea en una subexpresión, entonces solo afecta a esta "
"subexpresión"

# 53b90f25371d42e8a3ef2f3433b16fd0
#: ../../regexp_syntax.rst:498
msgid "(?#text)"
msgstr "(?#texto)"

# 02ed8d39191842edbf00cc22d3f634e0
#: ../../regexp_syntax.rst:500
msgid ""
"A comment, the text is ignored. Note that TRegExpr closes the comment as "
"soon as it sees a ``)``, so there is no way to put a literal ``)`` in the "
"comment."
msgstr ""
"Un comentario, el texto se ignora. Tenga en cuenta que TRegExpr cierra el "
"comentario tan pronto como ve un ``) ``, por lo que no hay manera de poner "
"un ``) `literal en el comentario."

# 92033bf22124478a99083d06a522aca6
#: ../../regexp_syntax.rst:504
msgid ""
"Just now don’t forget to read the `FAQ <faq.html>`__ (expecially ‘non-"
"greediness’ optimization `question <faq.html#nongreedyoptimization>`__)."
msgstr ""
"Ahora mismo no te olvides de leer las `Preguntas frecuentes <faq.html> `__ "
"(especialmente la pregunta de la optimización &#39;no avaricia&#39; "
"<faq.html#nongreedyoptimization> `__)."
