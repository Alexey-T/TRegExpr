# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-26 13:41+0300\n"
"PO-Revision-Date: 2019-05-08 09:12+0000\n"
"Last-Translator: Andrey Sorokin <filbert@yandex.ru>, 2019\n"
"Language-Team: Spanish "
"(https://www.transifex.com/masterAndrey/teams/98461/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# 8b91b48aa8cc4fa6989704106b075f9b
#: ../../faq.rst:6
msgid "English"
msgstr ""

# de8eaec964b44caa969d4c0554260f18
#: ../../faq.rst:7
#, fuzzy
msgid "`Русский <https://regex.sorokin.engineer/ru/latest/faq.html>`__"
msgstr "`Русский <https://regex.sorokin.engineer/ru/latest/index.html>`__"

# 5b034b6ed0fd4e8eb43b54c7af919236
#: ../../faq.rst:8
#, fuzzy
msgid "`Deutsch <https://regex.sorokin.engineer/de/latest/faq.html>`__"
msgstr "`Deutsch <https://regex.sorokin.engineer/de/latest/index.html>`__"

# 30275a62ea3b485dad6213838e7cef44
#: ../../faq.rst:9
#, fuzzy
msgid "`Български <https://regex.sorokin.engineer/bg/latest/faq.html>`__"
msgstr "`Български <https://regex.sorokin.engineer/bg/latest/index.html>`__"

# 4bfdf6e0a993484180e08f82511217d4
#: ../../faq.rst:10
#, fuzzy
msgid "`Français <https://regex.sorokin.engineer/fr/latest/faq.html>`__"
msgstr "`Français <https://regex.sorokin.engineer/fr/latest/index.html>`__"

# 26f7df8f207445a7b791f6271a151d29
#: ../../faq.rst:11
#, fuzzy
msgid "`Español <https://regex.sorokin.engineer/es/latest/faq.html>`__"
msgstr "`Español <https://regex.sorokin.engineer/es/latest/index.html>`__"

# f4c5d9543b744cefaa7403e79a14612f
#: ../../faq.rst:14
msgid "FAQ"
msgstr "Preguntas más frecuentes"

# 9d3d7b3a9c734313b57e8cb0b4901cdb
#: ../../faq.rst:17
msgid "I found a terrible bug: TRegExpr raises Access Violation exception!"
msgstr ""
"Encontré un error terrible: TRegExpr genera una excepción de violación de"
" acceso."

# ace139c552db474ba39e0daa651c0daf
# a9d0e107500348919c95fcec7ad22651
# 04f6ceb1e42a47da98c095c1e10a0984
# 8af8f4daa99549cc9d8319053bf3c32a
# 1cc25edebc32455ba0a3efb294db4ada
# 00d7961f3bad4f479aedf0242255e555
# 3b0b6ba80aa948e783a39ab9e0e58f0e
# ed3681da4ce948c482690f6afb8fb8c5
# feea56036d58492094e1d31967becbca
# 2d9ed3e1f7ae46d180a969f71e21797c
# 223ecf4e33b141cba16ad42fd010bfb1
#: ../../faq.rst:19 ../../faq.rst:44 ../../faq.rst:54 ../../faq.rst:70
#: ../../faq.rst:83 ../../faq.rst:103 ../../faq.rst:114 ../../faq.rst:134
#: ../../faq.rst:161 ../../faq.rst:173 ../../faq.rst:186
msgid "**Answer**"
msgstr "**Responder**"

# aa5401bb8d154a31b530a511217062db
#: ../../faq.rst:21
msgid ""
"You must create the object before usage. So, after you declared something"
" like:"
msgstr ""
"Debe crear el objeto antes de su uso. Entonces, después de que declaraste"
" algo como:"

# eca009ee9dbd4f7c8edc26ab7b79cbed
#: ../../faq.rst:24
msgid "r : TRegExpr"
msgstr "r: TRegExpr"

# adf7e68737db4f318715259407cacfeb
#: ../../faq.rst:28
msgid "do not forget to create the object instance:"
msgstr "No te olvides de crear la instancia de objeto:"

# 2d2cd9a824d44bf0a270e4bd89ebb334
#: ../../faq.rst:30
msgid "r := TRegExpr.Create."
msgstr "r: = TRegExpr.Create."

# 6c23b4624c4446cb96a88dc880a175f6
#: ../../faq.rst:35
msgid "Regular expressions with (?=...) do not work"
msgstr "Las expresiones regulares con (? = ...) no funcionan"

# dd699bf2d1e343faa9f008afce89241b
#: ../../faq.rst:37
msgid ""
"Look ahead is not implemented in the TRegExpr. But in many cases you can "
"easily `replace it with simple subexpressions "
"<regular_expressions.html#lookahead>`_."
msgstr ""
"Mirar al futuro no está implementado en el TRegExpr. Pero en muchos casos"
" puede `reemplazarlo fácilmente con subexpresiones simples "
"<regular_expressions.html#lookahead>`_."

# 86e279db0f2a4191bbad43ddc6f6e72f
#: ../../faq.rst:42
msgid "Does it support Unicode?"
msgstr "¿Es compatible con Unicode?"

# f77cadf056444008ae8430cd57745a0a
#: ../../faq.rst:46
msgid "`How to use Unicode <tregexpr.html#unicode>`__"
msgstr "`Cómo usar Unicode <tregexpr.html#unicode>`__"

# 9bbce3d11e354a42a81f07c7800ac04f
#: ../../faq.rst:49
msgid "Why does TRegExpr return more then one line?"
msgstr "¿Por qué TRegExpr devuelve más de una línea?"

# ca3bc0d659264d9a986005d388d99a22
#: ../../faq.rst:51
msgid ""
"For example, r.e. ``<font .\\*>`` returns the first ``<font``, then the "
"rest of the file including last ``</html>``."
msgstr ""
"Por ejemplo, re `` <font .\\*>`` devuelve el primer ``</font> <font``, "
"then the rest of the file including last ``</html> <font .\\*>``.</font>"

# 1d3c88ed2a134a19b7cdae39e3dad1fb
#: ../../faq.rst:56
msgid ""
"For backward compatibility, `modifier /s "
"<regular_expressions.html#modifier_s>`__ is ``On`` by default."
msgstr ""
"Para compatibilidad con versiones anteriores, `modificador / s "
"<regular_expressions.html#modifier_s>`__ es` `On`` por defecto."

# 9d6754378b234933acae90469163d133
#: ../../faq.rst:59
msgid ""
"Switch it Off and ``.`` will match any but `Line separators "
"<regular_expressions.html#syntax_line_separators>`__ - exactly as you "
"wish."
msgstr ""
"Apáguelo y ``.`` coincidirá con cualquiera, excepto con `Separadores de "
"línea <regular_expressions.html#syntax_line_separators>`__ - exactamente "
"como lo deseas."

# 9e4b34f73bc94f32bbf649d10793e127
#: ../../faq.rst:62
msgid "BTW I suggest ``<font ([^\\n>]*)>``, in ``Match[1]`` will be the URL."
msgstr ""
"Por cierto, sugiero que `` <font ([^\\n>] *)&gt; ``, en `` Match [1] `` "
"será la URL.</font>"

# 0cb563a1ae9d4d5bb9dc46b6ecfc90d2
#: ../../faq.rst:65
msgid "Why does TRegExpr return more then I expect?"
msgstr "¿Por qué TRegExpr regresa más de lo que esperaba?"

# af83ab7928d54746abad0592dc967ff3
#: ../../faq.rst:67
msgid ""
"For example r.e. ``<p>(.+)</p>`` applyed to string ``<p>a</p><p>b</p>`` "
"returns ``a</p><p>b`` but not ``a`` as I expected."
msgstr ""
"Por ejemplo re `` <p> (. +) </p> `` aplicado a la cadena `` <p> una "
"</p><p> segundo </p> `` devuelve `` a </p><p> b`` pero no ``a`` como "
"esperaba."

# 1c546cbcc27543e1828cc89aafa7082f
#: ../../faq.rst:72
msgid ""
"By default all operators works in ``greedy`` mode, so they match as more "
"as it possible."
msgstr ""
"Por defecto, todos los operadores trabajan en modo ``codicioso``, para "
"que coincidan tanto como sea posible."

# 4bc5407d2acf4901a04110d5fcdf24e9
#: ../../faq.rst:75
msgid ""
"If you want ``non-greedy`` mode you can use ``non-greedy`` operators like"
" ``+?`` and so on or switch all operators into ``non-greedy`` mode with "
"help of modifier ``g`` (use appropriate TRegExpr properties or operator "
"``?(-g)`` in r.e.)."
msgstr ""
"Si quiere el modo `` no codicioso`` puede usar operadores `` no "
"codiciosos`` como ``+?`` Y así sucesivamente o cambiar todos los "
"operadores al modo `` no codicioso`` con la ayuda del modificador ` `g`` "
"(use las propiedades TRegExpr apropiadas o el operador` `? (- g)` `en "
"re)."

# a5ecf81a5374494a981df531cbd30c5f
#: ../../faq.rst:81
msgid "How to parse sources like HTML with help of TRegExpr?"
msgstr "Cómo analizar fuentes como HTML con la ayuda de TRegExpr?"

# 53e7aca1bcc846ac992b0955347782b0
#: ../../faq.rst:85
msgid "Sorry folks, but it's nearly impossible!"
msgstr "Lo siento amigos, pero es casi imposible!"

# f0ff947789034c17b931a65a3e9dea59
#: ../../faq.rst:87
msgid ""
"Of course, you can easily use TRegExpr for extracting some information "
"from HTML, as shown in my examples, but if you want accurate parsing you "
"have to use real parser, not r.e."
msgstr ""
"Por supuesto, puede usar TRegExpr fácilmente para extraer cierta "
"información de HTML, como se muestra en mis ejemplos, pero si desea un "
"análisis preciso, tiene que usar un analizador real, no"

# 8c033d5410014914bb489d51e80a89af
#: ../../faq.rst:91
msgid ""
"You can read full explanation in Tom Christiansen and Nathan Torkington "
"``Perl Cookbook``, for example."
msgstr ""
"Puede leer la explicación completa en Tom Christiansen y Nathan "
"Torkington `` Perl Cookbook``, por ejemplo."

# fdc4d0c9b7e74c74918fabe35cdcc25a
#: ../../faq.rst:94
msgid ""
"In short - there are many structures that can be easy parsed by real "
"parser but cannot at all by r.e., and real parser is much faster to do "
"the parsing, because r.e. doesn't simply scan input stream, it performs "
"optimization search that can take a lot of time."
msgstr ""
"En resumen, hay muchas estructuras que pueden analizarse fácilmente con "
"un analizador real, pero que no se pueden realizar por completo, y el "
"analizador real es mucho más rápido que el análisis, porque no solo "
"escanea el flujo de entrada, realiza una búsqueda de optimización que "
"puede realizar un montón de tiempo."

# 9c71fc46337846998fb6a0ee855dd9c9
#: ../../faq.rst:101
msgid "Is there a way to get multiple matches of a pattern on TRegExpr?"
msgstr ""
"¿Hay alguna forma de obtener varias coincidencias de un patrón en "
"TRegExpr?"

# 377af4e77ecc4dbeb4ea6278a4a3e34c
#: ../../faq.rst:105
msgid "You can iterate matches with ExecNext method."
msgstr "Puede iterar coincidencias con el método ExecNext."

# bf61bcf537e84477ba2367b56f92d8b7
#: ../../faq.rst:107
msgid ""
"If you want some example, please take a look at ``TRegExpr.Replace`` "
"method implementation or at the examples for `HyperLinksDecorator "
"<demos.html>`_"
msgstr ""
"Si desea algún ejemplo, consulte la implementación del método "
"``TRegExpr.Replace`` o los ejemplos de `HyperLinksDecorator "
"<demos.html>`_"

# 4dedc5f5e32946a4b3440dd9bea863a2
#: ../../faq.rst:112
msgid ""
"I am checking user input. Why does TRegExpr return ``True`` for wrong "
"input strings?"
msgstr ""
"Estoy comprobando la entrada del usuario. ¿Por qué TRegExpr devuelve "
"``True`` para las cadenas de entrada incorrectas?"

# dc6abd55eada40e7948ade41a508bbad
#: ../../faq.rst:116
msgid ""
"In many cases TRegExpr users forget that regular expression is for "
"**search** in input string."
msgstr ""
"En muchos casos, los usuarios de TRegExpr olvidan que la expresión "
"regular es para ** búsqueda ** en la cadena de entrada."

# 8ea46cd41a804258930bda50eb03453c
#: ../../faq.rst:119
msgid ""
"So, for example if you use ``\\d{4,4}`` expression, you will get success "
"for wrong user inputs like ``12345`` or ``any letters 1234``."
msgstr ""
"Entonces, por ejemplo, si usa la expresión `` \\ d {4,4} ``, obtendrá el "
"éxito para las entradas de usuario incorrectas como ``12345`` o `` "
"cualquier letra 1234``."

# 51604eec8f1a4b6397435d2e558b294d
#: ../../faq.rst:122
msgid ""
"You have to check from line start to line end to ensure there are no "
"anything else around: ``^\\d{4,4}$``."
msgstr ""
"Debe verificar desde el inicio de la línea hasta el final de la línea "
"para asegurarse de que no haya nada más alrededor: `` ^ \\ d {4,4} $ ``."

# 3c95393d60c64116a7b3bc0d86c57cac
#: ../../faq.rst:128
msgid "Why does non-greedy iterators sometimes work as in greedy mode?"
msgstr ""
"¿Por qué los iteradores no codiciosos a veces funcionan como en modo "
"codicioso?"

# 6a94e68f92e1432481182e29373d2f1f
#: ../../faq.rst:130
msgid ""
"For example, the r.e. ``a+?,b+?`` applied to string ``aaa,bbb`` matches "
"``aaa,b``, but should it not match ``a,b`` because of non-greediness of "
"first iterator?"
msgstr ""
"Por ejemplo, ¿se aplica r.e. ``a+?b+? `` A la cadena ``aaa,bbb`` coincide"
" con ``aaa,b``, pero no debe coincidir con ``a,b`` debido a la falta de "
"codicia de primer iterador?"

# 0abe79b4fc0d4aec80fbbc6cb4de06e2
#: ../../faq.rst:136
msgid ""
"This is because of TRegExpr way to work. In fact many others r.e. engines"
" work exactly the same: they performe only ``simple`` search "
"optimization, and do not try to do the best optimization."
msgstr ""
"Esto se debe a la manera de trabajar de TRegExpr. De hecho, muchos otros "
"motores funcionan exactamente de la misma manera: solo realizan la "
"optimización de búsqueda ``simple``, y no intentan hacer la mejor "
"optimización."

# 35e4650d4ecf4bb1a7544658ab8bad07
#: ../../faq.rst:140
msgid ""
"In some cases it's bad, but in common it's rather advantage then "
"limitation, because of performance and predictability reasons."
msgstr ""
"En algunos casos es malo, pero en general es más una ventaja que una "
"limitación, debido a razones de rendimiento y previsibilidad."

# d5fc27db2e49486c859a0696c2f3947f
#: ../../faq.rst:143
msgid ""
"The main rule - r.e. first of all try to match from current place and "
"only if that's completely impossible move forward by one char and try "
"again from next position in the text."
msgstr ""
"La regla principal es, en primer lugar, tratar de hacer coincidir desde "
"el lugar actual y solo si eso es completamente imposible avanzar una vez "
"e intentar nuevamente desde la siguiente posición en el texto."

# 36fd9a7e76324f84a3bda28ccd3b1b8e
#: ../../faq.rst:147
msgid ""
"So, if you use ``a,b+?`` it'll match ``a,b``. In case of ``a+?,b+?`` it's"
" now not recommended (we add non-greedy modifyer) but still possible to "
"match more then one ``a``, so TRegExpr will do it."
msgstr ""
"Entonces, si usas ``a,b+?`` Coincidirá con ``a,b``. En el caso de "
"``a+?,b+?`` Ahora no se recomienda (agregamos un modificador no "
"codicioso) pero aún es posible que coincida con más de un ``a``, por lo "
"que TRegExpr lo hará."

# 6d3322cb2d6a4ac6a79ef91632c9d04c
#: ../../faq.rst:151
msgid ""
"TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and "
"check - would it will be \"better\" match. Fisrt of all, just because "
"there is no way to say it's more or less good match."
msgstr ""
"TRegExpr como el de Perl o Unix no intenta avanzar y comprobar, sería "
"&quot;mejor&quot; coincidencia. A decir verdad, solo porque no hay manera"
" de decir que sea más o menos una buena combinación."

# e7b4ac68b8dc440da1b092a3e4be7f69
#: ../../faq.rst:157
msgid "How can I use TRegExpr with Borland C++ Builder?"
msgstr "¿Cómo puedo usar TRegExpr con Borland C ++ Builder?"

# e3175e4aaf3e4a4286a23bcf99325e70
#: ../../faq.rst:159
msgid "I have a problem since no header file (``.h`` or ``.hpp``) is available."
msgstr ""
"Tengo un problema porque no hay ningún archivo de encabezado (``.h`` o "
"``.hpp``) disponible."

# 56e168e7f59f406584b26e23f454de7d
#: ../../faq.rst:163
msgid "Add ``RegExpr.pas`` to ``bcb`` project."
msgstr "Agregue ``RegExpr.pas`` al proyecto ``bcb``."

# 564dbd5c8a054246be9e733a5bfc8081
#: ../../faq.rst:164
msgid "Compile project. This generates the header file ``RegExpr.hpp``."
msgstr "Compilar proyecto. Esto genera el archivo de encabezado ``RegExpr.hpp``."

# 458a6e97f830430b9c392329c3551f4d
#: ../../faq.rst:165
msgid "Now you can write code which uses the ``RegExpr`` unit."
msgstr "Ahora puede escribir código que usa la unidad ``RegExpr``."

# 5c694c5ffce044dc89eb33065913b119
#: ../../faq.rst:166
msgid "Don't forget to add  ``#include “RegExpr.hpp”`` where needed."
msgstr "No olvide agregar `` #include “RegExpr.hpp” `` donde sea necesario."

# dae10011da1a4048bdee249504151e87
#: ../../faq.rst:167
msgid ""
"Don't forget to replace all ``\\`` in regular expressions with ``\\\\`` "
"or redefined `EscChar <tregexpr.html#escchar>`__ const."
msgstr ""
"No se olvide de reemplazar todos los ``\\`` en expresiones regulares con "
"``\\\\`` o redefinido `EscChar <tregexpr.html#escchar>`__ const."

# 264106ace4e942d59634d2831942aaa9
#: ../../faq.rst:171
msgid ""
"Why many r.e. (including r.e. from TRegExpr help and demo) work wrong in "
"Borland C++ Builder?"
msgstr ""
"¿Por qué muchos re (incluyendo re desde TRegExpr help y demo) funcionan "
"mal en Borland C ++ Builder?"

# eb9cfc8291e141f591ea9c3c4341f5b4
#: ../../faq.rst:175
msgid ""
"The hint is in the previous question ;) Symbol ``\\`` has special meaning"
" in ``C++``, so you have to ``escape`` it (as described in previous "
"answer). But if you don't like r.e. like ``\\\\w+\\\\\\\\w+\\\\.\\\\w+`` "
"you can redefine the constant ``EscChar`` (in ``RegExpr.pas``). For "
"example ``EscChar = \"/\"``. Then you can write ``/w+/w+/./w+``, looks "
"unusual but more readable."
msgstr ""
"La sugerencia se encuentra en la pregunta anterior;) El símbolo ``\\`` "
"tiene un significado especial en `` C ++ ``, por lo que tiene que "
"``escapar`` (como se describe en la respuesta anterior). Pero si no te "
"gusta re como ``\\\\w + \\\\\\\\ w + \\\\. \\\\ w + `` puedes redefinir "
"la constante ``EscChar`` (en ``RegExpr.pas``). Por ejemplo `` EscChar = "
"&quot;/&quot; ``. Luego puede escribir `` / w + / w + /. / W + ``, parece"
" inusual pero más legible."

# d71401485c1640b29d19998af0548ae7
#: ../../faq.rst:184
msgid "Why TRegExpr does not work with strings with #0 inside?"
msgstr ""

# 8c7a115a5d18412ca3b276de6978645a
#: ../../faq.rst:188
msgid ""
"The TRegExpr parser convert all strings to PChars and internally all "
"processing are based on #0k-terminated PChars."
msgstr ""

# 28d625d553ad49b591763bf49d5fb880
#: ../../faq.rst:191
msgid ""
"To make it work with #0 chars we need a big effort. Are you going to "
"volunteer to fix that?"
msgstr ""

# e2a3dc0c705640788818a205bca41480
#~ msgid "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"
#~ msgstr "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"

